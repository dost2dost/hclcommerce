{"ast":null,"code":"var registerSystem = require('../core/system').registerSystem;\n\nvar utils = require('../utils/');\n\nvar THREE = require('../lib/three');\n\nvar debug = utils.debug;\nvar warn = debug('components:renderer:warn');\n/**\n * Determines state of various renderer properties.\n */\n\nmodule.exports.System = registerSystem('renderer', {\n  schema: {\n    antialias: {\n      default: 'auto',\n      oneOf: ['true', 'false', 'auto']\n    },\n    highRefreshRate: {\n      default: utils.device.isOculusBrowser()\n    },\n    logarithmicDepthBuffer: {\n      default: 'auto',\n      oneOf: ['true', 'false', 'auto']\n    },\n    maxCanvasWidth: {\n      default: 1920\n    },\n    maxCanvasHeight: {\n      default: 1920\n    },\n    physicallyCorrectLights: {\n      default: false\n    },\n    precision: {\n      default: 'high',\n      oneOf: ['high', 'medium', 'low']\n    },\n    sortObjects: {\n      default: false\n    },\n    colorManagement: {\n      default: false\n    },\n    gammaOutput: {\n      default: false\n    },\n    alpha: {\n      default: true\n    },\n    foveationLevel: {\n      default: 0\n    }\n  },\n  init: function () {\n    var data = this.data;\n    var sceneEl = this.el; // This is the rendering engine, such as THREE.js so copy over any persistent properties from the rendering system.\n\n    var renderer = sceneEl.renderer;\n    renderer.sortObjects = data.sortObjects;\n    renderer.physicallyCorrectLights = data.physicallyCorrectLights;\n\n    if (data.colorManagement || data.gammaOutput) {\n      renderer.gammaOutput = true;\n      renderer.gammaFactor = 2.2;\n\n      if (data.gammaOutput) {\n        warn('Property `gammaOutput` is deprecated. Use `renderer=\"colorManagement: true;\"` instead.');\n      }\n    }\n\n    if (sceneEl.hasAttribute('antialias')) {\n      warn('Component `antialias` is deprecated. Use `renderer=\"antialias: true\"` instead.');\n    }\n\n    if (sceneEl.hasAttribute('logarithmicDepthBuffer')) {\n      warn('Component `logarithmicDepthBuffer` is deprecated. Use `renderer=\"logarithmicDepthBuffer: true\"` instead.');\n    }\n  },\n  applyColorCorrection: function (colorOrTexture) {\n    if (!this.data.colorManagement || !colorOrTexture) {\n      return;\n    } else if (colorOrTexture.isColor) {\n      colorOrTexture.convertSRGBToLinear();\n    } else if (colorOrTexture.isTexture) {\n      colorOrTexture.encoding = THREE.sRGBEncoding;\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/systems/renderer.js"],"names":["registerSystem","require","utils","THREE","debug","warn","module","exports","System","schema","antialias","default","oneOf","highRefreshRate","device","isOculusBrowser","logarithmicDepthBuffer","maxCanvasWidth","maxCanvasHeight","physicallyCorrectLights","precision","sortObjects","colorManagement","gammaOutput","alpha","foveationLevel","init","data","sceneEl","el","renderer","gammaFactor","hasAttribute","applyColorCorrection","colorOrTexture","isColor","convertSRGBToLinear","isTexture","encoding","sRGBEncoding"],"mappings":"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","sourcesContent":["var registerSystem = require('../core/system').registerSystem;\nvar utils = require('../utils/');\nvar THREE = require('../lib/three');\n\nvar debug = utils.debug;\nvar warn = debug('components:renderer:warn');\n\n/**\n * Determines state of various renderer properties.\n */\nmodule.exports.System = registerSystem('renderer', {\n  schema: {\n    antialias: {default: 'auto', oneOf: ['true', 'false', 'auto']},\n    highRefreshRate: {default: utils.device.isOculusBrowser()},\n    logarithmicDepthBuffer: {default: 'auto', oneOf: ['true', 'false', 'auto']},\n    maxCanvasWidth: {default: 1920},\n    maxCanvasHeight: {default: 1920},\n    physicallyCorrectLights: {default: false},\n    precision: {default: 'high', oneOf: ['high', 'medium', 'low']},\n    sortObjects: {default: false},\n    colorManagement: {default: false},\n    gammaOutput: {default: false},\n    alpha: {default: true},\n    foveationLevel: {default: 0}\n  },\n\n  init: function () {\n    var data = this.data;\n    var sceneEl = this.el;\n    // This is the rendering engine, such as THREE.js so copy over any persistent properties from the rendering system.\n    var renderer = sceneEl.renderer;\n\n    renderer.sortObjects = data.sortObjects;\n    renderer.physicallyCorrectLights = data.physicallyCorrectLights;\n\n    if (data.colorManagement || data.gammaOutput) {\n      renderer.gammaOutput = true;\n      renderer.gammaFactor = 2.2;\n      if (data.gammaOutput) {\n        warn('Property `gammaOutput` is deprecated. Use `renderer=\"colorManagement: true;\"` instead.');\n      }\n    }\n\n    if (sceneEl.hasAttribute('antialias')) {\n      warn('Component `antialias` is deprecated. Use `renderer=\"antialias: true\"` instead.');\n    }\n\n    if (sceneEl.hasAttribute('logarithmicDepthBuffer')) {\n      warn('Component `logarithmicDepthBuffer` is deprecated. Use `renderer=\"logarithmicDepthBuffer: true\"` instead.');\n    }\n  },\n\n  applyColorCorrection: function (colorOrTexture) {\n    if (!this.data.colorManagement || !colorOrTexture) {\n      return;\n    } else if (colorOrTexture.isColor) {\n      colorOrTexture.convertSRGBToLinear();\n    } else if (colorOrTexture.isTexture) {\n      colorOrTexture.encoding = THREE.sRGBEncoding;\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"script"}