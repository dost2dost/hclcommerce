{"ast":null,"code":"/* global DeviceOrientationEvent  */\nvar registerComponent = require('../core/component').registerComponent;\n\nvar THREE = require('../lib/three');\n\nvar utils = require('../utils/');\n\nvar bind = utils.bind; // To avoid recalculation at every mouse movement tick\n\nvar PI_2 = Math.PI / 2;\n/**\n * look-controls. Update entity pose, factoring mouse, touch, and WebVR API data.\n */\n\nmodule.exports.Component = registerComponent('look-controls', {\n  dependencies: ['position', 'rotation'],\n  schema: {\n    enabled: {\n      default: true\n    },\n    hmdEnabled: {\n      default: true\n    },\n    pointerLockEnabled: {\n      default: false\n    },\n    reverseMouseDrag: {\n      default: false\n    },\n    reverseTouchDrag: {\n      default: false\n    },\n    touchEnabled: {\n      default: true\n    }\n  },\n  init: function () {\n    this.deltaYaw = 0;\n    this.previousHMDPosition = new THREE.Vector3();\n    this.hmdQuaternion = new THREE.Quaternion();\n    this.magicWindowAbsoluteEuler = new THREE.Euler();\n    this.magicWindowDeltaEuler = new THREE.Euler();\n    this.position = new THREE.Vector3(); // To save / restore camera pose\n\n    this.savedRotation = new THREE.Vector3();\n    this.savedPosition = new THREE.Vector3();\n    this.magicWindowObject = new THREE.Object3D();\n    this.rotation = {};\n    this.deltaRotation = {};\n    this.savedPose = null;\n    this.pointerLocked = false;\n    this.setupMouseControls();\n    this.bindMethods();\n    this.el.object3D.matrixAutoUpdate = false;\n    this.el.object3D.updateMatrix();\n    this.setupMagicWindowControls();\n    this.savedPose = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler()\n    }; // Call enter VR handler if the scene has entered VR before the event listeners attached.\n\n    if (this.el.sceneEl.is('vr-mode')) {\n      this.onEnterVR();\n    }\n  },\n  setupMagicWindowControls: function () {\n    var magicWindowControls; // Only on mobile devices and only enabled if DeviceOrientation permission has been granted.\n\n    if (utils.device.isMobile()) {\n      magicWindowControls = this.magicWindowControls = new THREE.DeviceOrientationControls(this.magicWindowObject);\n\n      if (typeof DeviceOrientationEvent !== 'undefined' && DeviceOrientationEvent.requestPermission) {\n        magicWindowControls.enabled = false;\n\n        if (this.el.sceneEl.components['device-orientation-permission-ui'].permissionGranted) {\n          magicWindowControls.enabled = true;\n        } else {\n          this.el.sceneEl.addEventListener('deviceorientationpermissiongranted', function () {\n            magicWindowControls.enabled = true;\n          });\n        }\n      }\n    }\n  },\n  update: function (oldData) {\n    var data = this.data; // Disable grab cursor classes if no longer enabled.\n\n    if (data.enabled !== oldData.enabled) {\n      this.updateGrabCursor(data.enabled);\n    } // Reset pitch and yaw if disabling HMD.\n\n\n    if (oldData && !data.hmdEnabled && !oldData.hmdEnabled) {\n      this.pitchObject.rotation.set(0, 0, 0);\n      this.yawObject.rotation.set(0, 0, 0);\n    }\n\n    if (oldData && !data.pointerLockEnabled !== oldData.pointerLockEnabled) {\n      this.removeEventListeners();\n      this.addEventListeners();\n\n      if (this.pointerLocked) {\n        this.exitPointerLock();\n      }\n    }\n  },\n  tick: function (t) {\n    var data = this.data;\n\n    if (!data.enabled) {\n      return;\n    }\n\n    this.updateOrientation();\n  },\n  play: function () {\n    this.addEventListeners();\n  },\n  pause: function () {\n    this.removeEventListeners();\n\n    if (this.pointerLocked) {\n      this.exitPointerLock();\n    }\n  },\n  remove: function () {\n    this.removeEventListeners();\n\n    if (this.pointerLocked) {\n      this.exitPointerLock();\n    }\n  },\n  bindMethods: function () {\n    this.onMouseDown = bind(this.onMouseDown, this);\n    this.onMouseMove = bind(this.onMouseMove, this);\n    this.onMouseUp = bind(this.onMouseUp, this);\n    this.onTouchStart = bind(this.onTouchStart, this);\n    this.onTouchMove = bind(this.onTouchMove, this);\n    this.onTouchEnd = bind(this.onTouchEnd, this);\n    this.onEnterVR = bind(this.onEnterVR, this);\n    this.onExitVR = bind(this.onExitVR, this);\n    this.onPointerLockChange = bind(this.onPointerLockChange, this);\n    this.onPointerLockError = bind(this.onPointerLockError, this);\n  },\n\n  /**\n   * Set up states and Object3Ds needed to store rotation data.\n   */\n  setupMouseControls: function () {\n    this.mouseDown = false;\n    this.pitchObject = new THREE.Object3D();\n    this.yawObject = new THREE.Object3D();\n    this.yawObject.position.y = 10;\n    this.yawObject.add(this.pitchObject);\n  },\n\n  /**\n   * Add mouse and touch event listeners to canvas.\n   */\n  addEventListeners: function () {\n    var sceneEl = this.el.sceneEl;\n    var canvasEl = sceneEl.canvas; // Wait for canvas to load.\n\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', bind(this.addEventListeners, this));\n      return;\n    } // Mouse events.\n\n\n    canvasEl.addEventListener('mousedown', this.onMouseDown, false);\n    window.addEventListener('mousemove', this.onMouseMove, false);\n    window.addEventListener('mouseup', this.onMouseUp, false); // Touch events.\n\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    window.addEventListener('touchmove', this.onTouchMove);\n    window.addEventListener('touchend', this.onTouchEnd); // sceneEl events.\n\n    sceneEl.addEventListener('enter-vr', this.onEnterVR);\n    sceneEl.addEventListener('exit-vr', this.onExitVR); // Pointer Lock events.\n\n    if (this.data.pointerLockEnabled) {\n      document.addEventListener('pointerlockchange', this.onPointerLockChange, false);\n      document.addEventListener('mozpointerlockchange', this.onPointerLockChange, false);\n      document.addEventListener('pointerlockerror', this.onPointerLockError, false);\n    }\n  },\n\n  /**\n   * Remove mouse and touch event listeners from canvas.\n   */\n  removeEventListeners: function () {\n    var sceneEl = this.el.sceneEl;\n    var canvasEl = sceneEl && sceneEl.canvas;\n\n    if (!canvasEl) {\n      return;\n    } // Mouse events.\n\n\n    canvasEl.removeEventListener('mousedown', this.onMouseDown);\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('mouseup', this.onMouseUp); // Touch events.\n\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    window.removeEventListener('touchmove', this.onTouchMove);\n    window.removeEventListener('touchend', this.onTouchEnd); // sceneEl events.\n\n    sceneEl.removeEventListener('enter-vr', this.onEnterVR);\n    sceneEl.removeEventListener('exit-vr', this.onExitVR); // Pointer Lock events.\n\n    document.removeEventListener('pointerlockchange', this.onPointerLockChange, false);\n    document.removeEventListener('mozpointerlockchange', this.onPointerLockChange, false);\n    document.removeEventListener('pointerlockerror', this.onPointerLockError, false);\n  },\n\n  /**\n   * Update orientation for mobile, mouse drag, and headset.\n   * Mouse-drag only enabled if HMD is not active.\n   */\n  updateOrientation: function () {\n    var poseMatrix = new THREE.Matrix4();\n    return function () {\n      var object3D = this.el.object3D;\n      var pitchObject = this.pitchObject;\n      var yawObject = this.yawObject;\n      var pose;\n      var sceneEl = this.el.sceneEl; // In VR mode, THREE is in charge of updating the camera pose.\n\n      if (sceneEl.is('vr-mode') && sceneEl.checkHeadsetConnected()) {\n        // With WebXR THREE applies headset pose to the object3D matrixWorld internally.\n        // Reflect values back on position, rotation, scale for getAttribute to return the expected values.\n        if (sceneEl.hasWebXR) {\n          pose = sceneEl.renderer.xr.getCameraPose();\n\n          if (pose) {\n            poseMatrix.elements = pose.transform.matrix;\n            poseMatrix.decompose(object3D.position, object3D.rotation, object3D.scale);\n          }\n        }\n\n        return;\n      } else {\n        object3D.updateMatrix();\n      }\n\n      this.updateMagicWindowOrientation(); // On mobile, do camera rotation with touch events and sensors.\n\n      object3D.rotation.x = this.magicWindowDeltaEuler.x + pitchObject.rotation.x;\n      object3D.rotation.y = this.magicWindowDeltaEuler.y + yawObject.rotation.y;\n      object3D.rotation.z = this.magicWindowDeltaEuler.z;\n    };\n  }(),\n  updateMagicWindowOrientation: function () {\n    var magicWindowAbsoluteEuler = this.magicWindowAbsoluteEuler;\n    var magicWindowDeltaEuler = this.magicWindowDeltaEuler; // Calculate magic window HMD quaternion.\n\n    if (this.magicWindowControls && this.magicWindowControls.enabled) {\n      this.magicWindowControls.update();\n      magicWindowAbsoluteEuler.setFromQuaternion(this.magicWindowObject.quaternion, 'YXZ');\n\n      if (!this.previousMagicWindowYaw && magicWindowAbsoluteEuler.y !== 0) {\n        this.previousMagicWindowYaw = magicWindowAbsoluteEuler.y;\n      }\n\n      if (this.previousMagicWindowYaw) {\n        magicWindowDeltaEuler.x = magicWindowAbsoluteEuler.x;\n        magicWindowDeltaEuler.y += magicWindowAbsoluteEuler.y - this.previousMagicWindowYaw;\n        magicWindowDeltaEuler.z = magicWindowAbsoluteEuler.z;\n        this.previousMagicWindowYaw = magicWindowAbsoluteEuler.y;\n      }\n    }\n  },\n\n  /**\n   * Translate mouse drag into rotation.\n   *\n   * Dragging up and down rotates the camera around the X-axis (yaw).\n   * Dragging left and right rotates the camera around the Y-axis (pitch).\n   */\n  onMouseMove: function (event) {\n    var direction;\n    var movementX;\n    var movementY;\n    var pitchObject = this.pitchObject;\n    var previousMouseEvent = this.previousMouseEvent;\n    var yawObject = this.yawObject; // Not dragging or not enabled.\n\n    if (!this.data.enabled || !this.mouseDown && !this.pointerLocked) {\n      return;\n    } // Calculate delta.\n\n\n    if (this.pointerLocked) {\n      movementX = event.movementX || event.mozMovementX || 0;\n      movementY = event.movementY || event.mozMovementY || 0;\n    } else {\n      movementX = event.screenX - previousMouseEvent.screenX;\n      movementY = event.screenY - previousMouseEvent.screenY;\n    }\n\n    this.previousMouseEvent = event; // Calculate rotation.\n\n    direction = this.data.reverseMouseDrag ? 1 : -1;\n    yawObject.rotation.y += movementX * 0.002 * direction;\n    pitchObject.rotation.x += movementY * 0.002 * direction;\n    pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));\n  },\n\n  /**\n   * Register mouse down to detect mouse drag.\n   */\n  onMouseDown: function (evt) {\n    var sceneEl = this.el.sceneEl;\n\n    if (!this.data.enabled || sceneEl.is('vr-mode')) {\n      return;\n    } // Handle only primary button.\n\n\n    if (evt.button !== 0) {\n      return;\n    }\n\n    var canvasEl = sceneEl && sceneEl.canvas;\n    this.mouseDown = true;\n    this.previousMouseEvent = evt;\n    this.showGrabbingCursor();\n\n    if (this.data.pointerLockEnabled && !this.pointerLocked) {\n      if (canvasEl.requestPointerLock) {\n        canvasEl.requestPointerLock();\n      } else if (canvasEl.mozRequestPointerLock) {\n        canvasEl.mozRequestPointerLock();\n      }\n    }\n  },\n\n  /**\n   * Shows grabbing cursor on scene\n   */\n  showGrabbingCursor: function () {\n    this.el.sceneEl.canvas.style.cursor = 'grabbing';\n  },\n\n  /**\n   * Hides grabbing cursor on scene\n   */\n  hideGrabbingCursor: function () {\n    this.el.sceneEl.canvas.style.cursor = '';\n  },\n\n  /**\n   * Register mouse up to detect release of mouse drag.\n   */\n  onMouseUp: function () {\n    this.mouseDown = false;\n    this.hideGrabbingCursor();\n  },\n\n  /**\n   * Register touch down to detect touch drag.\n   */\n  onTouchStart: function (evt) {\n    if (evt.touches.length !== 1 || !this.data.touchEnabled || this.el.sceneEl.is('vr-mode')) {\n      return;\n    }\n\n    this.touchStart = {\n      x: evt.touches[0].pageX,\n      y: evt.touches[0].pageY\n    };\n    this.touchStarted = true;\n  },\n\n  /**\n   * Translate touch move to Y-axis rotation.\n   */\n  onTouchMove: function (evt) {\n    var direction;\n    var canvas = this.el.sceneEl.canvas;\n    var deltaY;\n    var yawObject = this.yawObject;\n\n    if (!this.touchStarted || !this.data.touchEnabled) {\n      return;\n    }\n\n    deltaY = 2 * Math.PI * (evt.touches[0].pageX - this.touchStart.x) / canvas.clientWidth;\n    direction = this.data.reverseTouchDrag ? 1 : -1; // Limit touch orientaion to to yaw (y axis).\n\n    yawObject.rotation.y -= deltaY * 0.5 * direction;\n    this.touchStart = {\n      x: evt.touches[0].pageX,\n      y: evt.touches[0].pageY\n    };\n  },\n\n  /**\n   * Register touch end to detect release of touch drag.\n   */\n  onTouchEnd: function () {\n    this.touchStarted = false;\n  },\n\n  /**\n   * Save pose.\n   */\n  onEnterVR: function () {\n    if (!this.el.sceneEl.checkHeadsetConnected()) {\n      return;\n    }\n\n    this.saveCameraPose();\n    this.el.object3D.position.set(0, 0, 0);\n    this.el.object3D.rotation.set(0, 0, 0);\n    this.el.object3D.updateMatrix();\n  },\n\n  /**\n   * Restore the pose.\n   */\n  onExitVR: function () {\n    if (!this.el.sceneEl.checkHeadsetConnected()) {\n      return;\n    }\n\n    this.restoreCameraPose();\n    this.previousHMDPosition.set(0, 0, 0);\n  },\n\n  /**\n   * Update Pointer Lock state.\n   */\n  onPointerLockChange: function () {\n    this.pointerLocked = !!(document.pointerLockElement || document.mozPointerLockElement);\n  },\n\n  /**\n   * Recover from Pointer Lock error.\n   */\n  onPointerLockError: function () {\n    this.pointerLocked = false;\n  },\n  // Exits pointer-locked mode.\n  exitPointerLock: function () {\n    document.exitPointerLock();\n    this.pointerLocked = false;\n  },\n\n  /**\n   * Toggle the feature of showing/hiding the grab cursor.\n   */\n  updateGrabCursor: function (enabled) {\n    var sceneEl = this.el.sceneEl;\n\n    function enableGrabCursor() {\n      sceneEl.canvas.classList.add('a-grab-cursor');\n    }\n\n    function disableGrabCursor() {\n      sceneEl.canvas.classList.remove('a-grab-cursor');\n    }\n\n    if (!sceneEl.canvas) {\n      if (enabled) {\n        sceneEl.addEventListener('render-target-loaded', enableGrabCursor);\n      } else {\n        sceneEl.addEventListener('render-target-loaded', disableGrabCursor);\n      }\n\n      return;\n    }\n\n    if (enabled) {\n      enableGrabCursor();\n      return;\n    }\n\n    disableGrabCursor();\n  },\n\n  /**\n   * Save camera pose before entering VR to restore later if exiting.\n   */\n  saveCameraPose: function () {\n    var el = this.el;\n    this.savedPose.position.copy(el.object3D.position);\n    this.savedPose.rotation.copy(el.object3D.rotation);\n    this.hasSavedPose = true;\n  },\n\n  /**\n   * Reset camera pose to before entering VR.\n   */\n  restoreCameraPose: function () {\n    var el = this.el;\n    var savedPose = this.savedPose;\n\n    if (!this.hasSavedPose) {\n      return;\n    } // Reset camera orientation.\n\n\n    el.object3D.position.copy(savedPose.position);\n    el.object3D.rotation.copy(savedPose.rotation);\n    this.hasSavedPose = false;\n  }\n});","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/components/look-controls.js"],"names":["registerComponent","require","THREE","utils","bind","PI_2","Math","PI","module","exports","Component","dependencies","schema","enabled","default","hmdEnabled","pointerLockEnabled","reverseMouseDrag","reverseTouchDrag","touchEnabled","init","deltaYaw","previousHMDPosition","Vector3","hmdQuaternion","Quaternion","magicWindowAbsoluteEuler","Euler","magicWindowDeltaEuler","position","savedRotation","savedPosition","magicWindowObject","Object3D","rotation","deltaRotation","savedPose","pointerLocked","setupMouseControls","bindMethods","el","object3D","matrixAutoUpdate","updateMatrix","setupMagicWindowControls","sceneEl","is","onEnterVR","magicWindowControls","device","isMobile","DeviceOrientationControls","DeviceOrientationEvent","requestPermission","components","permissionGranted","addEventListener","update","oldData","data","updateGrabCursor","pitchObject","set","yawObject","removeEventListeners","addEventListeners","exitPointerLock","tick","t","updateOrientation","play","pause","remove","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onExitVR","onPointerLockChange","onPointerLockError","mouseDown","y","add","canvasEl","canvas","window","document","removeEventListener","poseMatrix","Matrix4","pose","checkHeadsetConnected","hasWebXR","renderer","xr","getCameraPose","elements","transform","matrix","decompose","scale","updateMagicWindowOrientation","x","z","setFromQuaternion","quaternion","previousMagicWindowYaw","event","direction","movementX","movementY","previousMouseEvent","mozMovementX","mozMovementY","screenX","screenY","max","min","evt","button","showGrabbingCursor","requestPointerLock","mozRequestPointerLock","style","cursor","hideGrabbingCursor","touches","length","touchStart","pageX","pageY","touchStarted","deltaY","clientWidth","saveCameraPose","restoreCameraPose","pointerLockElement","mozPointerLockElement","enableGrabCursor","classList","disableGrabCursor","copy","hasSavedPose"],"mappings":"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","sourcesContent":["/* global DeviceOrientationEvent  */\nvar registerComponent = require('../core/component').registerComponent;\nvar THREE = require('../lib/three');\nvar utils = require('../utils/');\nvar bind = utils.bind;\n\n// To avoid recalculation at every mouse movement tick\nvar PI_2 = Math.PI / 2;\n\n/**\n * look-controls. Update entity pose, factoring mouse, touch, and WebVR API data.\n */\nmodule.exports.Component = registerComponent('look-controls', {\n  dependencies: ['position', 'rotation'],\n\n  schema: {\n    enabled: {default: true},\n    hmdEnabled: {default: true},\n    pointerLockEnabled: {default: false},\n    reverseMouseDrag: {default: false},\n    reverseTouchDrag: {default: false},\n    touchEnabled: {default: true}\n  },\n\n  init: function () {\n    this.deltaYaw = 0;\n    this.previousHMDPosition = new THREE.Vector3();\n    this.hmdQuaternion = new THREE.Quaternion();\n    this.magicWindowAbsoluteEuler = new THREE.Euler();\n    this.magicWindowDeltaEuler = new THREE.Euler();\n    this.position = new THREE.Vector3();\n    // To save / restore camera pose\n    this.savedRotation = new THREE.Vector3();\n    this.savedPosition = new THREE.Vector3();\n    this.magicWindowObject = new THREE.Object3D();\n    this.rotation = {};\n    this.deltaRotation = {};\n    this.savedPose = null;\n    this.pointerLocked = false;\n    this.setupMouseControls();\n    this.bindMethods();\n    this.el.object3D.matrixAutoUpdate = false;\n    this.el.object3D.updateMatrix();\n\n    this.setupMagicWindowControls();\n\n    this.savedPose = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler()\n    };\n\n    // Call enter VR handler if the scene has entered VR before the event listeners attached.\n    if (this.el.sceneEl.is('vr-mode')) { this.onEnterVR(); }\n  },\n\n  setupMagicWindowControls: function () {\n    var magicWindowControls;\n\n    // Only on mobile devices and only enabled if DeviceOrientation permission has been granted.\n    if (utils.device.isMobile()) {\n      magicWindowControls = this.magicWindowControls = new THREE.DeviceOrientationControls(this.magicWindowObject);\n      if (typeof DeviceOrientationEvent !== 'undefined' && DeviceOrientationEvent.requestPermission) {\n        magicWindowControls.enabled = false;\n        if (this.el.sceneEl.components['device-orientation-permission-ui'].permissionGranted) {\n          magicWindowControls.enabled = true;\n        } else {\n          this.el.sceneEl.addEventListener('deviceorientationpermissiongranted', function () {\n            magicWindowControls.enabled = true;\n          });\n        }\n      }\n    }\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n\n    // Disable grab cursor classes if no longer enabled.\n    if (data.enabled !== oldData.enabled) {\n      this.updateGrabCursor(data.enabled);\n    }\n\n    // Reset pitch and yaw if disabling HMD.\n    if (oldData && !data.hmdEnabled && !oldData.hmdEnabled) {\n      this.pitchObject.rotation.set(0, 0, 0);\n      this.yawObject.rotation.set(0, 0, 0);\n    }\n\n    if (oldData && !data.pointerLockEnabled !== oldData.pointerLockEnabled) {\n      this.removeEventListeners();\n      this.addEventListeners();\n      if (this.pointerLocked) { this.exitPointerLock(); }\n    }\n  },\n\n  tick: function (t) {\n    var data = this.data;\n    if (!data.enabled) { return; }\n    this.updateOrientation();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    if (this.pointerLocked) { this.exitPointerLock(); }\n  },\n\n  remove: function () {\n    this.removeEventListeners();\n    if (this.pointerLocked) { this.exitPointerLock(); }\n  },\n\n  bindMethods: function () {\n    this.onMouseDown = bind(this.onMouseDown, this);\n    this.onMouseMove = bind(this.onMouseMove, this);\n    this.onMouseUp = bind(this.onMouseUp, this);\n    this.onTouchStart = bind(this.onTouchStart, this);\n    this.onTouchMove = bind(this.onTouchMove, this);\n    this.onTouchEnd = bind(this.onTouchEnd, this);\n    this.onEnterVR = bind(this.onEnterVR, this);\n    this.onExitVR = bind(this.onExitVR, this);\n    this.onPointerLockChange = bind(this.onPointerLockChange, this);\n    this.onPointerLockError = bind(this.onPointerLockError, this);\n  },\n\n /**\n  * Set up states and Object3Ds needed to store rotation data.\n  */\n  setupMouseControls: function () {\n    this.mouseDown = false;\n    this.pitchObject = new THREE.Object3D();\n    this.yawObject = new THREE.Object3D();\n    this.yawObject.position.y = 10;\n    this.yawObject.add(this.pitchObject);\n  },\n\n  /**\n   * Add mouse and touch event listeners to canvas.\n   */\n  addEventListeners: function () {\n    var sceneEl = this.el.sceneEl;\n    var canvasEl = sceneEl.canvas;\n\n    // Wait for canvas to load.\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', bind(this.addEventListeners, this));\n      return;\n    }\n\n    // Mouse events.\n    canvasEl.addEventListener('mousedown', this.onMouseDown, false);\n    window.addEventListener('mousemove', this.onMouseMove, false);\n    window.addEventListener('mouseup', this.onMouseUp, false);\n\n    // Touch events.\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    window.addEventListener('touchmove', this.onTouchMove);\n    window.addEventListener('touchend', this.onTouchEnd);\n\n    // sceneEl events.\n    sceneEl.addEventListener('enter-vr', this.onEnterVR);\n    sceneEl.addEventListener('exit-vr', this.onExitVR);\n\n    // Pointer Lock events.\n    if (this.data.pointerLockEnabled) {\n      document.addEventListener('pointerlockchange', this.onPointerLockChange, false);\n      document.addEventListener('mozpointerlockchange', this.onPointerLockChange, false);\n      document.addEventListener('pointerlockerror', this.onPointerLockError, false);\n    }\n  },\n\n  /**\n   * Remove mouse and touch event listeners from canvas.\n   */\n  removeEventListeners: function () {\n    var sceneEl = this.el.sceneEl;\n    var canvasEl = sceneEl && sceneEl.canvas;\n\n    if (!canvasEl) { return; }\n\n    // Mouse events.\n    canvasEl.removeEventListener('mousedown', this.onMouseDown);\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('mouseup', this.onMouseUp);\n\n    // Touch events.\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    window.removeEventListener('touchmove', this.onTouchMove);\n    window.removeEventListener('touchend', this.onTouchEnd);\n\n    // sceneEl events.\n    sceneEl.removeEventListener('enter-vr', this.onEnterVR);\n    sceneEl.removeEventListener('exit-vr', this.onExitVR);\n\n    // Pointer Lock events.\n    document.removeEventListener('pointerlockchange', this.onPointerLockChange, false);\n    document.removeEventListener('mozpointerlockchange', this.onPointerLockChange, false);\n    document.removeEventListener('pointerlockerror', this.onPointerLockError, false);\n  },\n\n  /**\n   * Update orientation for mobile, mouse drag, and headset.\n   * Mouse-drag only enabled if HMD is not active.\n   */\n  updateOrientation: (function () {\n    var poseMatrix = new THREE.Matrix4();\n\n    return function () {\n      var object3D = this.el.object3D;\n      var pitchObject = this.pitchObject;\n      var yawObject = this.yawObject;\n      var pose;\n      var sceneEl = this.el.sceneEl;\n\n      // In VR mode, THREE is in charge of updating the camera pose.\n      if (sceneEl.is('vr-mode') && sceneEl.checkHeadsetConnected()) {\n        // With WebXR THREE applies headset pose to the object3D matrixWorld internally.\n        // Reflect values back on position, rotation, scale for getAttribute to return the expected values.\n        if (sceneEl.hasWebXR) {\n          pose = sceneEl.renderer.xr.getCameraPose();\n          if (pose) {\n            poseMatrix.elements = pose.transform.matrix;\n            poseMatrix.decompose(object3D.position, object3D.rotation, object3D.scale);\n          }\n        }\n        return;\n      } else {\n        object3D.updateMatrix();\n      }\n\n      this.updateMagicWindowOrientation();\n\n      // On mobile, do camera rotation with touch events and sensors.\n      object3D.rotation.x = this.magicWindowDeltaEuler.x + pitchObject.rotation.x;\n      object3D.rotation.y = this.magicWindowDeltaEuler.y + yawObject.rotation.y;\n      object3D.rotation.z = this.magicWindowDeltaEuler.z;\n    };\n  })(),\n\n  updateMagicWindowOrientation: function () {\n    var magicWindowAbsoluteEuler = this.magicWindowAbsoluteEuler;\n    var magicWindowDeltaEuler = this.magicWindowDeltaEuler;\n    // Calculate magic window HMD quaternion.\n    if (this.magicWindowControls && this.magicWindowControls.enabled) {\n      this.magicWindowControls.update();\n      magicWindowAbsoluteEuler.setFromQuaternion(this.magicWindowObject.quaternion, 'YXZ');\n      if (!this.previousMagicWindowYaw && magicWindowAbsoluteEuler.y !== 0) {\n        this.previousMagicWindowYaw = magicWindowAbsoluteEuler.y;\n      }\n      if (this.previousMagicWindowYaw) {\n        magicWindowDeltaEuler.x = magicWindowAbsoluteEuler.x;\n        magicWindowDeltaEuler.y += magicWindowAbsoluteEuler.y - this.previousMagicWindowYaw;\n        magicWindowDeltaEuler.z = magicWindowAbsoluteEuler.z;\n        this.previousMagicWindowYaw = magicWindowAbsoluteEuler.y;\n      }\n    }\n  },\n\n  /**\n   * Translate mouse drag into rotation.\n   *\n   * Dragging up and down rotates the camera around the X-axis (yaw).\n   * Dragging left and right rotates the camera around the Y-axis (pitch).\n   */\n  onMouseMove: function (event) {\n    var direction;\n    var movementX;\n    var movementY;\n    var pitchObject = this.pitchObject;\n    var previousMouseEvent = this.previousMouseEvent;\n    var yawObject = this.yawObject;\n\n    // Not dragging or not enabled.\n    if (!this.data.enabled || (!this.mouseDown && !this.pointerLocked)) { return; }\n\n    // Calculate delta.\n    if (this.pointerLocked) {\n      movementX = event.movementX || event.mozMovementX || 0;\n      movementY = event.movementY || event.mozMovementY || 0;\n    } else {\n      movementX = event.screenX - previousMouseEvent.screenX;\n      movementY = event.screenY - previousMouseEvent.screenY;\n    }\n    this.previousMouseEvent = event;\n\n    // Calculate rotation.\n    direction = this.data.reverseMouseDrag ? 1 : -1;\n    yawObject.rotation.y += movementX * 0.002 * direction;\n    pitchObject.rotation.x += movementY * 0.002 * direction;\n    pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));\n  },\n\n  /**\n   * Register mouse down to detect mouse drag.\n   */\n  onMouseDown: function (evt) {\n    var sceneEl = this.el.sceneEl;\n    if (!this.data.enabled || sceneEl.is('vr-mode')) { return; }\n    // Handle only primary button.\n    if (evt.button !== 0) { return; }\n\n    var canvasEl = sceneEl && sceneEl.canvas;\n\n    this.mouseDown = true;\n    this.previousMouseEvent = evt;\n    this.showGrabbingCursor();\n\n    if (this.data.pointerLockEnabled && !this.pointerLocked) {\n      if (canvasEl.requestPointerLock) {\n        canvasEl.requestPointerLock();\n      } else if (canvasEl.mozRequestPointerLock) {\n        canvasEl.mozRequestPointerLock();\n      }\n    }\n  },\n\n  /**\n   * Shows grabbing cursor on scene\n   */\n  showGrabbingCursor: function () {\n    this.el.sceneEl.canvas.style.cursor = 'grabbing';\n  },\n\n  /**\n   * Hides grabbing cursor on scene\n   */\n  hideGrabbingCursor: function () {\n    this.el.sceneEl.canvas.style.cursor = '';\n  },\n\n  /**\n   * Register mouse up to detect release of mouse drag.\n   */\n  onMouseUp: function () {\n    this.mouseDown = false;\n    this.hideGrabbingCursor();\n  },\n\n  /**\n   * Register touch down to detect touch drag.\n   */\n  onTouchStart: function (evt) {\n    if (evt.touches.length !== 1 ||\n        !this.data.touchEnabled ||\n        this.el.sceneEl.is('vr-mode')) { return; }\n    this.touchStart = {\n      x: evt.touches[0].pageX,\n      y: evt.touches[0].pageY\n    };\n    this.touchStarted = true;\n  },\n\n  /**\n   * Translate touch move to Y-axis rotation.\n   */\n  onTouchMove: function (evt) {\n    var direction;\n    var canvas = this.el.sceneEl.canvas;\n    var deltaY;\n    var yawObject = this.yawObject;\n\n    if (!this.touchStarted || !this.data.touchEnabled) { return; }\n\n    deltaY = 2 * Math.PI * (evt.touches[0].pageX - this.touchStart.x) / canvas.clientWidth;\n\n    direction = this.data.reverseTouchDrag ? 1 : -1;\n    // Limit touch orientaion to to yaw (y axis).\n    yawObject.rotation.y -= deltaY * 0.5 * direction;\n    this.touchStart = {\n      x: evt.touches[0].pageX,\n      y: evt.touches[0].pageY\n    };\n  },\n\n  /**\n   * Register touch end to detect release of touch drag.\n   */\n  onTouchEnd: function () {\n    this.touchStarted = false;\n  },\n\n  /**\n   * Save pose.\n   */\n  onEnterVR: function () {\n    if (!this.el.sceneEl.checkHeadsetConnected()) { return; }\n    this.saveCameraPose();\n    this.el.object3D.position.set(0, 0, 0);\n    this.el.object3D.rotation.set(0, 0, 0);\n    this.el.object3D.updateMatrix();\n  },\n\n  /**\n   * Restore the pose.\n   */\n  onExitVR: function () {\n    if (!this.el.sceneEl.checkHeadsetConnected()) { return; }\n    this.restoreCameraPose();\n    this.previousHMDPosition.set(0, 0, 0);\n  },\n\n  /**\n   * Update Pointer Lock state.\n   */\n  onPointerLockChange: function () {\n    this.pointerLocked = !!(document.pointerLockElement || document.mozPointerLockElement);\n  },\n\n  /**\n   * Recover from Pointer Lock error.\n   */\n  onPointerLockError: function () {\n    this.pointerLocked = false;\n  },\n\n  // Exits pointer-locked mode.\n  exitPointerLock: function () {\n    document.exitPointerLock();\n    this.pointerLocked = false;\n  },\n\n  /**\n   * Toggle the feature of showing/hiding the grab cursor.\n   */\n  updateGrabCursor: function (enabled) {\n    var sceneEl = this.el.sceneEl;\n\n    function enableGrabCursor () { sceneEl.canvas.classList.add('a-grab-cursor'); }\n    function disableGrabCursor () { sceneEl.canvas.classList.remove('a-grab-cursor'); }\n\n    if (!sceneEl.canvas) {\n      if (enabled) {\n        sceneEl.addEventListener('render-target-loaded', enableGrabCursor);\n      } else {\n        sceneEl.addEventListener('render-target-loaded', disableGrabCursor);\n      }\n      return;\n    }\n\n    if (enabled) {\n      enableGrabCursor();\n      return;\n    }\n    disableGrabCursor();\n  },\n\n  /**\n   * Save camera pose before entering VR to restore later if exiting.\n   */\n  saveCameraPose: function () {\n    var el = this.el;\n\n    this.savedPose.position.copy(el.object3D.position);\n    this.savedPose.rotation.copy(el.object3D.rotation);\n    this.hasSavedPose = true;\n  },\n\n  /**\n   * Reset camera pose to before entering VR.\n   */\n  restoreCameraPose: function () {\n    var el = this.el;\n    var savedPose = this.savedPose;\n\n    if (!this.hasSavedPose) { return; }\n\n    // Reset camera orientation.\n    el.object3D.position.copy(savedPose.position);\n    el.object3D.rotation.copy(savedPose.rotation);\n    this.hasSavedPose = false;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}