{"ast":null,"code":"var AEntity = require('../../core/a-entity');\n\nvar components = require('../../core/component').components;\n\nvar registerElement = require('../../core/a-register-element').registerElement;\n\nvar utils = require('../../utils/');\n\nvar debug = utils.debug;\nvar setComponentProperty = utils.entity.setComponentProperty;\nvar log = debug('extras:primitives:debug');\nvar warn = debug('extras:primitives:warn');\nvar primitives = module.exports.primitives = {};\n\nmodule.exports.registerPrimitive = function registerPrimitive(name, definition) {\n  name = name.toLowerCase();\n  log('Registering <%s>', name); // Deprecation warning for defaultAttributes usage.\n\n  if (definition.defaultAttributes) {\n    warn(\"The 'defaultAttributes' object is deprecated. Use 'defaultComponents' instead.\");\n  }\n\n  var primitive = registerElement(name, {\n    prototype: Object.create(AEntity.prototype, {\n      defaultComponentsFromPrimitive: {\n        value: definition.defaultComponents || definition.defaultAttributes || {}\n      },\n      deprecated: {\n        value: definition.deprecated || null\n      },\n      deprecatedMappings: {\n        value: definition.deprecatedMappings || {}\n      },\n      mappings: {\n        value: definition.mappings || {}\n      },\n      createdCallback: {\n        value: function () {\n          if (definition.deprecated) {\n            console.warn(definition.deprecated);\n          }\n\n          this.resolveMappingCollisions();\n        }\n      },\n\n      /**\n       * If a mapping collides with a registered component name\n       * it renames the mapping to componentname-property\n       */\n      resolveMappingCollisions: {\n        value: function () {\n          var mappings = this.mappings;\n          var self = this;\n          Object.keys(mappings).forEach(function resolveCollision(key) {\n            var newAttribute;\n\n            if (key !== key.toLowerCase()) {\n              warn('Mapping keys should be specified in lower case. The mapping key ' + key + ' may not be recognized');\n            }\n\n            if (components[key]) {\n              newAttribute = mappings[key].replace('.', '-');\n              mappings[newAttribute] = mappings[key];\n              delete mappings[key];\n              console.warn('The primitive ' + self.tagName.toLowerCase() + ' has a mapping collision. ' + 'The attribute ' + key + ' has the same name as a registered component and' + ' has been renamed to ' + newAttribute);\n            }\n          });\n        }\n      },\n      getExtraComponents: {\n        value: function () {\n          var attr;\n          var data;\n          var i;\n          var mapping;\n          var mixins;\n          var path;\n          var self = this; // Gather component data from default components.\n\n          data = utils.clone(this.defaultComponentsFromPrimitive); // Factor in mixins to overwrite default components.\n\n          mixins = this.getAttribute('mixin');\n\n          if (mixins) {\n            mixins = mixins.trim().split(' ');\n            mixins.forEach(function applyMixin(mixinId) {\n              var mixinComponents = self.sceneEl.querySelector('#' + mixinId).componentCache;\n              Object.keys(mixinComponents).forEach(function setComponent(name) {\n                data[name] = extend(data[name], mixinComponents[name]);\n              });\n            });\n          } // Gather component data from mappings.\n\n\n          for (i = 0; i < this.attributes.length; i++) {\n            attr = this.attributes[i];\n            mapping = this.mappings[attr.name];\n\n            if (mapping) {\n              path = utils.entity.getComponentPropertyPath(mapping);\n\n              if (path.constructor === Array) {\n                data[path[0]] = data[path[0]] || {};\n                data[path[0]][path[1]] = attr.value.trim();\n              } else {\n                data[path] = attr.value.trim();\n              }\n\n              continue;\n            }\n          }\n\n          return data;\n          /**\n           * For the base to be extensible, both objects must be pure JavaScript objects.\n           * The function assumes that base is undefined, or null or a pure object.\n           */\n\n          function extend(base, extension) {\n            if (isUndefined(base)) {\n              return copy(extension);\n            }\n\n            if (isUndefined(extension)) {\n              return copy(base);\n            }\n\n            if (isPureObject(base) && isPureObject(extension)) {\n              return utils.extendDeep(base, extension);\n            }\n\n            return copy(extension);\n          }\n\n          function isUndefined(value) {\n            return typeof value === 'undefined';\n          }\n\n          function copy(value) {\n            if (isPureObject(value)) {\n              return utils.extendDeep({}, value);\n            }\n\n            return value;\n          }\n\n          function isPureObject(value) {\n            return value !== null && value.constructor === Object;\n          }\n        }\n      },\n\n      /**\n       * Sync to attribute to component property whenever mapped attribute changes.\n       * If attribute is mapped to a component property, set the component property using\n       * the attribute value.\n       */\n      attributeChangedCallback: {\n        value: function (attr, oldVal, value) {\n          var componentName = this.mappings[attr];\n\n          if (attr in this.deprecatedMappings) {\n            console.warn(this.deprecatedMappings[attr]);\n          }\n\n          if (!attr || !componentName) {\n            return;\n          } // Set value.\n\n\n          setComponentProperty(this, componentName, value);\n        }\n      }\n    })\n  }); // Store.\n\n  primitives[name] = primitive;\n  return primitive;\n};\n/**\n * Add component mappings using schema.\n */\n\n\nfunction addComponentMapping(componentName, mappings) {\n  var schema = components[componentName].schema;\n  Object.keys(schema).map(function (prop) {\n    // Hyphenate where there is camelCase.\n    var attrName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(); // If there is a mapping collision, prefix with component name and hyphen.\n\n    if (mappings[attrName] !== undefined) {\n      attrName = componentName + '-' + prop;\n    }\n\n    mappings[attrName] = componentName + '.' + prop;\n  });\n}\n/**\n * Helper to define a primitive, building mappings using a component schema.\n */\n\n\nfunction definePrimitive(tagName, defaultComponents, mappings) {\n  // If no initial mappings provided, start from empty map.\n  mappings = mappings || {}; // From the default components, add mapping automagically.\n\n  Object.keys(defaultComponents).map(function buildMappings(componentName) {\n    addComponentMapping(componentName, mappings);\n  }); // Register the primitive.\n\n  module.exports.registerPrimitive(tagName, utils.extendDeep({}, null, {\n    defaultComponents: defaultComponents,\n    mappings: mappings\n  }));\n}\n\nmodule.exports.definePrimitive = definePrimitive;","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/extras/primitives/primitives.js"],"names":["AEntity","require","components","registerElement","utils","debug","setComponentProperty","entity","log","warn","primitives","module","exports","registerPrimitive","name","definition","toLowerCase","defaultAttributes","primitive","prototype","Object","create","defaultComponentsFromPrimitive","value","defaultComponents","deprecated","deprecatedMappings","mappings","createdCallback","console","resolveMappingCollisions","self","keys","forEach","resolveCollision","key","newAttribute","replace","tagName","getExtraComponents","attr","data","i","mapping","mixins","path","clone","getAttribute","trim","split","applyMixin","mixinId","mixinComponents","sceneEl","querySelector","componentCache","setComponent","extend","attributes","length","getComponentPropertyPath","constructor","Array","base","extension","isUndefined","copy","isPureObject","extendDeep","attributeChangedCallback","oldVal","componentName","addComponentMapping","schema","map","prop","attrName","undefined","definePrimitive","buildMappings"],"mappings":"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","sourcesContent":["var AEntity = require('../../core/a-entity');\nvar components = require('../../core/component').components;\nvar registerElement = require('../../core/a-register-element').registerElement;\nvar utils = require('../../utils/');\n\nvar debug = utils.debug;\nvar setComponentProperty = utils.entity.setComponentProperty;\nvar log = debug('extras:primitives:debug');\nvar warn = debug('extras:primitives:warn');\n\nvar primitives = module.exports.primitives = {};\n\nmodule.exports.registerPrimitive = function registerPrimitive (name, definition) {\n  name = name.toLowerCase();\n  log('Registering <%s>', name);\n\n  // Deprecation warning for defaultAttributes usage.\n  if (definition.defaultAttributes) {\n    warn(\"The 'defaultAttributes' object is deprecated. Use 'defaultComponents' instead.\");\n  }\n\n  var primitive = registerElement(name, {\n    prototype: Object.create(AEntity.prototype, {\n      defaultComponentsFromPrimitive: {\n        value: definition.defaultComponents || definition.defaultAttributes || {}\n      },\n      deprecated: {value: definition.deprecated || null},\n      deprecatedMappings: {value: definition.deprecatedMappings || {}},\n      mappings: {value: definition.mappings || {}},\n\n      createdCallback: {\n        value: function () {\n          if (definition.deprecated) { console.warn(definition.deprecated); }\n          this.resolveMappingCollisions();\n        }\n      },\n\n      /**\n       * If a mapping collides with a registered component name\n       * it renames the mapping to componentname-property\n       */\n      resolveMappingCollisions: {\n        value: function () {\n          var mappings = this.mappings;\n          var self = this;\n          Object.keys(mappings).forEach(function resolveCollision (key) {\n            var newAttribute;\n            if (key !== key.toLowerCase()) { warn('Mapping keys should be specified in lower case. The mapping key ' + key + ' may not be recognized'); }\n            if (components[key]) {\n              newAttribute = mappings[key].replace('.', '-');\n              mappings[newAttribute] = mappings[key];\n              delete mappings[key];\n              console.warn('The primitive ' + self.tagName.toLowerCase() + ' has a mapping collision. ' +\n                           'The attribute ' + key + ' has the same name as a registered component and' +\n                           ' has been renamed to ' + newAttribute);\n            }\n          });\n        }\n      },\n\n      getExtraComponents: {\n        value: function () {\n          var attr;\n          var data;\n          var i;\n          var mapping;\n          var mixins;\n          var path;\n          var self = this;\n\n          // Gather component data from default components.\n          data = utils.clone(this.defaultComponentsFromPrimitive);\n\n          // Factor in mixins to overwrite default components.\n          mixins = this.getAttribute('mixin');\n          if (mixins) {\n            mixins = mixins.trim().split(' ');\n            mixins.forEach(function applyMixin (mixinId) {\n              var mixinComponents = self.sceneEl.querySelector('#' + mixinId).componentCache;\n              Object.keys(mixinComponents).forEach(function setComponent (name) {\n                data[name] = extend(data[name], mixinComponents[name]);\n              });\n            });\n          }\n\n          // Gather component data from mappings.\n          for (i = 0; i < this.attributes.length; i++) {\n            attr = this.attributes[i];\n            mapping = this.mappings[attr.name];\n            if (mapping) {\n              path = utils.entity.getComponentPropertyPath(mapping);\n              if (path.constructor === Array) {\n                data[path[0]] = data[path[0]] || {};\n                data[path[0]][path[1]] = attr.value.trim();\n              } else {\n                data[path] = attr.value.trim();\n              }\n              continue;\n            }\n          }\n\n          return data;\n\n          /**\n           * For the base to be extensible, both objects must be pure JavaScript objects.\n           * The function assumes that base is undefined, or null or a pure object.\n           */\n          function extend (base, extension) {\n            if (isUndefined(base)) {\n              return copy(extension);\n            }\n            if (isUndefined(extension)) {\n              return copy(base);\n            }\n            if (isPureObject(base) && isPureObject(extension)) {\n              return utils.extendDeep(base, extension);\n            }\n            return copy(extension);\n          }\n\n          function isUndefined (value) {\n            return typeof value === 'undefined';\n          }\n\n          function copy (value) {\n            if (isPureObject(value)) {\n              return utils.extendDeep({}, value);\n            }\n            return value;\n          }\n\n          function isPureObject (value) {\n            return value !== null && value.constructor === Object;\n          }\n        }\n      },\n\n      /**\n       * Sync to attribute to component property whenever mapped attribute changes.\n       * If attribute is mapped to a component property, set the component property using\n       * the attribute value.\n       */\n      attributeChangedCallback: {\n        value: function (attr, oldVal, value) {\n          var componentName = this.mappings[attr];\n\n          if (attr in this.deprecatedMappings) {\n            console.warn(this.deprecatedMappings[attr]);\n          }\n\n          if (!attr || !componentName) { return; }\n\n          // Set value.\n          setComponentProperty(this, componentName, value);\n        }\n      }\n    })\n  });\n\n  // Store.\n  primitives[name] = primitive;\n  return primitive;\n};\n\n/**\n * Add component mappings using schema.\n */\nfunction addComponentMapping (componentName, mappings) {\n  var schema = components[componentName].schema;\n  Object.keys(schema).map(function (prop) {\n    // Hyphenate where there is camelCase.\n    var attrName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    // If there is a mapping collision, prefix with component name and hyphen.\n    if (mappings[attrName] !== undefined) { attrName = componentName + '-' + prop; }\n    mappings[attrName] = componentName + '.' + prop;\n  });\n}\n\n/**\n * Helper to define a primitive, building mappings using a component schema.\n */\nfunction definePrimitive (tagName, defaultComponents, mappings) {\n  // If no initial mappings provided, start from empty map.\n  mappings = mappings || {};\n\n  // From the default components, add mapping automagically.\n  Object.keys(defaultComponents).map(function buildMappings (componentName) {\n    addComponentMapping(componentName, mappings);\n  });\n\n  // Register the primitive.\n  module.exports.registerPrimitive(tagName, utils.extendDeep({}, null, {\n    defaultComponents: defaultComponents,\n    mappings: mappings\n  }));\n}\nmodule.exports.definePrimitive = definePrimitive;\n"]},"metadata":{},"sourceType":"script"}