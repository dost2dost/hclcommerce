{"ast":null,"code":"/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AnimationMixin } from './features/animation.js';\nimport { AnnotationMixin } from './features/annotation.js';\nimport { ARMixin } from './features/ar.js';\nimport { ControlsMixin } from './features/controls.js';\nimport { EnvironmentMixin } from './features/environment.js';\nimport { LoadingMixin } from './features/loading.js';\nimport { MagicLeapMixin } from './features/magic-leap.js';\nimport { SceneGraphMixin } from './features/scene-graph.js';\nimport { StagingMixin } from './features/staging.js';\nimport ModelViewerElementBase from './model-viewer-base.js';\nimport { FocusVisiblePolyfillMixin } from './utilities/focus-visible.js'; // Uncomment these lines to export PMREM textures in Glitch:\n// export {default as TextureUtils} from './three-components/TextureUtils';\n// export * from 'three';\n\nexport const ModelViewerElement = AnnotationMixin(SceneGraphMixin(MagicLeapMixin(StagingMixin(EnvironmentMixin(ControlsMixin(ARMixin(LoadingMixin(AnimationMixin(FocusVisiblePolyfillMixin(ModelViewerElementBase))))))))));\ncustomElements.define('model-viewer', ModelViewerElement);","map":{"version":3,"sources":["../src/model-viewer.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAeA,SAAQ,cAAR,QAA6B,yBAA7B;AACA,SAAQ,eAAR,QAA8B,0BAA9B;AACA,SAAQ,OAAR,QAAsB,kBAAtB;AACA,SAAQ,aAAR,QAA4B,wBAA5B;AACA,SAAQ,gBAAR,QAA+B,2BAA/B;AACA,SAAQ,YAAR,QAA2B,uBAA3B;AACA,SAAQ,cAAR,QAA6B,0BAA7B;AACA,SAAQ,eAAR,QAA8B,2BAA9B;AACA,SAAQ,YAAR,QAA2B,uBAA3B;AACA,OAAO,sBAAP,MAAmC,wBAAnC;AACA,SAAQ,yBAAR,QAAwC,8BAAxC,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAM,kBAAkB,GAC3B,eAAe,CAAC,eAAe,CAAC,cAAc,CAAC,YAAY,CACvD,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAC9D,yBAAyB,CAAC,sBAAD,CADqC,CAAf,CAAb,CAAR,CAAd,CADuC,CAAb,CAAf,CAAhB,CADZ;AAOP,cAAc,CAAC,MAAf,CAAsB,cAAtB,EAAsC,kBAAtC","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AnimationMixin} from './features/animation.js';\nimport {AnnotationMixin} from './features/annotation.js';\nimport {ARMixin} from './features/ar.js';\nimport {ControlsMixin} from './features/controls.js';\nimport {EnvironmentMixin} from './features/environment.js';\nimport {LoadingMixin} from './features/loading.js';\nimport {MagicLeapMixin} from './features/magic-leap.js';\nimport {SceneGraphMixin} from './features/scene-graph.js';\nimport {StagingMixin} from './features/staging.js';\nimport ModelViewerElementBase from './model-viewer-base.js';\nimport {FocusVisiblePolyfillMixin} from './utilities/focus-visible.js';\n\n// Uncomment these lines to export PMREM textures in Glitch:\n// export {default as TextureUtils} from './three-components/TextureUtils';\n// export * from 'three';\n\nexport const ModelViewerElement =\n    AnnotationMixin(SceneGraphMixin(MagicLeapMixin(StagingMixin(\n        EnvironmentMixin(ControlsMixin(ARMixin(LoadingMixin(AnimationMixin(\n            FocusVisiblePolyfillMixin(ModelViewerElementBase))))))))));\n\nexport type ModelViewerElement = InstanceType<typeof ModelViewerElement>;\n\ncustomElements.define('model-viewer', ModelViewerElement);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'model-viewer': ModelViewerElement;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}