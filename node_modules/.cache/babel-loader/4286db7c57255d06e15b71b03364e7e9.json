{"ast":null,"code":"var _jsxFileName = \"F:\\\\_HCLCommece\\\\src\\\\component\\\\Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport LeftMenu from './LeftMenu';\nimport SubCategory from './SubCategory';\nimport FiltersPage from './FiltersPage';\nimport MainCategoryPage from \"./MainCategoryPage\";\nimport LeftMenuMainCat from \"./LeftMenuMainCat\";\nimport { connect } from \"react-redux\";\nimport Skeleton from '../Skeleton/Skeleton';\nimport './category.css';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showSearchResult = () => {\n      let searchWord = this.props.location.search.substring(8);\n      console.log(searchWord);\n      fetch(this.props.getAppSet.API.searchTerm + searchWord + '?searchSource=S').then(res => res.json()).then(json => {\n        this.setState({\n          items: json,\n          isLoaded: true,\n          searchStart: true,\n          searchNumItems: json.recordSetCount,\n          searchItem: this.props.location.search.substring(8)\n        });\n      }).catch(e => console.log(e) //this.setState\n      );\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: false,\n      searchStart: '',\n      searchNumItems: '',\n      searchItem: ''\n    };\n  }\n\n  componentDidMount(props) {\n    this.showSearchResult();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      console.log('props not matched');\n      this.showSearchResult();\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(Skeleton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"mainDiv CategoryPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"featuredProducts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\xA0\")), React.createElement(\"div\", {\n        className: \"imagesHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"searchHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Search results for \\\"\", this.state.searchItem, \"\\\" (\", this.state.searchNumItems, \" matches.)\")), this.state.loaderActive ? React.createElement(Skeleton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }) : [items].map(item => React.createElement(\"div\", {\n        key: item.recordSetCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, item.CatalogEntryView.map(insideItems => //if(item.recordSetTotal>1){\n      React.createElement(\"div\", {\n        className: \"product\",\n        key: insideItems.uniqueID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/Product/?${insideItems.uniqueID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: insideItems.name,\n        src: `${this.props.getAppSet.serverBaseURL}${insideItems.thumbnail}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, insideItems.name), React.createElement(\"div\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"$ \", insideItems.Price[0].priceValue), React.createElement(\"div\", {\n        className: \"addToCart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })) //}\n      ))))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getAppSet: state.getAppSet\n  };\n};\n\nexport default connect(mapStateToProps, null)(Search);","map":{"version":3,"sources":["F:/_HCLCommece/src/component/Search.js"],"names":["React","Component","Link","LeftMenu","SubCategory","FiltersPage","MainCategoryPage","LeftMenuMainCat","connect","Skeleton","Search","constructor","props","showSearchResult","searchWord","location","search","substring","console","log","fetch","getAppSet","API","searchTerm","then","res","json","setState","items","isLoaded","searchStart","searchNumItems","recordSetCount","searchItem","catch","e","state","componentDidMount","componentDidUpdate","prevProps","prevState","render","loaderActive","map","item","CatalogEntryView","insideItems","uniqueID","name","serverBaseURL","thumbnail","Price","priceValue","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LeftMenu from './LeftMenu';\r\nimport SubCategory from './SubCategory'\r\nimport FiltersPage from './FiltersPage'\r\nimport MainCategoryPage from \"./MainCategoryPage\";\r\nimport LeftMenuMainCat from \"./LeftMenuMainCat\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Skeleton from '../Skeleton/Skeleton'\r\nimport './category.css';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n            searchStart: '',\r\n            searchNumItems: '',\r\n            searchItem: ''\r\n        }\r\n    }\r\n     \r\n    componentDidMount(props) {\r\n        this.showSearchResult()\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps !==  this.props){\r\n            console.log('props not matched')\r\n            this.showSearchResult()\r\n        }\r\n    } \r\n    showSearchResult = () => {\r\n        let searchWord = this.props.location.search.substring(8)\r\n        console.log(searchWord)\r\n        fetch(this.props.getAppSet.API.searchTerm+searchWord+'?searchSource=S')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    items: json,\r\n                    isLoaded: true,\r\n                    searchStart: true,\r\n                    searchNumItems:json.recordSetCount,\r\n                    searchItem: this.props.location.search.substring(8)\r\n                })\r\n\r\n            }).catch(\r\n                e => console.log(e)\r\n                //this.setState\r\n                );\r\n    }\r\n    render() {\r\n        var { isLoaded, items } = this.state;\r\n        if(!isLoaded){\r\n            return <Skeleton />\r\n        }\r\n        else{ \r\n            return(\r\n                <div className=\"mainDiv CategoryPage\">\r\n                <div className=\"featuredProducts\"> \r\n                <div className=\"leftMenu\"><p>&nbsp;</p></div>\r\n                {/* <div className=\"leftMenu\">\r\n                    {[items].map((item, index) => (\r\n                            <div key={index}> \r\n                                {item.FacetView ? item.FacetView.slice(1).map(item1 => (\r\n                                    <div key={item1.value}>\r\n                                    {item1.Entry.map((item2, index) => (\r\n                            <div className=\"cateItem\" key={index}> \r\n                                <Link to={`/Category/? &cat=SubCat&Filter=${item2.label}`}>{item2.label} </Link>\r\n                            </div>\r\n                                    ))}\r\n                                    </div>\r\n                                )): null} \r\n                            </div>\r\n                        ))}\r\n                </div> */}\r\n\r\n                <div className=\"imagesHolder\"> \r\n                <div className=\"searchHeading\"><h1>Search results for \"{this.state.searchItem}\" ({this.state.searchNumItems} matches.)</h1></div>\r\n                {this.state.loaderActive ? <Skeleton /> :                    \r\n                    [items].map(item => (\r\n                        <div  key={item.recordSetCount} > \r\n                        \r\n                        {item.CatalogEntryView.map(insideItems => (\r\n                            //if(item.recordSetTotal>1){\r\n                            <div className=\"product\" key={insideItems.uniqueID}>\r\n                                <div className=\"name\">\r\n                                <Link to={`/Product/?${insideItems.uniqueID}`}>\r\n                                    <div className=\"name\"><img alt = {insideItems.name} src={`${this.props.getAppSet.serverBaseURL}${insideItems.thumbnail}`} /></div>\r\n                                </Link>\r\n                                </div>\r\n                                <div className=\"person\">{insideItems.name}</div> \r\n                                <div className=\"price\">$ {insideItems.Price[0].priceValue}</div>\r\n                                <div className=\"addToCart\">\r\n                                    {/* <a onClick={this.addToCartHandler.bind(this, insideItems.uniqueID)}>Add to Cart</a> */}\r\n                                {/* <Link to={`/Product/?${insideItems.uniqueID}`}>\r\n                                    Add to Cart\r\n                                </Link> */}\r\n                                </div>\r\n\r\n                            </div>\r\n                            //}\r\n                        ))}    \r\n                    </div>\r\n                    ))\r\n                }\r\n                </div>\r\n                </div>   \r\n\r\n                </div>          \r\n            )\r\n        }\r\n}\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        getAppSet: state.getAppSet\r\n    }\r\n};\r\nexport default connect(mapStateToProps, null)(Search);"]},"metadata":{},"sourceType":"module"}