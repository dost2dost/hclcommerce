{"ast":null,"code":"var error = require('debug')('device:error');\n\nvar vrDisplay;\nvar supportsVRSession = false;\nvar supportsARSession = false;\n/**\n * Oculus Browser 7 doesn't support the WebXR gamepads module.\n * We fallback to WebVR API and will hotfix when implementation is complete.\n */\n\nvar isWebXRAvailable = module.exports.isWebXRAvailable = !window.debug && navigator.xr !== undefined; // Catch vrdisplayactivate early to ensure we can enter VR mode after the scene loads.\n\nwindow.addEventListener('vrdisplayactivate', function (evt) {\n  var canvasEl; // WebXR takes priority if available.\n\n  if (isWebXRAvailable) {\n    return;\n  }\n\n  canvasEl = document.createElement('canvas');\n  vrDisplay = evt.display; // We need to make sure the canvas has a WebGL context associated with it.\n  // Otherwise, the requestPresent could be denied.\n\n  canvasEl.getContext('webgl', {}); // Request present immediately. a-scene will be allowed to enter VR without user gesture.\n\n  vrDisplay.requestPresent([{\n    source: canvasEl\n  }]).then(function () {}, function () {});\n}); // Support both WebVR and WebXR APIs.\n\nif (isWebXRAvailable) {\n  var updateEnterInterfaces = function () {\n    var sceneEl = document.querySelector('a-scene');\n\n    if (!sceneEl) {\n      window.addEventListener('DOMContentLoaded', updateEnterInterfaces);\n      return;\n    }\n\n    if (sceneEl.hasLoaded) {\n      sceneEl.components['vr-mode-ui'].updateEnterInterfaces();\n    } else {\n      sceneEl.addEventListener('loaded', updateEnterInterfaces);\n    }\n  };\n\n  var errorHandler = function (err) {\n    error('WebXR session support error: ' + err.message);\n  };\n\n  if (navigator.xr.isSessionSupported) {\n    // Current WebXR spec uses a boolean-returning isSessionSupported promise\n    navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\n      supportsVRSession = supported;\n      updateEnterInterfaces();\n    }).catch(errorHandler);\n    navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n      supportsARSession = supported;\n      updateEnterInterfaces();\n    }).catch(function () {});\n  } else if (navigator.xr.supportsSession) {\n    // Fallback for implementations that haven't updated to the new spec yet,\n    // the old version used supportsSession which is rejected for missing\n    // support.\n    navigator.xr.supportsSession('immersive-vr').then(function () {\n      supportsVRSession = true;\n      updateEnterInterfaces();\n    }).catch(errorHandler);\n    navigator.xr.supportsSession('immersive-ar').then(function () {\n      supportsARSession = true;\n      updateEnterInterfaces();\n    }).catch(function () {});\n  } else {\n    error('WebXR has neither isSessionSupported or supportsSession?!');\n  }\n} else {\n  if (navigator.getVRDisplays) {\n    navigator.getVRDisplays().then(function (displays) {\n      var sceneEl = document.querySelector('a-scene');\n      vrDisplay = displays.length && displays[0];\n\n      if (sceneEl) {\n        sceneEl.emit('displayconnected', {\n          vrDisplay: vrDisplay\n        });\n      }\n    });\n  }\n}\n\nfunction getVRDisplay() {\n  return vrDisplay;\n}\n\nmodule.exports.getVRDisplay = getVRDisplay;\n/**\n * Determine if a headset is connected by checking if a vrDisplay is available.\n */\n\nfunction checkHeadsetConnected() {\n  return supportsVRSession || supportsARSession || !!getVRDisplay();\n}\n\nmodule.exports.checkHeadsetConnected = checkHeadsetConnected;\n\nfunction checkARSupport() {\n  return supportsARSession;\n}\n\nmodule.exports.checkARSupport = checkARSupport;\n/**\n * Checks if browser is mobile and not stand-alone dedicated vr device.\n * @return {Boolean} True if mobile browser detected.\n */\n\nvar isMobile = function () {\n  var _isMobile = false;\n\n  (function (a) {\n    // eslint-disable-next-line no-useless-escape\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n      _isMobile = true;\n    }\n\n    if (isIOS() || isTablet() || isR7()) {\n      _isMobile = true;\n    }\n\n    if (isMobileVR()) {\n      _isMobile = false;\n    }\n  })(window.navigator.userAgent || window.navigator.vendor || window.opera);\n\n  return function () {\n    return _isMobile;\n  };\n}();\n\nmodule.exports.isMobile = isMobile;\n/**\n *  Detect tablet devices.\n *  @param {string} mockUserAgent - Allow passing a mock user agent for testing.\n */\n\nfunction isTablet(mockUserAgent) {\n  var userAgent = mockUserAgent || window.navigator.userAgent;\n  return /ipad|Nexus (7|9)|xoom|sch-i800|playbook|tablet|kindle/i.test(userAgent);\n}\n\nmodule.exports.isTablet = isTablet;\n\nfunction isIOS() {\n  return /iPad|iPhone|iPod/.test(window.navigator.platform);\n}\n\nmodule.exports.isIOS = isIOS;\n\nfunction isMobileDeviceRequestingDesktopSite() {\n  return !isMobile() && !isMobileVR() && window.orientation !== undefined;\n}\n\nmodule.exports.isMobileDeviceRequestingDesktopSite = isMobileDeviceRequestingDesktopSite;\n/**\n *  Detect Oculus Browser (standalone headset)\n */\n\nfunction isOculusBrowser() {\n  return /(OculusBrowser)/i.test(window.navigator.userAgent);\n}\n\nmodule.exports.isOculusBrowser = isOculusBrowser;\n/**\n *  Detect Firefox Reality (standalone headset)\n */\n\nfunction isFirefoxReality() {\n  return /(Mobile VR)/i.test(window.navigator.userAgent);\n}\n\nmodule.exports.isFirefoxReality = isFirefoxReality;\n/**\n *  Detect browsers in Stand-Alone headsets\n */\n\nfunction isMobileVR() {\n  return isOculusBrowser() || isFirefoxReality();\n}\n\nmodule.exports.isMobileVR = isMobileVR;\n\nfunction isR7() {\n  return /R7 Build/.test(window.navigator.userAgent);\n}\n\nmodule.exports.isR7 = isR7;\n/**\n * Checks mobile device orientation.\n * @return {Boolean} True if landscape orientation.\n */\n\nmodule.exports.isLandscape = function () {\n  var orientation = window.orientation;\n\n  if (isR7()) {\n    orientation += 90;\n  }\n\n  return orientation === 90 || orientation === -90;\n};\n/**\n * Check if running in a browser or spoofed browser (bundler).\n * We need to check a node api that isn't mocked on either side.\n * `require` and `module.exports` are mocked in browser by bundlers.\n * `window` is mocked in node.\n * `process` is also mocked by browserify, but has custom properties.\n */\n\n\nmodule.exports.isBrowserEnvironment = !!(!process || process.browser);\n/**\n * Check if running in node on the server.\n */\n\nmodule.exports.isNodeEnvironment = !module.exports.isBrowserEnvironment;","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/utils/device.js"],"names":["error","require","vrDisplay","supportsVRSession","supportsARSession","isWebXRAvailable","module","exports","window","debug","navigator","xr","undefined","addEventListener","evt","canvasEl","document","createElement","display","getContext","requestPresent","source","then","updateEnterInterfaces","sceneEl","querySelector","hasLoaded","components","errorHandler","err","message","isSessionSupported","supported","catch","supportsSession","getVRDisplays","displays","length","emit","getVRDisplay","checkHeadsetConnected","checkARSupport","isMobile","_isMobile","a","test","substr","isIOS","isTablet","isR7","isMobileVR","userAgent","vendor","opera","mockUserAgent","platform","isMobileDeviceRequestingDesktopSite","orientation","isOculusBrowser","isFirefoxReality","isLandscape","isBrowserEnvironment","process","browser","isNodeEnvironment"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,cAAjB,CAAZ;;AAEA,IAAIC,SAAJ;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AAEA;;;;;AAIA,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,OAAP,CAAeF,gBAAf,GAAkC,CAACG,MAAM,CAACC,KAAR,IAAiBC,SAAS,CAACC,EAAV,KAAiBC,SAA3F,C,CAEA;;AACAJ,MAAM,CAACK,gBAAP,CAAwB,mBAAxB,EAA6C,UAAUC,GAAV,EAAe;AAC1D,MAAIC,QAAJ,CAD0D,CAE1D;;AACA,MAAIV,gBAAJ,EAAsB;AAAE;AAAS;;AACjCU,EAAAA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAX;AACAf,EAAAA,SAAS,GAAGY,GAAG,CAACI,OAAhB,CAL0D,CAM1D;AACA;;AACAH,EAAAA,QAAQ,CAACI,UAAT,CAAoB,OAApB,EAA6B,EAA7B,EAR0D,CAS1D;;AACAjB,EAAAA,SAAS,CAACkB,cAAV,CAAyB,CAAC;AAACC,IAAAA,MAAM,EAAEN;AAAT,GAAD,CAAzB,EAA+CO,IAA/C,CAAoD,YAAY,CAAE,CAAlE,EAAoE,YAAY,CAAE,CAAlF;AACD,CAXD,E,CAaA;;AACA,IAAIjB,gBAAJ,EAAsB;AACpB,MAAIkB,qBAAqB,GAAG,YAAY;AACtC,QAAIC,OAAO,GAAGR,QAAQ,CAACS,aAAT,CAAuB,SAAvB,CAAd;;AACA,QAAI,CAACD,OAAL,EAAc;AACZhB,MAAAA,MAAM,CAACK,gBAAP,CAAwB,kBAAxB,EAA4CU,qBAA5C;AACA;AACD;;AACD,QAAIC,OAAO,CAACE,SAAZ,EAAuB;AACrBF,MAAAA,OAAO,CAACG,UAAR,CAAmB,YAAnB,EAAiCJ,qBAAjC;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACX,gBAAR,CAAyB,QAAzB,EAAmCU,qBAAnC;AACD;AACF,GAXD;;AAYA,MAAIK,YAAY,GAAG,UAAUC,GAAV,EAAe;AAChC7B,IAAAA,KAAK,CAAC,kCAAkC6B,GAAG,CAACC,OAAvC,CAAL;AACD,GAFD;;AAGA,MAAIpB,SAAS,CAACC,EAAV,CAAaoB,kBAAjB,EAAqC;AACnC;AACArB,IAAAA,SAAS,CAACC,EAAV,CAAaoB,kBAAb,CAAgC,cAAhC,EAAgDT,IAAhD,CAAqD,UAAUU,SAAV,EAAqB;AACxE7B,MAAAA,iBAAiB,GAAG6B,SAApB;AACAT,MAAAA,qBAAqB;AACtB,KAHD,EAGGU,KAHH,CAGSL,YAHT;AAKAlB,IAAAA,SAAS,CAACC,EAAV,CAAaoB,kBAAb,CAAgC,cAAhC,EAAgDT,IAAhD,CAAqD,UAAUU,SAAV,EAAqB;AACxE5B,MAAAA,iBAAiB,GAAG4B,SAApB;AACAT,MAAAA,qBAAqB;AACtB,KAHD,EAGGU,KAHH,CAGS,YAAY,CAAE,CAHvB;AAID,GAXD,MAWO,IAAIvB,SAAS,CAACC,EAAV,CAAauB,eAAjB,EAAkC;AACvC;AACA;AACA;AACAxB,IAAAA,SAAS,CAACC,EAAV,CAAauB,eAAb,CAA6B,cAA7B,EAA6CZ,IAA7C,CAAkD,YAAY;AAC5DnB,MAAAA,iBAAiB,GAAG,IAApB;AACAoB,MAAAA,qBAAqB;AACtB,KAHD,EAGGU,KAHH,CAGSL,YAHT;AAIAlB,IAAAA,SAAS,CAACC,EAAV,CAAauB,eAAb,CAA6B,cAA7B,EAA6CZ,IAA7C,CAAkD,YAAY;AAC5DlB,MAAAA,iBAAiB,GAAG,IAApB;AACAmB,MAAAA,qBAAqB;AACtB,KAHD,EAGGU,KAHH,CAGS,YAAY,CAAE,CAHvB;AAID,GAZM,MAYA;AACLjC,IAAAA,KAAK,CAAC,2DAAD,CAAL;AACD;AACF,CA1CD,MA0CO;AACL,MAAIU,SAAS,CAACyB,aAAd,EAA6B;AAC3BzB,IAAAA,SAAS,CAACyB,aAAV,GAA0Bb,IAA1B,CAA+B,UAAUc,QAAV,EAAoB;AACjD,UAAIZ,OAAO,GAAGR,QAAQ,CAACS,aAAT,CAAuB,SAAvB,CAAd;AACAvB,MAAAA,SAAS,GAAGkC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAAC,CAAD,CAAvC;;AACA,UAAIZ,OAAJ,EAAa;AAAEA,QAAAA,OAAO,CAACc,IAAR,CAAa,kBAAb,EAAiC;AAACpC,UAAAA,SAAS,EAAEA;AAAZ,SAAjC;AAA2D;AAC3E,KAJD;AAKD;AACF;;AAED,SAASqC,YAAT,GAAyB;AAAE,SAAOrC,SAAP;AAAmB;;AAC9CI,MAAM,CAACC,OAAP,CAAegC,YAAf,GAA8BA,YAA9B;AAEA;;;;AAGA,SAASC,qBAAT,GAAkC;AAChC,SAAOrC,iBAAiB,IAAIC,iBAArB,IAA0C,CAAC,CAACmC,YAAY,EAA/D;AACD;;AACDjC,MAAM,CAACC,OAAP,CAAeiC,qBAAf,GAAuCA,qBAAvC;;AAEA,SAASC,cAAT,GAA2B;AAAE,SAAOrC,iBAAP;AAA2B;;AACxDE,MAAM,CAACC,OAAP,CAAekC,cAAf,GAAgCA,cAAhC;AAEA;;;;;AAIA,IAAIC,QAAQ,GAAI,YAAY;AAC1B,MAAIC,SAAS,GAAG,KAAhB;;AACA,GAAC,UAAUC,CAAV,EAAa;AACZ;AACA,QAAI,2TAA2TC,IAA3T,CAAgUD,CAAhU,KAAsU,0kDAA0kDC,IAA1kD,CAA+kDD,CAAC,CAACE,MAAF,CAAS,CAAT,EAAY,CAAZ,CAA/kD,CAA1U,EAA06D;AACx6DH,MAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,QAAII,KAAK,MAAMC,QAAQ,EAAnB,IAAyBC,IAAI,EAAjC,EAAqC;AACnCN,MAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,QAAIO,UAAU,EAAd,EAAkB;AAChBP,MAAAA,SAAS,GAAG,KAAZ;AACD;AACF,GAXD,EAWGnC,MAAM,CAACE,SAAP,CAAiByC,SAAjB,IAA8B3C,MAAM,CAACE,SAAP,CAAiB0C,MAA/C,IAAyD5C,MAAM,CAAC6C,KAXnE;;AAaA,SAAO,YAAY;AAAE,WAAOV,SAAP;AAAmB,GAAxC;AACD,CAhBc,EAAf;;AAiBArC,MAAM,CAACC,OAAP,CAAemC,QAAf,GAA0BA,QAA1B;AAEA;;;;;AAIA,SAASM,QAAT,CAAmBM,aAAnB,EAAkC;AAChC,MAAIH,SAAS,GAAGG,aAAa,IAAI9C,MAAM,CAACE,SAAP,CAAiByC,SAAlD;AACA,SAAO,yDAAyDN,IAAzD,CAA8DM,SAA9D,CAAP;AACD;;AACD7C,MAAM,CAACC,OAAP,CAAeyC,QAAf,GAA0BA,QAA1B;;AAEA,SAASD,KAAT,GAAkB;AAChB,SAAO,mBAAmBF,IAAnB,CAAwBrC,MAAM,CAACE,SAAP,CAAiB6C,QAAzC,CAAP;AACD;;AACDjD,MAAM,CAACC,OAAP,CAAewC,KAAf,GAAuBA,KAAvB;;AAEA,SAASS,mCAAT,GAAgD;AAC9C,SAAO,CAACd,QAAQ,EAAT,IAAe,CAACQ,UAAU,EAA1B,IAAgC1C,MAAM,CAACiD,WAAP,KAAuB7C,SAA9D;AACD;;AACDN,MAAM,CAACC,OAAP,CAAeiD,mCAAf,GAAqDA,mCAArD;AAEA;;;;AAGA,SAASE,eAAT,GAA4B;AAC1B,SAAO,mBAAmBb,IAAnB,CAAwBrC,MAAM,CAACE,SAAP,CAAiByC,SAAzC,CAAP;AACD;;AACD7C,MAAM,CAACC,OAAP,CAAemD,eAAf,GAAiCA,eAAjC;AAEA;;;;AAGA,SAASC,gBAAT,GAA6B;AAC3B,SAAO,eAAed,IAAf,CAAoBrC,MAAM,CAACE,SAAP,CAAiByC,SAArC,CAAP;AACD;;AACD7C,MAAM,CAACC,OAAP,CAAeoD,gBAAf,GAAkCA,gBAAlC;AAEA;;;;AAGA,SAAST,UAAT,GAAuB;AACrB,SAAOQ,eAAe,MAAMC,gBAAgB,EAA5C;AACD;;AACDrD,MAAM,CAACC,OAAP,CAAe2C,UAAf,GAA4BA,UAA5B;;AAEA,SAASD,IAAT,GAAiB;AACf,SAAO,WAAWJ,IAAX,CAAgBrC,MAAM,CAACE,SAAP,CAAiByC,SAAjC,CAAP;AACD;;AACD7C,MAAM,CAACC,OAAP,CAAe0C,IAAf,GAAsBA,IAAtB;AAEA;;;;;AAIA3C,MAAM,CAACC,OAAP,CAAeqD,WAAf,GAA6B,YAAY;AACvC,MAAIH,WAAW,GAAGjD,MAAM,CAACiD,WAAzB;;AACA,MAAIR,IAAI,EAAR,EAAY;AAAEQ,IAAAA,WAAW,IAAI,EAAf;AAAoB;;AAClC,SAAOA,WAAW,KAAK,EAAhB,IAAsBA,WAAW,KAAK,CAAC,EAA9C;AACD,CAJD;AAMA;;;;;;;;;AAOAnD,MAAM,CAACC,OAAP,CAAesD,oBAAf,GAAsC,CAAC,EAAE,CAACC,OAAD,IAAYA,OAAO,CAACC,OAAtB,CAAvC;AAEA;;;;AAGAzD,MAAM,CAACC,OAAP,CAAeyD,iBAAf,GAAmC,CAAC1D,MAAM,CAACC,OAAP,CAAesD,oBAAnD","sourcesContent":["var error = require('debug')('device:error');\n\nvar vrDisplay;\nvar supportsVRSession = false;\nvar supportsARSession = false;\n\n/**\n * Oculus Browser 7 doesn't support the WebXR gamepads module.\n * We fallback to WebVR API and will hotfix when implementation is complete.\n */\nvar isWebXRAvailable = module.exports.isWebXRAvailable = !window.debug && navigator.xr !== undefined;\n\n// Catch vrdisplayactivate early to ensure we can enter VR mode after the scene loads.\nwindow.addEventListener('vrdisplayactivate', function (evt) {\n  var canvasEl;\n  // WebXR takes priority if available.\n  if (isWebXRAvailable) { return; }\n  canvasEl = document.createElement('canvas');\n  vrDisplay = evt.display;\n  // We need to make sure the canvas has a WebGL context associated with it.\n  // Otherwise, the requestPresent could be denied.\n  canvasEl.getContext('webgl', {});\n  // Request present immediately. a-scene will be allowed to enter VR without user gesture.\n  vrDisplay.requestPresent([{source: canvasEl}]).then(function () {}, function () {});\n});\n\n// Support both WebVR and WebXR APIs.\nif (isWebXRAvailable) {\n  var updateEnterInterfaces = function () {\n    var sceneEl = document.querySelector('a-scene');\n    if (!sceneEl) {\n      window.addEventListener('DOMContentLoaded', updateEnterInterfaces);\n      return;\n    }\n    if (sceneEl.hasLoaded) {\n      sceneEl.components['vr-mode-ui'].updateEnterInterfaces();\n    } else {\n      sceneEl.addEventListener('loaded', updateEnterInterfaces);\n    }\n  };\n  var errorHandler = function (err) {\n    error('WebXR session support error: ' + err.message);\n  };\n  if (navigator.xr.isSessionSupported) {\n    // Current WebXR spec uses a boolean-returning isSessionSupported promise\n    navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\n      supportsVRSession = supported;\n      updateEnterInterfaces();\n    }).catch(errorHandler);\n\n    navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n      supportsARSession = supported;\n      updateEnterInterfaces();\n    }).catch(function () {});\n  } else if (navigator.xr.supportsSession) {\n    // Fallback for implementations that haven't updated to the new spec yet,\n    // the old version used supportsSession which is rejected for missing\n    // support.\n    navigator.xr.supportsSession('immersive-vr').then(function () {\n      supportsVRSession = true;\n      updateEnterInterfaces();\n    }).catch(errorHandler);\n    navigator.xr.supportsSession('immersive-ar').then(function () {\n      supportsARSession = true;\n      updateEnterInterfaces();\n    }).catch(function () {});\n  } else {\n    error('WebXR has neither isSessionSupported or supportsSession?!');\n  }\n} else {\n  if (navigator.getVRDisplays) {\n    navigator.getVRDisplays().then(function (displays) {\n      var sceneEl = document.querySelector('a-scene');\n      vrDisplay = displays.length && displays[0];\n      if (sceneEl) { sceneEl.emit('displayconnected', {vrDisplay: vrDisplay}); }\n    });\n  }\n}\n\nfunction getVRDisplay () { return vrDisplay; }\nmodule.exports.getVRDisplay = getVRDisplay;\n\n/**\n * Determine if a headset is connected by checking if a vrDisplay is available.\n */\nfunction checkHeadsetConnected () {\n  return supportsVRSession || supportsARSession || !!getVRDisplay();\n}\nmodule.exports.checkHeadsetConnected = checkHeadsetConnected;\n\nfunction checkARSupport () { return supportsARSession; }\nmodule.exports.checkARSupport = checkARSupport;\n\n/**\n * Checks if browser is mobile and not stand-alone dedicated vr device.\n * @return {Boolean} True if mobile browser detected.\n */\nvar isMobile = (function () {\n  var _isMobile = false;\n  (function (a) {\n    // eslint-disable-next-line no-useless-escape\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n      _isMobile = true;\n    }\n    if (isIOS() || isTablet() || isR7()) {\n      _isMobile = true;\n    }\n    if (isMobileVR()) {\n      _isMobile = false;\n    }\n  })(window.navigator.userAgent || window.navigator.vendor || window.opera);\n\n  return function () { return _isMobile; };\n})();\nmodule.exports.isMobile = isMobile;\n\n/**\n *  Detect tablet devices.\n *  @param {string} mockUserAgent - Allow passing a mock user agent for testing.\n */\nfunction isTablet (mockUserAgent) {\n  var userAgent = mockUserAgent || window.navigator.userAgent;\n  return /ipad|Nexus (7|9)|xoom|sch-i800|playbook|tablet|kindle/i.test(userAgent);\n}\nmodule.exports.isTablet = isTablet;\n\nfunction isIOS () {\n  return /iPad|iPhone|iPod/.test(window.navigator.platform);\n}\nmodule.exports.isIOS = isIOS;\n\nfunction isMobileDeviceRequestingDesktopSite () {\n  return !isMobile() && !isMobileVR() && window.orientation !== undefined;\n}\nmodule.exports.isMobileDeviceRequestingDesktopSite = isMobileDeviceRequestingDesktopSite;\n\n/**\n *  Detect Oculus Browser (standalone headset)\n */\nfunction isOculusBrowser () {\n  return /(OculusBrowser)/i.test(window.navigator.userAgent);\n}\nmodule.exports.isOculusBrowser = isOculusBrowser;\n\n/**\n *  Detect Firefox Reality (standalone headset)\n */\nfunction isFirefoxReality () {\n  return /(Mobile VR)/i.test(window.navigator.userAgent);\n}\nmodule.exports.isFirefoxReality = isFirefoxReality;\n\n/**\n *  Detect browsers in Stand-Alone headsets\n */\nfunction isMobileVR () {\n  return isOculusBrowser() || isFirefoxReality();\n}\nmodule.exports.isMobileVR = isMobileVR;\n\nfunction isR7 () {\n  return /R7 Build/.test(window.navigator.userAgent);\n}\nmodule.exports.isR7 = isR7;\n\n/**\n * Checks mobile device orientation.\n * @return {Boolean} True if landscape orientation.\n */\nmodule.exports.isLandscape = function () {\n  var orientation = window.orientation;\n  if (isR7()) { orientation += 90; }\n  return orientation === 90 || orientation === -90;\n};\n\n/**\n * Check if running in a browser or spoofed browser (bundler).\n * We need to check a node api that isn't mocked on either side.\n * `require` and `module.exports` are mocked in browser by bundlers.\n * `window` is mocked in node.\n * `process` is also mocked by browserify, but has custom properties.\n */\nmodule.exports.isBrowserEnvironment = !!(!process || process.browser);\n\n/**\n * Check if running in node on the server.\n */\nmodule.exports.isNodeEnvironment = !module.exports.isBrowserEnvironment;\n"]},"metadata":{},"sourceType":"script"}