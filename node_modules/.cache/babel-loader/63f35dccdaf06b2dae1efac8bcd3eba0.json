{"ast":null,"code":"/* global DeviceOrientationEvent, location  */\nvar registerComponent = require('../../core/component').registerComponent;\n\nvar utils = require('../../utils/');\n\nvar bind = utils.bind;\n\nvar constants = require('../../constants/');\n\nvar MODAL_CLASS = 'a-modal';\nvar DIALOG_CLASS = 'a-dialog';\nvar DIALOG_TEXT_CLASS = 'a-dialog-text';\nvar DIALOG_TEXT_CONTAINER_CLASS = 'a-dialog-text-container';\nvar DIALOG_BUTTONS_CONTAINER_CLASS = 'a-dialog-buttons-container';\nvar DIALOG_BUTTON_CLASS = 'a-dialog-button';\nvar DIALOG_ALLOW_BUTTON_CLASS = 'a-dialog-allow-button';\nvar DIALOG_DENY_BUTTON_CLASS = 'a-dialog-deny-button';\nvar DIALOG_OK_BUTTON_CLASS = 'a-dialog-ok-button';\n/**\n * UI for enabling device motion permission\n */\n\nmodule.exports.Component = registerComponent('device-orientation-permission-ui', {\n  schema: {\n    enabled: {\n      default: true\n    }\n  },\n  init: function () {\n    var self = this;\n\n    if (!this.data.enabled) {\n      return;\n    }\n\n    if (location.hostname !== 'localhost' && location.hostname !== '127.0.0.1' && location.protocol === 'http:') {\n      this.showHTTPAlert();\n    } // Show alert on iPad if Safari is on desktop mode.\n\n\n    if (utils.device.isMobileDeviceRequestingDesktopSite()) {\n      this.showMobileDesktopModeAlert();\n      return;\n    } // Browser doesn't support or doesn't require permission to DeviceOrientationEvent API.\n\n\n    if (typeof DeviceOrientationEvent === 'undefined' || !DeviceOrientationEvent.requestPermission) {\n      this.permissionGranted = true;\n      return;\n    }\n\n    this.onDeviceMotionDialogAllowClicked = bind(this.onDeviceMotionDialogAllowClicked, this);\n    this.onDeviceMotionDialogDenyClicked = bind(this.onDeviceMotionDialogDenyClicked, this); // Show dialog only if permission has not yet been granted.\n\n    DeviceOrientationEvent.requestPermission().catch(function () {\n      self.devicePermissionDialogEl = createPermissionDialog('This immersive website requires access to your device motion sensors.', self.onDeviceMotionDialogAllowClicked, self.onDeviceMotionDialogDenyClicked);\n      self.el.appendChild(self.devicePermissionDialogEl);\n    }).then(function () {\n      self.el.emit('deviceorientationpermissiongranted');\n      self.permissionGranted = true;\n    });\n  },\n  remove: function () {\n    // This removes the modal screen\n    if (this.devicePermissionDialogEl) {\n      this.el.removeChild(this.devicePermissionDialogEl);\n    }\n  },\n  onDeviceMotionDialogDenyClicked: function () {\n    this.remove();\n  },\n  showMobileDesktopModeAlert: function () {\n    var self = this;\n    var safariIpadAlertEl = createAlertDialog('Set your browser to request the mobile version of the site and reload the page to enjoy immersive mode.', function () {\n      self.el.removeChild(safariIpadAlertEl);\n    });\n    this.el.appendChild(safariIpadAlertEl);\n  },\n  showHTTPAlert: function () {\n    var self = this;\n    var httpAlertEl = createAlertDialog('Access this site over HTTPS to enter VR mode and grant access to the device sensors.', function () {\n      self.el.removeChild(httpAlertEl);\n    });\n    this.el.appendChild(httpAlertEl);\n  },\n\n  /**\n   * Enable device motion permission when clicked.\n   */\n  onDeviceMotionDialogAllowClicked: function () {\n    var self = this;\n    this.el.emit('deviceorientationpermissionrequested');\n    DeviceOrientationEvent.requestPermission().then(function (response) {\n      if (response === 'granted') {\n        self.el.emit('deviceorientationpermissiongranted');\n        self.permissionGranted = true;\n      } else {\n        self.el.emit('deviceorientationpermissionrejected');\n      }\n\n      self.remove();\n    }).catch(console.error);\n  }\n});\n/**\n * Create a modal dialog that request users permission to access the Device Motion API.\n *\n * @param {function} onAllowClicked - click event handler\n * @returns {Element} Wrapper <div>.\n */\n\nfunction createPermissionDialog(text, onAllowClicked, onDenyClicked) {\n  var buttonsContainer;\n  var denyButton;\n  var acceptButton;\n  buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add(DIALOG_BUTTONS_CONTAINER_CLASS); // Buttons\n\n  denyButton = document.createElement('button');\n  denyButton.classList.add(DIALOG_BUTTON_CLASS, DIALOG_DENY_BUTTON_CLASS);\n  denyButton.setAttribute(constants.AFRAME_INJECTED, '');\n  denyButton.innerHTML = 'Deny';\n  buttonsContainer.appendChild(denyButton);\n  acceptButton = document.createElement('button');\n  acceptButton.classList.add(DIALOG_BUTTON_CLASS, DIALOG_ALLOW_BUTTON_CLASS);\n  acceptButton.setAttribute(constants.AFRAME_INJECTED, '');\n  acceptButton.innerHTML = 'Allow';\n  buttonsContainer.appendChild(acceptButton); // Ask for sensor events to be used\n\n  acceptButton.addEventListener('click', function (evt) {\n    evt.stopPropagation();\n    onAllowClicked();\n  });\n  denyButton.addEventListener('click', function (evt) {\n    evt.stopPropagation();\n    onDenyClicked();\n  });\n  return createDialog(text, buttonsContainer);\n}\n\nfunction createAlertDialog(text, onOkClicked) {\n  var buttonsContainer;\n  var okButton;\n  buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add(DIALOG_BUTTONS_CONTAINER_CLASS); // Buttons\n\n  okButton = document.createElement('button');\n  okButton.classList.add(DIALOG_BUTTON_CLASS, DIALOG_OK_BUTTON_CLASS);\n  okButton.setAttribute(constants.AFRAME_INJECTED, '');\n  okButton.innerHTML = 'Close';\n  buttonsContainer.appendChild(okButton); // Ask for sensor events to be used\n\n  okButton.addEventListener('click', function (evt) {\n    evt.stopPropagation();\n    onOkClicked();\n  });\n  return createDialog(text, buttonsContainer);\n}\n\nfunction createDialog(text, buttonsContainerEl) {\n  var modalContainer;\n  var dialog;\n  var dialogTextContainer;\n  var dialogText;\n  modalContainer = document.createElement('div');\n  modalContainer.classList.add(MODAL_CLASS);\n  modalContainer.setAttribute(constants.AFRAME_INJECTED, '');\n  dialog = document.createElement('div');\n  dialog.className = DIALOG_CLASS;\n  dialog.setAttribute(constants.AFRAME_INJECTED, '');\n  modalContainer.appendChild(dialog);\n  dialogTextContainer = document.createElement('div');\n  dialogTextContainer.classList.add(DIALOG_TEXT_CONTAINER_CLASS);\n  dialog.appendChild(dialogTextContainer);\n  dialogText = document.createElement('div');\n  dialogText.classList.add(DIALOG_TEXT_CLASS);\n  dialogText.innerHTML = text;\n  dialogTextContainer.appendChild(dialogText);\n  dialog.appendChild(buttonsContainerEl);\n  return modalContainer;\n}","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/components/scene/device-orientation-permission-ui.js"],"names":["registerComponent","require","utils","bind","constants","MODAL_CLASS","DIALOG_CLASS","DIALOG_TEXT_CLASS","DIALOG_TEXT_CONTAINER_CLASS","DIALOG_BUTTONS_CONTAINER_CLASS","DIALOG_BUTTON_CLASS","DIALOG_ALLOW_BUTTON_CLASS","DIALOG_DENY_BUTTON_CLASS","DIALOG_OK_BUTTON_CLASS","module","exports","Component","schema","enabled","default","init","self","data","location","hostname","protocol","showHTTPAlert","device","isMobileDeviceRequestingDesktopSite","showMobileDesktopModeAlert","DeviceOrientationEvent","requestPermission","permissionGranted","onDeviceMotionDialogAllowClicked","onDeviceMotionDialogDenyClicked","catch","devicePermissionDialogEl","createPermissionDialog","el","appendChild","then","emit","remove","removeChild","safariIpadAlertEl","createAlertDialog","httpAlertEl","response","console","error","text","onAllowClicked","onDenyClicked","buttonsContainer","denyButton","acceptButton","document","createElement","classList","add","setAttribute","AFRAME_INJECTED","innerHTML","addEventListener","evt","stopPropagation","createDialog","onOkClicked","okButton","buttonsContainerEl","modalContainer","dialog","dialogTextContainer","dialogText","className"],"mappings":"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","sourcesContent":["/* global DeviceOrientationEvent, location  */\nvar registerComponent = require('../../core/component').registerComponent;\nvar utils = require('../../utils/');\nvar bind = utils.bind;\n\nvar constants = require('../../constants/');\n\nvar MODAL_CLASS = 'a-modal';\nvar DIALOG_CLASS = 'a-dialog';\nvar DIALOG_TEXT_CLASS = 'a-dialog-text';\nvar DIALOG_TEXT_CONTAINER_CLASS = 'a-dialog-text-container';\nvar DIALOG_BUTTONS_CONTAINER_CLASS = 'a-dialog-buttons-container';\nvar DIALOG_BUTTON_CLASS = 'a-dialog-button';\nvar DIALOG_ALLOW_BUTTON_CLASS = 'a-dialog-allow-button';\nvar DIALOG_DENY_BUTTON_CLASS = 'a-dialog-deny-button';\nvar DIALOG_OK_BUTTON_CLASS = 'a-dialog-ok-button';\n\n/**\n * UI for enabling device motion permission\n */\nmodule.exports.Component = registerComponent('device-orientation-permission-ui', {\n  schema: {enabled: {default: true}},\n\n  init: function () {\n    var self = this;\n\n    if (!this.data.enabled) { return; }\n\n    if (location.hostname !== 'localhost' &&\n        location.hostname !== '127.0.0.1' &&\n        location.protocol === 'http:') {\n      this.showHTTPAlert();\n    }\n\n    // Show alert on iPad if Safari is on desktop mode.\n    if (utils.device.isMobileDeviceRequestingDesktopSite()) {\n      this.showMobileDesktopModeAlert();\n      return;\n    }\n\n    // Browser doesn't support or doesn't require permission to DeviceOrientationEvent API.\n    if (typeof DeviceOrientationEvent === 'undefined' || !DeviceOrientationEvent.requestPermission) {\n      this.permissionGranted = true;\n      return;\n    }\n\n    this.onDeviceMotionDialogAllowClicked = bind(this.onDeviceMotionDialogAllowClicked, this);\n    this.onDeviceMotionDialogDenyClicked = bind(this.onDeviceMotionDialogDenyClicked, this);\n    // Show dialog only if permission has not yet been granted.\n    DeviceOrientationEvent.requestPermission().catch(function () {\n      self.devicePermissionDialogEl = createPermissionDialog(\n        'This immersive website requires access to your device motion sensors.',\n        self.onDeviceMotionDialogAllowClicked,\n        self.onDeviceMotionDialogDenyClicked);\n      self.el.appendChild(self.devicePermissionDialogEl);\n    }).then(function () {\n      self.el.emit('deviceorientationpermissiongranted');\n      self.permissionGranted = true;\n    });\n  },\n\n  remove: function () {\n    // This removes the modal screen\n    if (this.devicePermissionDialogEl) { this.el.removeChild(this.devicePermissionDialogEl); }\n  },\n\n  onDeviceMotionDialogDenyClicked: function () {\n    this.remove();\n  },\n\n  showMobileDesktopModeAlert: function () {\n    var self = this;\n    var safariIpadAlertEl = createAlertDialog(\n      'Set your browser to request the mobile version of the site and reload the page to enjoy immersive mode.',\n      function () { self.el.removeChild(safariIpadAlertEl); });\n    this.el.appendChild(safariIpadAlertEl);\n  },\n\n  showHTTPAlert: function () {\n    var self = this;\n    var httpAlertEl = createAlertDialog(\n      'Access this site over HTTPS to enter VR mode and grant access to the device sensors.',\n      function () { self.el.removeChild(httpAlertEl); });\n    this.el.appendChild(httpAlertEl);\n  },\n\n  /**\n   * Enable device motion permission when clicked.\n   */\n  onDeviceMotionDialogAllowClicked: function () {\n    var self = this;\n    this.el.emit('deviceorientationpermissionrequested');\n    DeviceOrientationEvent.requestPermission().then(function (response) {\n      if (response === 'granted') {\n        self.el.emit('deviceorientationpermissiongranted');\n        self.permissionGranted = true;\n      } else {\n        self.el.emit('deviceorientationpermissionrejected');\n      }\n      self.remove();\n    }).catch(console.error);\n  }\n});\n\n/**\n * Create a modal dialog that request users permission to access the Device Motion API.\n *\n * @param {function} onAllowClicked - click event handler\n * @returns {Element} Wrapper <div>.\n */\nfunction createPermissionDialog (text, onAllowClicked, onDenyClicked) {\n  var buttonsContainer;\n  var denyButton;\n  var acceptButton;\n\n  buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add(DIALOG_BUTTONS_CONTAINER_CLASS);\n\n  // Buttons\n  denyButton = document.createElement('button');\n  denyButton.classList.add(DIALOG_BUTTON_CLASS, DIALOG_DENY_BUTTON_CLASS);\n  denyButton.setAttribute(constants.AFRAME_INJECTED, '');\n  denyButton.innerHTML = 'Deny';\n  buttonsContainer.appendChild(denyButton);\n\n  acceptButton = document.createElement('button');\n  acceptButton.classList.add(DIALOG_BUTTON_CLASS, DIALOG_ALLOW_BUTTON_CLASS);\n  acceptButton.setAttribute(constants.AFRAME_INJECTED, '');\n  acceptButton.innerHTML = 'Allow';\n  buttonsContainer.appendChild(acceptButton);\n\n  // Ask for sensor events to be used\n  acceptButton.addEventListener('click', function (evt) {\n    evt.stopPropagation();\n    onAllowClicked();\n  });\n\n  denyButton.addEventListener('click', function (evt) {\n    evt.stopPropagation();\n    onDenyClicked();\n  });\n\n  return createDialog(text, buttonsContainer);\n}\n\nfunction createAlertDialog (text, onOkClicked) {\n  var buttonsContainer;\n  var okButton;\n\n  buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add(DIALOG_BUTTONS_CONTAINER_CLASS);\n\n  // Buttons\n  okButton = document.createElement('button');\n  okButton.classList.add(DIALOG_BUTTON_CLASS, DIALOG_OK_BUTTON_CLASS);\n  okButton.setAttribute(constants.AFRAME_INJECTED, '');\n  okButton.innerHTML = 'Close';\n  buttonsContainer.appendChild(okButton);\n\n  // Ask for sensor events to be used\n  okButton.addEventListener('click', function (evt) {\n    evt.stopPropagation();\n    onOkClicked();\n  });\n\n  return createDialog(text, buttonsContainer);\n}\n\nfunction createDialog (text, buttonsContainerEl) {\n  var modalContainer;\n  var dialog;\n  var dialogTextContainer;\n  var dialogText;\n\n  modalContainer = document.createElement('div');\n  modalContainer.classList.add(MODAL_CLASS);\n  modalContainer.setAttribute(constants.AFRAME_INJECTED, '');\n\n  dialog = document.createElement('div');\n  dialog.className = DIALOG_CLASS;\n  dialog.setAttribute(constants.AFRAME_INJECTED, '');\n  modalContainer.appendChild(dialog);\n\n  dialogTextContainer = document.createElement('div');\n  dialogTextContainer.classList.add(DIALOG_TEXT_CONTAINER_CLASS);\n  dialog.appendChild(dialogTextContainer);\n\n  dialogText = document.createElement('div');\n  dialogText.classList.add(DIALOG_TEXT_CLASS);\n  dialogText.innerHTML = text;\n  dialogTextContainer.appendChild(dialogText);\n\n  dialog.appendChild(buttonsContainerEl);\n\n  return modalContainer;\n}\n"]},"metadata":{},"sourceType":"script"}