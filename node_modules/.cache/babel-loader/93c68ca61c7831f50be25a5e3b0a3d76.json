{"ast":null,"code":"var _jsxFileName = \"F:\\\\_HCLCommece\\\\src\\\\component\\\\CartPage.js\";\nimport React, { Component } from 'react';\nimport './CartPage.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport OrderSummaryPopup from \"./OrderSummaryPopup\";\n\nclass CartPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }); //console.log(this.props.getToken+\"dngle\");\n    };\n\n    this.removeItem = (SKUUniqueID, orderItemId, orderId, quantity, Price) => {\n      //console.log(`${SKUUniqueID}--- ${orderItemId} ---- ${orderId}`)\n      let removeProduct = {\n        SKUUniqueID: SKUUniqueID,\n        orderItemId: orderItemId,\n        quantity: quantity,\n        Price: Price\n      };\n      const payloads = {\n        orderId: orderId,\n        \"orderItemId\": orderItemId,\n        //\"12326\",\n        \"catEntryId\": SKUUniqueID //\"1\"\n        //\"x_calculateOrder\": \"0\",\n        //\"x_inventoryValidation\": \"true\", \n\n      };\n      fetch(this.props.getAppSet.API.deleteFromCart, {\n        method: 'PUT',\n        headers: {\n          //'accept': 'application/json',\n          'Content-type': 'application/json',\n          'WCToken': this.props.getWCToken,\n          'WCTrustedToken': this.props.getWCTrustedToken\n        },\n        body: JSON.stringify(payloads)\n      }).then(res => res.json()).then(data => {\n        // console.log(data)\n        this.props.removeFromCart(data.orderId, removeProduct);\n        this.setState({\n          products: this.props.getProductsInCart\n        });\n        this.cartDetails();\n      }, error => {\n        //API not accessable or through error            \n        console.log(\"Error Data>>\" + error);\n      });\n    };\n\n    this.cartDetails = () => {\n      fetch(this.props.getAppSet.API.cartDetails, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          'WCToken': this.props.getWCToken,\n          'WCTrustedToken': this.props.getWCTrustedToken\n        }\n      }).then(res => res.json()).then(json => {\n        console.log('cartDetail api called');\n        console.log(json); //this.setState({billAndShip: json})\n\n        this.props.updateDisAndTot(json.totalProductPrice, json.grandTotal, json.totalAdjustment);\n        this.setState({\n          products: this.props.getProductsInCart\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.updateQuantity2 = (event, SKUUniqueID, orderItemId, orderId, quantity, Price) => {\n      let updateProduct = {\n        SKUUniqueID: SKUUniqueID,\n        orderItemId: orderItemId,\n        quantity: event.target.value,\n        Price: Price\n      };\n\n      if (event.target.value === NaN) {\n        this.setState({\n          products: this.props.getProductsInCart\n        });\n      } else if (event.target.value !== quantity) {\n        this.props.updateCart(orderId, updateProduct);\n        this.setState({\n          products: this.props.getProductsInCart\n        });\n        console.log(event.target.value + \"<><><><\" + quantity);\n      }\n    };\n\n    this.updateQuantity = (event, SKUUniqueID, orderItemId, orderId, quantity, Price) => {\n      let updateProduct = {\n        SKUUniqueID: SKUUniqueID,\n        orderItemId: orderItemId,\n        quantity: event.target.value,\n        Price: Price\n      };\n\n      if (event.target.value !== quantity) {\n        const payloads = {\n          orderId: orderId,\n          orderItem: [{\n            \"orderItemId\": orderItemId,\n            \"productId\": SKUUniqueID,\n            \"quantity\": quantity\n          }],\n          \"x_calculateOrder\": \"0\",\n          \"x_inventoryValidation\": \"true\"\n        };\n        fetch(this.props.getAppSet.API.addToCartUrl, {\n          method: 'POST',\n          headers: {\n            //'accept': 'application/json',\n            'Content-type': 'application/json',\n            'WCToken': this.props.getWCToken,\n            'WCTrustedToken': this.props.getWCTrustedToken\n          },\n          body: JSON.stringify(payloads)\n        }).then(res => res.json()).then(data => {\n          console.log(data);\n          console.log(this.props.getWCToken + \"<<>>\" + this.props.getWCTrustedToken); //this.props.addToCart(data.orderId, removeProduct)\n\n          this.props.updateCart(data.orderId, updateProduct);\n          this.setState({\n            products: this.props.getProductsInCart\n          });\n          this.cartDetails();\n          console.log(this.state.products);\n        }, error => {\n          //API not accessable or through error            \n          console.log(\"Error Data>>\" + error);\n        });\n      }\n    };\n\n    this.signIn = () => {\n      console.log(this.state.userName + this.state.password);\n      const payloads = {\n        logonId: this.state.userName,\n        //\"zarak786@gmail.com\", //zarak786@gmail.com karim.zarak@royalcyber.com\n        logonPassword: this.state.password //\"Revert!23d\"\n\n      };\n      fetch(this.props.getAppSet.API.userLogin, {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'Content-type': 'application/json',\n          'WCToken': this.props.getWCToken,\n          'WCTrustedToken': this.props.getWCTrustedToken\n        },\n        body: JSON.stringify(payloads)\n      }).then(res => res.json()).then(data => {\n        if (data.errors != undefined) {\n          //API results with an error message \n          console.log(data);\n          this.setState({\n            isAuthenticated: false,\n            errorMsg: data.errors[0].errorMessage\n          });\n        } else if (data.WCToken !== undefined) {\n          //Successfully Loged In\n          console.log(data.WCToken + \"------\" + data.WCTrustedToken);\n          this.setState({\n            isAuthenticated: true,\n            Token: data.WCToken,\n            trustToken: data.WCTrustedToken,\n            errorMsg: ''\n          }); //below addin data into Redux-Reducer\n          //console.log(data.resourceName+\"from sign page\")\n\n          this.props.loginUser(this.state.userName, data.resourceName, data.braintreeToken, data.WCToken, data.userId, data.WCTrustedToken, data.personalizationID);\n          this.cartDetails(); // this.props.changeToken(data.WCToken);\n        } else {\n          // API results \n          console.log('Else Statement');\n          this.setState({\n            isAuthenticated: false,\n            errorMsg: 'Error while loging'\n          });\n        }\n      }, error => {\n        //API not accessable or through error            \n        this.setState({\n          isAuthenticated: false,\n          errorMsg: 'Either your user name or password is wrong'\n        });\n        console.log(this.state.isAuthenticated + \"Error Data>>\" + error);\n      }); //this.setState({startLoading: false});\n    };\n\n    this.state = {\n      products: [],\n      userName: '',\n      password: '',\n      errorMsg: '',\n      isAuthenticated: false,\n      Token: this.props.getWCToken,\n      trustToken: this.props.getWCTrustedToken\n    };\n  }\n\n  componentDidMount(props) {\n    this.setState({\n      products: this.props.getProductsInCart\n    });\n    console.log('componnent did mount called');\n    this.cartDetails();\n  }\n\n  render() {\n    let checkCustomer = '';\n\n    if (this.props.getResourceName === 'loginidentity' || this.props.getResourceName === 'person') {\n      checkCustomer = React.createElement(React.Fragment, null, \" \", React.createElement(\"div\", {\n        class: \"clearBoth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(Link, {\n        className: \"nextBtn\",\n        to: \"/Checkout/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Checkout\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }));\n      console.log(this.props.getWCToken + \"<<<\" + this.props.getResourceName + \">>>\" + this.props.getWCTrustedToken);\n    } else {\n      checkCustomer = React.createElement(\"div\", {\n        className: \"loginCartPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Returning customers\")), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"userName\",\n        placeholder: \"Username\",\n        onChange: this.formHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        onChange: this.formHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"nextBtn\",\n        onClick: this.signIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Sign In & Checkout\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"shoppingCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(\"div\", {\n      className: \"clearBoth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"headings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"td\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      className: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"td\", {\n      className: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      className: \"subtotal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"SubTotal\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.state.products.map((item, index) => React.createElement(\"tr\", {\n      className: \"products\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/Product/?${item.uniqueID}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `${this.props.getAppSet.serverBaseURL}${item.thumbnail}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/Product/?${item.uniqueID}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"  \", item.longDescription), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"nextBtn sizing\",\n      onClick: this.removeItem.bind(this, item.SKUUniqueID, item.orderItemId, this.props.getOrderId, item.quantity, item.Price),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Remove Item\")), React.createElement(\"td\", {\n      className: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, item.Price)), React.createElement(\"td\", {\n      className: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      defaultValue: 'DEFAULT',\n      onChange: event => {\n        this.updateQuantity(event, item.SKUUniqueID, item.orderItemId, this.props.getOrderId, item.quantity, item.Price);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: item.quantity,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, item.quantity), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      value: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"option\", {\n      value: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"option\", {\n      value: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"option\", {\n      value: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"option\", {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      value: \"11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"11\"), React.createElement(\"option\", {\n      value: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"12\"), React.createElement(\"option\", {\n      value: \"13\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"13\"), React.createElement(\"option\", {\n      value: \"14\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"14\"), React.createElement(\"option\", {\n      value: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"15\"), React.createElement(\"option\", {\n      value: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"16\"), React.createElement(\"option\", {\n      value: \"17\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"17\"), React.createElement(\"option\", {\n      value: \"18\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"18\"), React.createElement(\"option\", {\n      value: \"19\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"19\"), React.createElement(\"option\", {\n      value: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"20\"))), React.createElement(\"td\", {\n      className: \"subtotal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, (parseFloat(item.Price) * parseFloat(item.quantity)).toFixed(2))))), React.createElement(\"tr\", {\n      className: \"wishList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"2\",\n      className: \"wishList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      colSpan: \"3\",\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clearBoth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), checkCustomer))))), React.createElement(OrderSummaryPopup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getResourceName: state.userToken.resourceName,\n    getWCToken: state.userToken.WCToken,\n    getWCTrustedToken: state.userToken.WCTrustedToken,\n    getProductsInCart: state.cart.products,\n    //getCartQuantity: state.cart.cart,\n    getSubTotal: state.cart.subTotal,\n    getOrderId: state.cart.orderId,\n    getAppSet: state.getAppSet\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeFromCart: (orderId, removeProduct) => {\n      dispatch({\n        type: 'REMOVE_FROM_CART',\n        payloads: {\n          orderId,\n          removeProduct\n        }\n      });\n    },\n    updateCart: (orderId, updateProduct) => {\n      dispatch({\n        type: 'UPDATE_CART',\n        payloads: {\n          orderId,\n          updateProduct\n        }\n      });\n    },\n    updateDisAndTot: (total, grandTotal, discount) => {\n      dispatch({\n        type: 'CART_DETAILS',\n        payloads: {\n          total,\n          grandTotal,\n          discount\n        }\n      });\n    },\n    loginUser: (email, resourceName, braintreeToken, tokn, userId, WCTrustedToken, personalizationID) => {\n      dispatch({\n        type: 'LOGED_USER',\n        payloads: {\n          email,\n          resourceName,\n          braintreeToken,\n          tokn,\n          userId,\n          WCTrustedToken,\n          personalizationID\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);","map":{"version":3,"sources":["F:/_HCLCommece/src/component/CartPage.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","connect","OrderSummaryPopup","CartPage","constructor","props","formHandler","event","setState","target","name","value","removeItem","SKUUniqueID","orderItemId","orderId","quantity","Price","removeProduct","payloads","fetch","getAppSet","API","deleteFromCart","method","headers","getWCToken","getWCTrustedToken","body","JSON","stringify","then","res","json","data","removeFromCart","products","getProductsInCart","cartDetails","error","console","log","updateDisAndTot","totalProductPrice","grandTotal","totalAdjustment","catch","e","updateQuantity2","updateProduct","NaN","updateCart","updateQuantity","orderItem","addToCartUrl","state","signIn","userName","password","logonId","logonPassword","userLogin","errors","undefined","isAuthenticated","errorMsg","errorMessage","WCToken","WCTrustedToken","Token","trustToken","loginUser","resourceName","braintreeToken","userId","personalizationID","componentDidMount","render","checkCustomer","getResourceName","map","item","index","uniqueID","serverBaseURL","thumbnail","longDescription","bind","getOrderId","parseFloat","toFixed","mapStateToProps","userToken","cart","getSubTotal","subTotal","mapDispatchToProps","dispatch","type","total","discount","email","tokn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './CartPage.css';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport OrderSummaryPopup from \"./OrderSummaryPopup\";\r\nclass CartPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            products: [],\r\n            userName: '',\r\n            password: '',\r\n            errorMsg: '',\r\n            isAuthenticated: false,\r\n            Token: this.props.getWCToken,\r\n            trustToken: this.props.getWCTrustedToken\r\n        }\r\n    }\r\n    formHandler = (event) =>{\r\n        this.setState({ [event.target.name] : event.target.value});\r\n        //console.log(this.props.getToken+\"dngle\");\r\n    }\r\n    removeItem = (SKUUniqueID, orderItemId, orderId, quantity, Price) => {\r\n        //console.log(`${SKUUniqueID}--- ${orderItemId} ---- ${orderId}`)\r\n        let removeProduct = {SKUUniqueID:SKUUniqueID, orderItemId:orderItemId, quantity: quantity, Price: Price}\r\n        const payloads = {\r\n            orderId: orderId,\r\n            \"orderItemId\": orderItemId,//\"12326\",\r\n            \"catEntryId\": SKUUniqueID //\"1\"\r\n            //\"x_calculateOrder\": \"0\",\r\n            //\"x_inventoryValidation\": \"true\", \r\n        }  \r\n        fetch(this.props.getAppSet.API.deleteFromCart,{\r\n            method: 'PUT',\r\n            headers: {\r\n                //'accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'WCToken':  this.props.getWCToken,\r\n                'WCTrustedToken': this.props.getWCTrustedToken\r\n\r\n            },\r\n            body: JSON.stringify(payloads)\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            // console.log(data)\r\n             this.props.removeFromCart(data.orderId, removeProduct)\r\n             this.setState({products: this.props.getProductsInCart})\r\n             this.cartDetails()\r\n        },\r\n        (error) => {//API not accessable or through error            \r\n           \r\n            console.log( \"Error Data>>\"+error);\r\n        });\r\n    }\r\n    componentDidMount(props){\r\n        this.setState({products: this.props.getProductsInCart})\r\n        console.log('componnent did mount called')\r\n        this.cartDetails()\r\n    }\r\n    cartDetails = () => {\r\n        fetch(this.props.getAppSet.API.cartDetails,{\r\n            method: 'GET',\r\n            headers: { \r\n                'Content-type': 'application/json',\r\n                'WCToken':  this.props.getWCToken,\r\n                'WCTrustedToken': this.props.getWCTrustedToken\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            console.log('cartDetail api called')\r\n            console.log(json)\r\n            //this.setState({billAndShip: json})\r\n            this.props.updateDisAndTot(json.totalProductPrice, json.grandTotal, json.totalAdjustment)\r\n            this.setState({products: this.props.getProductsInCart})\r\n        }).catch(e => console.log(e));\r\n    }\r\n    updateQuantity2 = (event, SKUUniqueID, orderItemId, orderId, quantity, Price) => {\r\n        let updateProduct = {SKUUniqueID:SKUUniqueID, orderItemId:orderItemId, quantity: event.target.value, Price:Price}\r\n        if(event.target.value === NaN){\r\n            this.setState({products: this.props.getProductsInCart})\r\n        }\r\n        else if(event.target.value !== quantity){\r\n        \r\n            this.props.updateCart(orderId, updateProduct)\r\n            this.setState({products: this.props.getProductsInCart})\r\n            console.log(event.target.value+\"<><><><\"+ quantity)\r\n        } \r\n    }\r\n    updateQuantity =(event, SKUUniqueID, orderItemId, orderId, quantity, Price) =>{      \r\n        let updateProduct = {SKUUniqueID:SKUUniqueID, orderItemId:orderItemId, quantity: event.target.value, Price:Price}\r\n        if(event.target.value !== quantity){\r\n        const payloads = {\r\n            orderId: orderId,\r\n            orderItem: [\r\n                {\"orderItemId\": orderItemId,\r\n                \"productId\": SKUUniqueID, \r\n                \"quantity\": quantity \r\n                }],\r\n            \"x_calculateOrder\": \"0\",\r\n            \"x_inventoryValidation\": \"true\"\r\n        }\r\n        fetch(this.props.getAppSet.API.addToCartUrl,{\r\n            method: 'POST',\r\n            headers: {\r\n                //'accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'WCToken':  this.props.getWCToken,\r\n                'WCTrustedToken': this.props.getWCTrustedToken\r\n\r\n            },\r\n            body: JSON.stringify(payloads)\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n             console.log(data)\r\n             console.log(this.props.getWCToken+\"<<>>\"+this.props.getWCTrustedToken)\r\n             //this.props.addToCart(data.orderId, removeProduct)\r\n             this.props.updateCart(data.orderId, updateProduct)\r\n             this.setState({products: this.props.getProductsInCart})\r\n             this.cartDetails()\r\n             console.log(this.state.products)\r\n        },\r\n        (error) => {//API not accessable or through error            \r\n           \r\n            console.log( \"Error Data>>\"+error);\r\n        });\r\n    }\r\n    }\r\n    signIn = () => { \r\n        console.log(this.state.userName + this.state.password)\r\n        const payloads = {\r\n            logonId: this.state.userName, //\"zarak786@gmail.com\", //zarak786@gmail.com karim.zarak@royalcyber.com\r\n            logonPassword: this.state.password //\"Revert!23d\"\r\n        } \r\n        fetch(this.props.getAppSet.API.userLogin,{\r\n            method: 'POST',\r\n            headers: {\r\n                'accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n                'WCToken':  this.props.getWCToken,\r\n                'WCTrustedToken': this.props.getWCTrustedToken\r\n            },\r\n            body: JSON.stringify(payloads)\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            if(data.errors != undefined){//API results with an error message \r\n                console.log(data);\r\n                this.setState({\r\n                    isAuthenticated: false,\r\n                    errorMsg: data.errors[0].errorMessage\r\n                });\r\n            }\r\n            else if( data.WCToken !== undefined){ //Successfully Loged In\r\n                console.log(data.WCToken+\"------\"+data.WCTrustedToken);\r\n                this.setState({\r\n                    isAuthenticated: true,\r\n                    Token: data.WCToken,\r\n                    trustToken: data.WCTrustedToken,\r\n                     errorMsg : ''\r\n                });\r\n                \r\n                //below addin data into Redux-Reducer\r\n                //console.log(data.resourceName+\"from sign page\")\r\n                this.props.loginUser(this.state.userName, data.resourceName, data.braintreeToken, data.WCToken, data.userId,  data.WCTrustedToken, data.personalizationID);\r\n                this.cartDetails()\r\n                // this.props.changeToken(data.WCToken);\r\n            }\r\n            else{ // API results \r\n                console.log('Else Statement');\r\n                this.setState({\r\n                    isAuthenticated: false,\r\n                    errorMsg: 'Error while loging'\r\n                });\r\n            }\r\n        },\r\n        (error) => {//API not accessable or through error            \r\n            this.setState({\r\n                isAuthenticated: false,\r\n                errorMsg: 'Either your user name or password is wrong'\r\n            });\r\n            console.log(this.state.isAuthenticated+\"Error Data>>\"+error);\r\n        }); \r\n        //this.setState({startLoading: false});\r\n    }\r\n    render(){\r\n        let checkCustomer = ''\r\n        if(this.props.getResourceName === 'loginidentity' || this.props.getResourceName === 'person'){\r\n            checkCustomer = (\r\n               <> <div class=\"clearBoth\"></div>\r\n                <Link className=\"nextBtn\" to=\"/Checkout/\">Checkout</Link>\r\n                <br/><br/>\r\n                </>\r\n            )\r\n        console.log(this.props.getWCToken+\"<<<\"+this.props.getResourceName+\">>>\"+this.props.getWCTrustedToken)\r\n        }\r\n        else{\r\n            checkCustomer = (\r\n                <div className=\"loginCartPage\"><br/>\r\n            <p><b>Returning customers</b></p>\r\n        <input type=\"text\" name=\"userName\" placeholder=\"Username\" onChange={this.formHandler}/><br/><br/>\r\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.formHandler}/><br/><br/>\r\n        <button className=\"nextBtn\" onClick={this.signIn}>Sign In & Checkout</button>\r\n             </div> \r\n        )\r\n        }\r\n\r\n        return(\r\n            <div className=\"shoppingCart\">\r\n                <h2>Shopping Cart</h2>\r\n                <div className=\"clearBoth\"></div>\r\n                <div className=\"items\">\r\n                    <table>\r\n                        <thead>\r\n                        <tr className=\"headings\">\r\n                            <td className=\"item\">Item</td>\r\n                            <td className=\"description\"></td>\r\n                            <td className=\"price\">Price</td>\r\n                            <td className=\"qty\">Qty</td>\r\n                            <td className=\"subtotal\">SubTotal</td>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                        {this.state.products.map( (item, index) => (                        \r\n                        <tr className=\"products\" key={index}>\r\n                            <td className=\"item\">\r\n                            <Link to={`/Product/?${item.uniqueID}`}>\r\n                                <img src={`${this.props.getAppSet.serverBaseURL}${item.thumbnail}`} />\r\n                            </Link>\r\n                            </td>\r\n                            <td className=\"description\">\r\n                                <Link to={`/Product/?${item.uniqueID}`}>  {item.longDescription}</Link>\r\n                                <br/>\r\n                                <button className=\"nextBtn sizing\" onClick={this.removeItem.bind(this, \r\n                                    item.SKUUniqueID, \r\n                                    item.orderItemId, \r\n                                    this.props.getOrderId,\r\n                                    item.quantity,\r\n                                    item.Price\r\n                                    )}>Remove Item</button>\r\n                            </td>\r\n                            <td className=\"price\">\r\n                                <span>{item.Price}</span>\r\n                            </td>\r\n                            <td className=\"qty\">\r\n                                <select  defaultValue={'DEFAULT'} onChange={\r\n                                    (event) => {this.updateQuantity(event,\r\n                                        item.SKUUniqueID, \r\n                                        item.orderItemId, \r\n                                        this.props.getOrderId,\r\n                                        item.quantity,\r\n                                        item.Price  \r\n                                    )}\r\n                                }>\r\n                                <option value={item.quantity} selected>{item.quantity}</option>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"6\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"11\">11</option>\r\n                                <option value=\"12\">12</option>\r\n                                <option value=\"13\">13</option>\r\n                                <option value=\"14\">14</option>\r\n                                <option value=\"15\">15</option>\r\n                                <option value=\"16\">16</option>\r\n                                <option value=\"17\">17</option>\r\n                                <option value=\"18\">18</option>\r\n                                <option value=\"19\">19</option>\r\n                                <option value=\"20\">20</option>\r\n                                </select>\r\n                                {/* <input type=\"text\" value={item.quantity} onChange={\r\n                                    (event) => {this.updateQuantity(event,\r\n                                        item.SKUUniqueID, \r\n                                        item.orderItemId, \r\n                                        this.props.getOrderId,\r\n                                        item.quantity,\r\n                                        item.Price  \r\n                                    )}\r\n                                }/> */}\r\n                            </td>\r\n                            <td className=\"subtotal\">\r\n                                <span>{(parseFloat(item.Price)*parseFloat(item.quantity)).toFixed(2)}</span>\r\n                            </td>\r\n                        </tr>\r\n))}\r\n                        <tr className=\"wishList\">\r\n                            <td colSpan=\"2\" className=\"wishList\">\r\n                                {/* <p>\r\n                                    <b>New customer & guests</b><br/>\r\n                                        Checkout without signing in<br/>\r\n\r\n\r\n                                        You can make your purchases from Aurora without signing in.<br/>\r\n\r\n\r\n                                        You will be given the option to register during the checkout steps.\r\n                                </p>\r\n                                <Link className=\"nextBtn\" to=\"/Checkout/\">Continue Checkout</Link> */}\r\n                            </td> \r\n                            <td colSpan=\"3\"  className=\"delete\">\r\n                                <br/><br/>\r\n                            <div className=\"clearBoth\"></div>\r\n                            {checkCustomer}\r\n                                {/* {this.props.getResourceName === 'loginidentity' || this.props.getResourceName === 'person'  ?  //guestidentity   person  \"loginidentity\"\r\n                                <div className=\"loginCartPage\"><br/>\r\n                                        <p><b>Returning customers</b></p>\r\n                                    <input type=\"text\" name=\"userName\" placeholder=\"Username\" onChange={this.formHandler}/><br/><br/>\r\n                                    <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={this.formHandler}/><br/><br/>\r\n                                    <button className=\"nextBtn\" onClick={this.signIn}>Sign In & Checkout</button>\r\n                                </div>\r\n                                : this.props.getResourceName === 'guestidentity' ? <Link className=\"nextBtn\" to=\"/Checkout/\">Checkout</Link> : null } */}\r\n                                \r\n                                {/* <Link className=\"nextBtn\" to=\"/Checkout/\">Next</Link> */}\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <OrderSummaryPopup/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        getResourceName : state.userToken.resourceName,\r\n        getWCToken : state.userToken.WCToken,\r\n        getWCTrustedToken: state.userToken.WCTrustedToken,\r\n        getProductsInCart : state.cart.products,\r\n        //getCartQuantity: state.cart.cart,\r\n        getSubTotal :state.cart.subTotal,\r\n        getOrderId : state.cart.orderId,\r\n\r\n        getAppSet: state.getAppSet\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        removeFromCart: (orderId, removeProduct) => {\r\n            dispatch({\r\n                type: 'REMOVE_FROM_CART', payloads :{ orderId, removeProduct}\r\n            })\r\n        },\r\n\r\n        updateCart : (orderId, updateProduct) => {\r\n            dispatch({\r\n                type: 'UPDATE_CART', payloads: {orderId, updateProduct}\r\n            })\r\n        },\r\n\r\n        updateDisAndTot : (total, grandTotal, discount) => {\r\n            dispatch({\r\n                type: 'CART_DETAILS', payloads: {total, grandTotal, discount}\r\n            })\r\n        },\r\n\r\n        loginUser: (email, resourceName,  braintreeToken, tokn, userId, WCTrustedToken, personalizationID ) => {\r\n            dispatch({\r\n                    type: 'LOGED_USER', payloads: {email, resourceName, braintreeToken,  tokn, userId, WCTrustedToken, personalizationID}\r\n                })\r\n        }\r\n   }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage); "]},"metadata":{},"sourceType":"module"}