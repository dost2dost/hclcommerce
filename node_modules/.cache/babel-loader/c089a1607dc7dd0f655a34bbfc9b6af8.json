{"ast":null,"code":"var itemSize = 2;\nvar box = {\n  min: [0, 0],\n  max: [0, 0]\n};\n\nfunction bounds(positions) {\n  var count = positions.length / itemSize;\n  box.min[0] = positions[0];\n  box.min[1] = positions[1];\n  box.max[0] = positions[0];\n  box.max[1] = positions[1];\n\n  for (var i = 0; i < count; i++) {\n    var x = positions[i * itemSize + 0];\n    var y = positions[i * itemSize + 1];\n    box.min[0] = Math.min(x, box.min[0]);\n    box.min[1] = Math.min(y, box.min[1]);\n    box.max[0] = Math.max(x, box.max[0]);\n    box.max[1] = Math.max(y, box.max[1]);\n  }\n}\n\nmodule.exports.computeBox = function (positions, output) {\n  bounds(positions);\n  output.min.set(box.min[0], box.min[1], 0);\n  output.max.set(box.max[0], box.max[1], 0);\n};\n\nmodule.exports.computeSphere = function (positions, output) {\n  bounds(positions);\n  var minX = box.min[0];\n  var minY = box.min[1];\n  var maxX = box.max[0];\n  var maxY = box.max[1];\n  var width = maxX - minX;\n  var height = maxY - minY;\n  var length = Math.sqrt(width * width + height * height);\n  output.center.set(minX + width / 2, minY + height / 2, 0);\n  output.radius = length / 2;\n};","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/three-bmfont-text/lib/utils.js"],"names":["itemSize","box","min","max","bounds","positions","count","length","i","x","y","Math","module","exports","computeBox","output","set","computeSphere","minX","minY","maxX","maxY","width","height","sqrt","center","radius"],"mappings":"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","sourcesContent":["var itemSize = 2\nvar box = { min: [0, 0], max: [0, 0] }\n\nfunction bounds (positions) {\n  var count = positions.length / itemSize\n  box.min[0] = positions[0]\n  box.min[1] = positions[1]\n  box.max[0] = positions[0]\n  box.max[1] = positions[1]\n\n  for (var i = 0; i < count; i++) {\n    var x = positions[i * itemSize + 0]\n    var y = positions[i * itemSize + 1]\n    box.min[0] = Math.min(x, box.min[0])\n    box.min[1] = Math.min(y, box.min[1])\n    box.max[0] = Math.max(x, box.max[0])\n    box.max[1] = Math.max(y, box.max[1])\n  }\n}\n\nmodule.exports.computeBox = function (positions, output) {\n  bounds(positions)\n  output.min.set(box.min[0], box.min[1], 0)\n  output.max.set(box.max[0], box.max[1], 0)\n}\n\nmodule.exports.computeSphere = function (positions, output) {\n  bounds(positions)\n  var minX = box.min[0]\n  var minY = box.min[1]\n  var maxX = box.max[0]\n  var maxY = box.max[1]\n  var width = maxX - minX\n  var height = maxY - minY\n  var length = Math.sqrt(width * width + height * height)\n  output.center.set(minX + width / 2, minY + height / 2, 0)\n  output.radius = length / 2\n}\n"]},"metadata":{},"sourceType":"script"}