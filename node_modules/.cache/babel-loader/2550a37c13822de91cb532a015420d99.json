{"ast":null,"code":"var registerComponent = require('../core/component').registerComponent;\n\nvar registerShader = require('../core/shader').registerShader;\n\nvar THREE = require('../lib/three');\n/**\n * Link component. Connect experiences and traverse between them in VR\n *\n * @member {object} hiddenEls - Store the hidden elements during peek mode.\n */\n\n\nmodule.exports.Component = registerComponent('link', {\n  schema: {\n    backgroundColor: {\n      default: 'red',\n      type: 'color'\n    },\n    borderColor: {\n      default: 'white',\n      type: 'color'\n    },\n    highlighted: {\n      default: false\n    },\n    highlightedColor: {\n      default: '#24CAFF',\n      type: 'color'\n    },\n    href: {\n      default: ''\n    },\n    image: {\n      type: 'asset'\n    },\n    on: {\n      default: 'click'\n    },\n    peekMode: {\n      default: false\n    },\n    title: {\n      default: ''\n    },\n    titleColor: {\n      default: 'white',\n      type: 'color'\n    },\n    visualAspectEnabled: {\n      default: false\n    }\n  },\n  init: function () {\n    this.navigate = this.navigate.bind(this);\n    this.previousQuaternion = undefined;\n    this.quaternionClone = new THREE.Quaternion(); // Store hidden elements during peek mode so we can show them again later.\n\n    this.hiddenEls = [];\n  },\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n    var backgroundColor;\n    var strokeColor;\n\n    if (!data.visualAspectEnabled) {\n      return;\n    }\n\n    this.initVisualAspect();\n    backgroundColor = data.highlighted ? data.highlightedColor : data.backgroundColor;\n    strokeColor = data.highlighted ? data.highlightedColor : data.borderColor;\n    el.setAttribute('material', 'backgroundColor', backgroundColor);\n    el.setAttribute('material', 'strokeColor', strokeColor);\n\n    if (data.on !== oldData.on) {\n      this.updateEventListener();\n    }\n\n    if (oldData.peekMode !== undefined && data.peekMode !== oldData.peekMode) {\n      this.updatePeekMode();\n    }\n\n    if (!data.image || oldData.image === data.image) {\n      return;\n    }\n\n    el.setAttribute('material', 'pano', typeof data.image === 'string' ? data.image : data.image.src);\n  },\n\n  /*\n   * Toggle all elements and full 360 preview of the linked page.\n   */\n  updatePeekMode: function () {\n    var el = this.el;\n    var sphereEl = this.sphereEl;\n\n    if (this.data.peekMode) {\n      this.hideAll();\n      el.getObject3D('mesh').visible = false;\n      sphereEl.setAttribute('visible', true);\n    } else {\n      this.showAll();\n      el.getObject3D('mesh').visible = true;\n      sphereEl.setAttribute('visible', false);\n    }\n  },\n  play: function () {\n    this.updateEventListener();\n  },\n  pause: function () {\n    this.removeEventListener();\n  },\n  updateEventListener: function () {\n    var el = this.el;\n\n    if (!el.isPlaying) {\n      return;\n    }\n\n    this.removeEventListener();\n    el.addEventListener(this.data.on, this.navigate);\n  },\n  removeEventListener: function () {\n    var on = this.data.on;\n\n    if (!on) {\n      return;\n    }\n\n    this.el.removeEventListener(on, this.navigate);\n  },\n  initVisualAspect: function () {\n    var el = this.el;\n    var semiSphereEl;\n    var sphereEl;\n    var textEl;\n\n    if (!this.data.visualAspectEnabled || this.visualAspectInitialized) {\n      return;\n    }\n\n    textEl = this.textEl = this.textEl || document.createElement('a-entity');\n    sphereEl = this.sphereEl = this.sphereEl || document.createElement('a-entity');\n    semiSphereEl = this.semiSphereEl = this.semiSphereEl || document.createElement('a-entity'); // Set portal.\n\n    el.setAttribute('geometry', {\n      primitive: 'circle',\n      radius: 1.0,\n      segments: 64\n    });\n    el.setAttribute('material', {\n      shader: 'portal',\n      pano: this.data.image,\n      side: 'double'\n    }); // Set text that displays the link title and URL.\n\n    textEl.setAttribute('text', {\n      color: this.data.titleColor,\n      align: 'center',\n      font: 'kelsonsans',\n      value: this.data.title || this.data.href,\n      width: 4\n    });\n    textEl.setAttribute('position', '0 1.5 0');\n    el.appendChild(textEl); // Set sphere rendered when camera is close to portal to allow user to peek inside.\n\n    semiSphereEl.setAttribute('geometry', {\n      primitive: 'sphere',\n      radius: 1.0,\n      phiStart: 0,\n      segmentsWidth: 64,\n      segmentsHeight: 64,\n      phiLength: 180,\n      thetaStart: 0,\n      thetaLength: 360\n    });\n    semiSphereEl.setAttribute('material', {\n      shader: 'portal',\n      borderEnabled: 0.0,\n      pano: this.data.image,\n      side: 'back'\n    });\n    semiSphereEl.setAttribute('rotation', '0 180 0');\n    semiSphereEl.setAttribute('position', '0 0 0');\n    semiSphereEl.setAttribute('visible', false);\n    el.appendChild(semiSphereEl); // Set sphere rendered when camera is close to portal to allow user to peek inside.\n\n    sphereEl.setAttribute('geometry', {\n      primitive: 'sphere',\n      radius: 10,\n      segmentsWidth: 64,\n      segmentsHeight: 64\n    });\n    sphereEl.setAttribute('material', {\n      shader: 'portal',\n      borderEnabled: 0.0,\n      pano: this.data.image,\n      side: 'back'\n    });\n    sphereEl.setAttribute('visible', false);\n    el.appendChild(sphereEl);\n    this.visualAspectInitialized = true;\n  },\n  navigate: function () {\n    window.location = this.data.href;\n  },\n\n  /**\n   * 1. Swap plane that represents portal with sphere with a hole when the camera is close\n   * so user can peek inside portal. Sphere is rendered on oposite side of portal\n   * from where user enters.\n   * 2. Place the url/title above or inside portal depending on distance to camera.\n   * 3. Face portal to camera when far away from user.\n   */\n  tick: function () {\n    var cameraWorldPosition = new THREE.Vector3();\n    var elWorldPosition = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    var scale = new THREE.Vector3();\n    return function () {\n      var el = this.el;\n      var object3D = el.object3D;\n      var camera = el.sceneEl.camera;\n      var cameraPortalOrientation;\n      var distance;\n      var textEl = this.textEl;\n\n      if (!this.data.visualAspectEnabled) {\n        return;\n      } // Update matrices\n\n\n      object3D.updateMatrixWorld();\n      camera.parent.updateMatrixWorld();\n      camera.updateMatrixWorld();\n      object3D.matrix.decompose(elWorldPosition, quaternion, scale);\n      elWorldPosition.setFromMatrixPosition(object3D.matrixWorld);\n      cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n      distance = elWorldPosition.distanceTo(cameraWorldPosition);\n\n      if (distance > 20) {\n        // Store original orientation to be restored when the portal stops facing the camera.\n        if (!this.previousQuaternion) {\n          this.quaternionClone.copy(quaternion);\n          this.previousQuaternion = this.quaternionClone;\n        } // If the portal is far away from the user, face portal to camera.\n\n\n        object3D.lookAt(cameraWorldPosition);\n      } else {\n        // When portal is close to the user/camera.\n        cameraPortalOrientation = this.calculateCameraPortalOrientation(); // If user gets very close to portal, replace with holed sphere they can peek in.\n\n        if (distance < 0.5) {\n          // Configure text size and sphere orientation depending side user approaches portal.\n          if (this.semiSphereEl.getAttribute('visible') === true) {\n            return;\n          }\n\n          textEl.setAttribute('text', 'width', 1.5);\n\n          if (cameraPortalOrientation <= 0.0) {\n            textEl.setAttribute('position', '0 0 0.75');\n            textEl.setAttribute('rotation', '0 180 0');\n            this.semiSphereEl.setAttribute('rotation', '0 0 0');\n          } else {\n            textEl.setAttribute('position', '0 0 -0.75');\n            textEl.setAttribute('rotation', '0 0 0');\n            this.semiSphereEl.setAttribute('rotation', '0 180 0');\n          }\n\n          el.getObject3D('mesh').visible = false;\n          this.semiSphereEl.setAttribute('visible', true);\n          this.peekCameraPortalOrientation = cameraPortalOrientation;\n        } else {\n          // Calculate wich side the camera is approaching the camera (back / front).\n          // Adjust text orientation based on camera position.\n          if (cameraPortalOrientation <= 0.0) {\n            textEl.setAttribute('rotation', '0 180 0');\n          } else {\n            textEl.setAttribute('rotation', '0 0 0');\n          }\n\n          textEl.setAttribute('text', 'width', 5);\n          textEl.setAttribute('position', '0 1.5 0');\n          el.getObject3D('mesh').visible = true;\n          this.semiSphereEl.setAttribute('visible', false);\n          this.peekCameraPortalOrientation = undefined;\n        }\n\n        if (this.previousQuaternion) {\n          object3D.quaternion.copy(this.previousQuaternion);\n          this.previousQuaternion = undefined;\n        }\n      }\n    };\n  }(),\n  hideAll: function () {\n    var el = this.el;\n    var hiddenEls = this.hiddenEls;\n    var self = this;\n\n    if (hiddenEls.length > 0) {\n      return;\n    }\n\n    el.sceneEl.object3D.traverse(function (object) {\n      if (object && object.el && object.el.hasAttribute('link-controls')) {\n        return;\n      }\n\n      if (!object.el || object === el.sceneEl.object3D || object.el === el || object.el === self.sphereEl || object.el === el.sceneEl.cameraEl || object.el.getAttribute('visible') === false || object.el === self.textEl || object.el === self.semiSphereEl) {\n        return;\n      }\n\n      object.el.setAttribute('visible', false);\n      hiddenEls.push(object.el);\n    });\n  },\n  showAll: function () {\n    this.hiddenEls.forEach(function (el) {\n      el.setAttribute('visible', true);\n    });\n    this.hiddenEls = [];\n  },\n\n  /**\n   * Calculate whether the camera faces the front or back face of the portal.\n   * @returns {number} > 0 if camera faces front of portal, < 0 if it faces back of portal.\n   */\n  calculateCameraPortalOrientation: function () {\n    var mat4 = new THREE.Matrix4();\n    var cameraPosition = new THREE.Vector3();\n    var portalNormal = new THREE.Vector3(0, 0, 1);\n    var portalPosition = new THREE.Vector3(0, 0, 0);\n    return function () {\n      var el = this.el;\n      var camera = el.sceneEl.camera; // Reset tmp variables.\n\n      cameraPosition.set(0, 0, 0);\n      portalNormal.set(0, 0, 1);\n      portalPosition.set(0, 0, 0); // Apply portal orientation to the normal.\n\n      el.object3D.matrixWorld.extractRotation(mat4);\n      portalNormal.applyMatrix4(mat4); // Calculate portal world position.\n\n      el.object3D.updateMatrixWorld();\n      el.object3D.localToWorld(portalPosition); // Calculate camera world position.\n\n      camera.parent.parent.updateMatrixWorld();\n      camera.parent.updateMatrixWorld();\n      camera.updateMatrixWorld();\n      camera.localToWorld(cameraPosition); // Calculate vector from portal to camera.\n      // (portal) -------> (camera)\n\n      cameraPosition.sub(portalPosition).normalize();\n      portalNormal.normalize(); // Side where camera approaches portal is given by sign of dot product of portal normal\n      // and portal to camera vectors.\n\n      return Math.sign(portalNormal.dot(cameraPosition));\n    };\n  }(),\n  remove: function () {\n    this.removeEventListener();\n  }\n});\n/* eslint-disable */\n\nregisterShader('portal', {\n  schema: {\n    borderEnabled: {\n      default: 1.0,\n      type: 'int',\n      is: 'uniform'\n    },\n    backgroundColor: {\n      default: 'red',\n      type: 'color',\n      is: 'uniform'\n    },\n    pano: {\n      type: 'map',\n      is: 'uniform'\n    },\n    strokeColor: {\n      default: 'white',\n      type: 'color',\n      is: 'uniform'\n    }\n  },\n  vertexShader: ['vec3 portalPosition;', 'varying vec3 vWorldPosition;', 'varying float vDistanceToCenter;', 'varying float vDistance;', 'void main() {', 'vDistanceToCenter = clamp(length(position - vec3(0.0, 0.0, 0.0)), 0.0, 1.0);', 'portalPosition = (modelMatrix * vec4(0.0, 0.0, 0.0, 1.0)).xyz;', 'vDistance = length(portalPosition - cameraPosition);', 'vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;', 'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);', '}'].join('\\n'),\n  fragmentShader: ['#define RECIPROCAL_PI2 0.15915494', 'uniform sampler2D pano;', 'uniform vec3 strokeColor;', 'uniform vec3 backgroundColor;', 'uniform float borderEnabled;', 'varying float vDistanceToCenter;', 'varying float vDistance;', 'varying vec3 vWorldPosition;', 'void main() {', 'vec3 direction = normalize(vWorldPosition - cameraPosition);', 'vec2 sampleUV;', 'float borderThickness = clamp(exp(-vDistance / 50.0), 0.6, 0.95);', 'sampleUV.y = saturate(direction.y * 0.5  + 0.5);', 'sampleUV.x = atan(direction.z, -direction.x) * -RECIPROCAL_PI2 + 0.5;', 'if (vDistanceToCenter > borderThickness && borderEnabled == 1.0) {', 'gl_FragColor = vec4(strokeColor, 1.0);', '} else {', 'gl_FragColor = mix(texture2D(pano, sampleUV), vec4(backgroundColor, 1.0), clamp(pow((vDistance / 15.0), 2.0), 0.0, 1.0));', '}', '}'].join('\\n')\n});\n/* eslint-enable */","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/components/link.js"],"names":["registerComponent","require","registerShader","THREE","module","exports","Component","schema","backgroundColor","default","type","borderColor","highlighted","highlightedColor","href","image","on","peekMode","title","titleColor","visualAspectEnabled","init","navigate","bind","previousQuaternion","undefined","quaternionClone","Quaternion","hiddenEls","update","oldData","data","el","strokeColor","initVisualAspect","setAttribute","updateEventListener","updatePeekMode","src","sphereEl","hideAll","getObject3D","visible","showAll","play","pause","removeEventListener","isPlaying","addEventListener","semiSphereEl","textEl","visualAspectInitialized","document","createElement","primitive","radius","segments","shader","pano","side","color","align","font","value","width","appendChild","phiStart","segmentsWidth","segmentsHeight","phiLength","thetaStart","thetaLength","borderEnabled","window","location","tick","cameraWorldPosition","Vector3","elWorldPosition","quaternion","scale","object3D","camera","sceneEl","cameraPortalOrientation","distance","updateMatrixWorld","parent","matrix","decompose","setFromMatrixPosition","matrixWorld","distanceTo","copy","lookAt","calculateCameraPortalOrientation","getAttribute","peekCameraPortalOrientation","self","length","traverse","object","hasAttribute","cameraEl","push","forEach","mat4","Matrix4","cameraPosition","portalNormal","portalPosition","set","extractRotation","applyMatrix4","localToWorld","sub","normalize","Math","sign","dot","remove","is","vertexShader","join","fragmentShader"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BD,iBAArD;;AACA,IAAIE,cAAc,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BC,cAA/C;;AACA,IAAIC,KAAK,GAAGF,OAAO,CAAC,cAAD,CAAnB;AAEA;;;;;;;AAKAG,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2BN,iBAAiB,CAAC,MAAD,EAAS;AACnDO,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE;AAACC,MAAAA,OAAO,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KADX;AAENC,IAAAA,WAAW,EAAE;AAACF,MAAAA,OAAO,EAAE,OAAV;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFP;AAGNE,IAAAA,WAAW,EAAE;AAACH,MAAAA,OAAO,EAAE;AAAV,KAHP;AAINI,IAAAA,gBAAgB,EAAE;AAACJ,MAAAA,OAAO,EAAE,SAAV;AAAqBC,MAAAA,IAAI,EAAE;AAA3B,KAJZ;AAKNI,IAAAA,IAAI,EAAE;AAACL,MAAAA,OAAO,EAAE;AAAV,KALA;AAMNM,IAAAA,KAAK,EAAE;AAACL,MAAAA,IAAI,EAAE;AAAP,KAND;AAONM,IAAAA,EAAE,EAAE;AAACP,MAAAA,OAAO,EAAE;AAAV,KAPE;AAQNQ,IAAAA,QAAQ,EAAE;AAACR,MAAAA,OAAO,EAAE;AAAV,KARJ;AASNS,IAAAA,KAAK,EAAE;AAACT,MAAAA,OAAO,EAAE;AAAV,KATD;AAUNU,IAAAA,UAAU,EAAE;AAACV,MAAAA,OAAO,EAAE,OAAV;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAVN;AAWNU,IAAAA,mBAAmB,EAAE;AAACX,MAAAA,OAAO,EAAE;AAAV;AAXf,GAD2C;AAenDY,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,kBAAL,GAA0BC,SAA1B;AACA,SAAKC,eAAL,GAAuB,IAAIvB,KAAK,CAACwB,UAAV,EAAvB,CAHgB,CAIhB;;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACD,GArBkD;AAuBnDC,EAAAA,MAAM,EAAE,UAAUC,OAAV,EAAmB;AACzB,QAAIC,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIC,EAAE,GAAG,KAAKA,EAAd;AACA,QAAIxB,eAAJ;AACA,QAAIyB,WAAJ;;AAEA,QAAI,CAACF,IAAI,CAACX,mBAAV,EAA+B;AAAE;AAAS;;AAE1C,SAAKc,gBAAL;AAEA1B,IAAAA,eAAe,GAAGuB,IAAI,CAACnB,WAAL,GAAmBmB,IAAI,CAAClB,gBAAxB,GAA2CkB,IAAI,CAACvB,eAAlE;AACAyB,IAAAA,WAAW,GAAGF,IAAI,CAACnB,WAAL,GAAmBmB,IAAI,CAAClB,gBAAxB,GAA2CkB,IAAI,CAACpB,WAA9D;AACAqB,IAAAA,EAAE,CAACG,YAAH,CAAgB,UAAhB,EAA4B,iBAA5B,EAA+C3B,eAA/C;AACAwB,IAAAA,EAAE,CAACG,YAAH,CAAgB,UAAhB,EAA4B,aAA5B,EAA2CF,WAA3C;;AAEA,QAAIF,IAAI,CAACf,EAAL,KAAYc,OAAO,CAACd,EAAxB,EAA4B;AAAE,WAAKoB,mBAAL;AAA6B;;AAE3D,QAAIN,OAAO,CAACb,QAAR,KAAqBQ,SAArB,IACAM,IAAI,CAACd,QAAL,KAAkBa,OAAO,CAACb,QAD9B,EACwC;AAAE,WAAKoB,cAAL;AAAwB;;AAElE,QAAI,CAACN,IAAI,CAAChB,KAAN,IAAee,OAAO,CAACf,KAAR,KAAkBgB,IAAI,CAAChB,KAA1C,EAAiD;AAAE;AAAS;;AAE5DiB,IAAAA,EAAE,CAACG,YAAH,CAAgB,UAAhB,EAA4B,MAA5B,EACgB,OAAOJ,IAAI,CAAChB,KAAZ,KAAsB,QAAtB,GAAiCgB,IAAI,CAAChB,KAAtC,GAA8CgB,IAAI,CAAChB,KAAL,CAAWuB,GADzE;AAED,GA/CkD;;AAiDnD;;;AAGAD,EAAAA,cAAc,EAAE,YAAY;AAC1B,QAAIL,EAAE,GAAG,KAAKA,EAAd;AACA,QAAIO,QAAQ,GAAG,KAAKA,QAApB;;AACA,QAAI,KAAKR,IAAL,CAAUd,QAAd,EAAwB;AACtB,WAAKuB,OAAL;AACAR,MAAAA,EAAE,CAACS,WAAH,CAAe,MAAf,EAAuBC,OAAvB,GAAiC,KAAjC;AACAH,MAAAA,QAAQ,CAACJ,YAAT,CAAsB,SAAtB,EAAiC,IAAjC;AACD,KAJD,MAIO;AACL,WAAKQ,OAAL;AACAX,MAAAA,EAAE,CAACS,WAAH,CAAe,MAAf,EAAuBC,OAAvB,GAAiC,IAAjC;AACAH,MAAAA,QAAQ,CAACJ,YAAT,CAAsB,SAAtB,EAAiC,KAAjC;AACD;AACF,GAhEkD;AAkEnDS,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKR,mBAAL;AACD,GApEkD;AAsEnDS,EAAAA,KAAK,EAAE,YAAY;AACjB,SAAKC,mBAAL;AACD,GAxEkD;AA0EnDV,EAAAA,mBAAmB,EAAE,YAAY;AAC/B,QAAIJ,EAAE,GAAG,KAAKA,EAAd;;AACA,QAAI,CAACA,EAAE,CAACe,SAAR,EAAmB;AAAE;AAAS;;AAC9B,SAAKD,mBAAL;AACAd,IAAAA,EAAE,CAACgB,gBAAH,CAAoB,KAAKjB,IAAL,CAAUf,EAA9B,EAAkC,KAAKM,QAAvC;AACD,GA/EkD;AAiFnDwB,EAAAA,mBAAmB,EAAE,YAAY;AAC/B,QAAI9B,EAAE,GAAG,KAAKe,IAAL,CAAUf,EAAnB;;AACA,QAAI,CAACA,EAAL,EAAS;AAAE;AAAS;;AACpB,SAAKgB,EAAL,CAAQc,mBAAR,CAA4B9B,EAA5B,EAAgC,KAAKM,QAArC;AACD,GArFkD;AAuFnDY,EAAAA,gBAAgB,EAAE,YAAY;AAC5B,QAAIF,EAAE,GAAG,KAAKA,EAAd;AACA,QAAIiB,YAAJ;AACA,QAAIV,QAAJ;AACA,QAAIW,MAAJ;;AAEA,QAAI,CAAC,KAAKnB,IAAL,CAAUX,mBAAX,IAAkC,KAAK+B,uBAA3C,EAAoE;AAAE;AAAS;;AAE/ED,IAAAA,MAAM,GAAG,KAAKA,MAAL,GAAc,KAAKA,MAAL,IAAeE,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAtC;AACAd,IAAAA,QAAQ,GAAG,KAAKA,QAAL,GAAgB,KAAKA,QAAL,IAAiBa,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAA5C;AACAJ,IAAAA,YAAY,GAAG,KAAKA,YAAL,GAAoB,KAAKA,YAAL,IAAqBG,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAxD,CAV4B,CAY5B;;AACArB,IAAAA,EAAE,CAACG,YAAH,CAAgB,UAAhB,EAA4B;AAACmB,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE,GAA9B;AAAmCC,MAAAA,QAAQ,EAAE;AAA7C,KAA5B;AACAxB,IAAAA,EAAE,CAACG,YAAH,CAAgB,UAAhB,EAA4B;AAACsB,MAAAA,MAAM,EAAE,QAAT;AAAmBC,MAAAA,IAAI,EAAE,KAAK3B,IAAL,CAAUhB,KAAnC;AAA0C4C,MAAAA,IAAI,EAAE;AAAhD,KAA5B,EAd4B,CAgB5B;;AACAT,IAAAA,MAAM,CAACf,YAAP,CAAoB,MAApB,EAA4B;AAC1ByB,MAAAA,KAAK,EAAE,KAAK7B,IAAL,CAAUZ,UADS;AAE1B0C,MAAAA,KAAK,EAAE,QAFmB;AAG1BC,MAAAA,IAAI,EAAE,YAHoB;AAI1BC,MAAAA,KAAK,EAAE,KAAKhC,IAAL,CAAUb,KAAV,IAAmB,KAAKa,IAAL,CAAUjB,IAJV;AAK1BkD,MAAAA,KAAK,EAAE;AALmB,KAA5B;AAOAd,IAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,SAAhC;AACAH,IAAAA,EAAE,CAACiC,WAAH,CAAef,MAAf,EAzB4B,CA2B5B;;AACAD,IAAAA,YAAY,CAACd,YAAb,CAA0B,UAA1B,EAAsC;AACpCmB,MAAAA,SAAS,EAAE,QADyB;AAEpCC,MAAAA,MAAM,EAAE,GAF4B;AAGpCW,MAAAA,QAAQ,EAAE,CAH0B;AAIpCC,MAAAA,aAAa,EAAE,EAJqB;AAKpCC,MAAAA,cAAc,EAAE,EALoB;AAMpCC,MAAAA,SAAS,EAAE,GANyB;AAOpCC,MAAAA,UAAU,EAAE,CAPwB;AAQpCC,MAAAA,WAAW,EAAE;AARuB,KAAtC;AAUAtB,IAAAA,YAAY,CAACd,YAAb,CAA0B,UAA1B,EAAsC;AACpCsB,MAAAA,MAAM,EAAE,QAD4B;AAEpCe,MAAAA,aAAa,EAAE,GAFqB;AAGpCd,MAAAA,IAAI,EAAE,KAAK3B,IAAL,CAAUhB,KAHoB;AAIpC4C,MAAAA,IAAI,EAAE;AAJ8B,KAAtC;AAMAV,IAAAA,YAAY,CAACd,YAAb,CAA0B,UAA1B,EAAsC,SAAtC;AACAc,IAAAA,YAAY,CAACd,YAAb,CAA0B,UAA1B,EAAsC,OAAtC;AACAc,IAAAA,YAAY,CAACd,YAAb,CAA0B,SAA1B,EAAqC,KAArC;AACAH,IAAAA,EAAE,CAACiC,WAAH,CAAehB,YAAf,EA/C4B,CAiD5B;;AACAV,IAAAA,QAAQ,CAACJ,YAAT,CAAsB,UAAtB,EAAkC;AAChCmB,MAAAA,SAAS,EAAE,QADqB;AAEhCC,MAAAA,MAAM,EAAE,EAFwB;AAGhCY,MAAAA,aAAa,EAAE,EAHiB;AAIhCC,MAAAA,cAAc,EAAE;AAJgB,KAAlC;AAMA7B,IAAAA,QAAQ,CAACJ,YAAT,CAAsB,UAAtB,EAAkC;AAChCsB,MAAAA,MAAM,EAAE,QADwB;AAEhCe,MAAAA,aAAa,EAAE,GAFiB;AAGhCd,MAAAA,IAAI,EAAE,KAAK3B,IAAL,CAAUhB,KAHgB;AAIhC4C,MAAAA,IAAI,EAAE;AAJ0B,KAAlC;AAMApB,IAAAA,QAAQ,CAACJ,YAAT,CAAsB,SAAtB,EAAiC,KAAjC;AACAH,IAAAA,EAAE,CAACiC,WAAH,CAAe1B,QAAf;AAEA,SAAKY,uBAAL,GAA+B,IAA/B;AACD,GAzJkD;AA2JnD7B,EAAAA,QAAQ,EAAE,YAAY;AACpBmD,IAAAA,MAAM,CAACC,QAAP,GAAkB,KAAK3C,IAAL,CAAUjB,IAA5B;AACD,GA7JkD;;AA+JnD;;;;;;;AAOA6D,EAAAA,IAAI,EAAG,YAAY;AACjB,QAAIC,mBAAmB,GAAG,IAAIzE,KAAK,CAAC0E,OAAV,EAA1B;AACA,QAAIC,eAAe,GAAG,IAAI3E,KAAK,CAAC0E,OAAV,EAAtB;AACA,QAAIE,UAAU,GAAG,IAAI5E,KAAK,CAACwB,UAAV,EAAjB;AACA,QAAIqD,KAAK,GAAG,IAAI7E,KAAK,CAAC0E,OAAV,EAAZ;AAEA,WAAO,YAAY;AACjB,UAAI7C,EAAE,GAAG,KAAKA,EAAd;AACA,UAAIiD,QAAQ,GAAGjD,EAAE,CAACiD,QAAlB;AACA,UAAIC,MAAM,GAAGlD,EAAE,CAACmD,OAAH,CAAWD,MAAxB;AACA,UAAIE,uBAAJ;AACA,UAAIC,QAAJ;AACA,UAAInC,MAAM,GAAG,KAAKA,MAAlB;;AAEA,UAAI,CAAC,KAAKnB,IAAL,CAAUX,mBAAf,EAAoC;AAAE;AAAS,OAR9B,CAUjB;;;AACA6D,MAAAA,QAAQ,CAACK,iBAAT;AACAJ,MAAAA,MAAM,CAACK,MAAP,CAAcD,iBAAd;AACAJ,MAAAA,MAAM,CAACI,iBAAP;AAEAL,MAAAA,QAAQ,CAACO,MAAT,CAAgBC,SAAhB,CAA0BX,eAA1B,EAA2CC,UAA3C,EAAuDC,KAAvD;AACAF,MAAAA,eAAe,CAACY,qBAAhB,CAAsCT,QAAQ,CAACU,WAA/C;AACAf,MAAAA,mBAAmB,CAACc,qBAApB,CAA0CR,MAAM,CAACS,WAAjD;AACAN,MAAAA,QAAQ,GAAGP,eAAe,CAACc,UAAhB,CAA2BhB,mBAA3B,CAAX;;AAEA,UAAIS,QAAQ,GAAG,EAAf,EAAmB;AACjB;AACA,YAAI,CAAC,KAAK7D,kBAAV,EAA8B;AAC5B,eAAKE,eAAL,CAAqBmE,IAArB,CAA0Bd,UAA1B;AACA,eAAKvD,kBAAL,GAA0B,KAAKE,eAA/B;AACD,SALgB,CAMjB;;;AACAuD,QAAAA,QAAQ,CAACa,MAAT,CAAgBlB,mBAAhB;AACD,OARD,MAQO;AACL;AACAQ,QAAAA,uBAAuB,GAAG,KAAKW,gCAAL,EAA1B,CAFK,CAGL;;AACA,YAAIV,QAAQ,GAAG,GAAf,EAAoB;AAClB;AACA,cAAI,KAAKpC,YAAL,CAAkB+C,YAAlB,CAA+B,SAA/B,MAA8C,IAAlD,EAAwD;AAAE;AAAS;;AACnE9C,UAAAA,MAAM,CAACf,YAAP,CAAoB,MAApB,EAA4B,OAA5B,EAAqC,GAArC;;AACA,cAAIiD,uBAAuB,IAAI,GAA/B,EAAoC;AAClClC,YAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,UAAhC;AACAe,YAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,SAAhC;AACA,iBAAKc,YAAL,CAAkBd,YAAlB,CAA+B,UAA/B,EAA2C,OAA3C;AACD,WAJD,MAIO;AACLe,YAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,WAAhC;AACAe,YAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,OAAhC;AACA,iBAAKc,YAAL,CAAkBd,YAAlB,CAA+B,UAA/B,EAA2C,SAA3C;AACD;;AACDH,UAAAA,EAAE,CAACS,WAAH,CAAe,MAAf,EAAuBC,OAAvB,GAAiC,KAAjC;AACA,eAAKO,YAAL,CAAkBd,YAAlB,CAA+B,SAA/B,EAA0C,IAA1C;AACA,eAAK8D,2BAAL,GAAmCb,uBAAnC;AACD,SAhBD,MAgBO;AACL;AACA;AACA,cAAIA,uBAAuB,IAAI,GAA/B,EAAoC;AAClClC,YAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,SAAhC;AACD,WAFD,MAEO;AACLe,YAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,OAAhC;AACD;;AACDe,UAAAA,MAAM,CAACf,YAAP,CAAoB,MAApB,EAA4B,OAA5B,EAAqC,CAArC;AACAe,UAAAA,MAAM,CAACf,YAAP,CAAoB,UAApB,EAAgC,SAAhC;AACAH,UAAAA,EAAE,CAACS,WAAH,CAAe,MAAf,EAAuBC,OAAvB,GAAiC,IAAjC;AACA,eAAKO,YAAL,CAAkBd,YAAlB,CAA+B,SAA/B,EAA0C,KAA1C;AACA,eAAK8D,2BAAL,GAAmCxE,SAAnC;AACD;;AACD,YAAI,KAAKD,kBAAT,EAA6B;AAC3ByD,UAAAA,QAAQ,CAACF,UAAT,CAAoBc,IAApB,CAAyB,KAAKrE,kBAA9B;AACA,eAAKA,kBAAL,GAA0BC,SAA1B;AACD;AACF;AACF,KAnED;AAoED,GA1EK,EAtK6C;AAkPnDe,EAAAA,OAAO,EAAE,YAAY;AACnB,QAAIR,EAAE,GAAG,KAAKA,EAAd;AACA,QAAIJ,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIsE,IAAI,GAAG,IAAX;;AACA,QAAItE,SAAS,CAACuE,MAAV,GAAmB,CAAvB,EAA0B;AAAE;AAAS;;AACrCnE,IAAAA,EAAE,CAACmD,OAAH,CAAWF,QAAX,CAAoBmB,QAApB,CAA6B,UAAUC,MAAV,EAAkB;AAC7C,UAAIA,MAAM,IAAIA,MAAM,CAACrE,EAAjB,IAAuBqE,MAAM,CAACrE,EAAP,CAAUsE,YAAV,CAAuB,eAAvB,CAA3B,EAAoE;AAAE;AAAS;;AAC/E,UAAI,CAACD,MAAM,CAACrE,EAAR,IAAcqE,MAAM,KAAKrE,EAAE,CAACmD,OAAH,CAAWF,QAApC,IAAgDoB,MAAM,CAACrE,EAAP,KAAcA,EAA9D,IACAqE,MAAM,CAACrE,EAAP,KAAckE,IAAI,CAAC3D,QADnB,IAC+B8D,MAAM,CAACrE,EAAP,KAAcA,EAAE,CAACmD,OAAH,CAAWoB,QADxD,IAEAF,MAAM,CAACrE,EAAP,CAAUgE,YAAV,CAAuB,SAAvB,MAAsC,KAFtC,IAE+CK,MAAM,CAACrE,EAAP,KAAckE,IAAI,CAAChD,MAFlE,IAGAmD,MAAM,CAACrE,EAAP,KAAckE,IAAI,CAACjD,YAHvB,EAGqC;AACnC;AACD;;AACDoD,MAAAA,MAAM,CAACrE,EAAP,CAAUG,YAAV,CAAuB,SAAvB,EAAkC,KAAlC;AACAP,MAAAA,SAAS,CAAC4E,IAAV,CAAeH,MAAM,CAACrE,EAAtB;AACD,KAVD;AAWD,GAlQkD;AAoQnDW,EAAAA,OAAO,EAAE,YAAY;AACnB,SAAKf,SAAL,CAAe6E,OAAf,CAAuB,UAAUzE,EAAV,EAAc;AAAEA,MAAAA,EAAE,CAACG,YAAH,CAAgB,SAAhB,EAA2B,IAA3B;AAAmC,KAA1E;AACA,SAAKP,SAAL,GAAiB,EAAjB;AACD,GAvQkD;;AAyQnD;;;;AAIAmE,EAAAA,gCAAgC,EAAG,YAAY;AAC7C,QAAIW,IAAI,GAAG,IAAIvG,KAAK,CAACwG,OAAV,EAAX;AACA,QAAIC,cAAc,GAAG,IAAIzG,KAAK,CAAC0E,OAAV,EAArB;AACA,QAAIgC,YAAY,GAAG,IAAI1G,KAAK,CAAC0E,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAnB;AACA,QAAIiC,cAAc,GAAG,IAAI3G,KAAK,CAAC0E,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAArB;AAEA,WAAO,YAAY;AACjB,UAAI7C,EAAE,GAAG,KAAKA,EAAd;AACA,UAAIkD,MAAM,GAAGlD,EAAE,CAACmD,OAAH,CAAWD,MAAxB,CAFiB,CAIjB;;AACA0B,MAAAA,cAAc,CAACG,GAAf,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AACAF,MAAAA,YAAY,CAACE,GAAb,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACAD,MAAAA,cAAc,CAACC,GAAf,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAPiB,CASjB;;AACA/E,MAAAA,EAAE,CAACiD,QAAH,CAAYU,WAAZ,CAAwBqB,eAAxB,CAAwCN,IAAxC;AACAG,MAAAA,YAAY,CAACI,YAAb,CAA0BP,IAA1B,EAXiB,CAajB;;AACA1E,MAAAA,EAAE,CAACiD,QAAH,CAAYK,iBAAZ;AACAtD,MAAAA,EAAE,CAACiD,QAAH,CAAYiC,YAAZ,CAAyBJ,cAAzB,EAfiB,CAiBjB;;AACA5B,MAAAA,MAAM,CAACK,MAAP,CAAcA,MAAd,CAAqBD,iBAArB;AACAJ,MAAAA,MAAM,CAACK,MAAP,CAAcD,iBAAd;AACAJ,MAAAA,MAAM,CAACI,iBAAP;AACAJ,MAAAA,MAAM,CAACgC,YAAP,CAAoBN,cAApB,EArBiB,CAuBjB;AACA;;AACAA,MAAAA,cAAc,CAACO,GAAf,CAAmBL,cAAnB,EAAmCM,SAAnC;AACAP,MAAAA,YAAY,CAACO,SAAb,GA1BiB,CA4BjB;AACA;;AACA,aAAOC,IAAI,CAACC,IAAL,CAAUT,YAAY,CAACU,GAAb,CAAiBX,cAAjB,CAAV,CAAP;AACD,KA/BD;AAgCD,GAtCiC,EA7QiB;AAqTnDY,EAAAA,MAAM,EAAE,YAAY;AAClB,SAAK1E,mBAAL;AACD;AAvTkD,CAAT,CAA5C;AA0TA;;AACA5C,cAAc,CAAC,QAAD,EAAW;AACvBK,EAAAA,MAAM,EAAE;AACNiE,IAAAA,aAAa,EAAE;AAAC/D,MAAAA,OAAO,EAAE,GAAV;AAAeC,MAAAA,IAAI,EAAE,KAArB;AAA4B+G,MAAAA,EAAE,EAAE;AAAhC,KADT;AAENjH,IAAAA,eAAe,EAAE;AAACC,MAAAA,OAAO,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE,OAAvB;AAAgC+G,MAAAA,EAAE,EAAE;AAApC,KAFX;AAGN/D,IAAAA,IAAI,EAAE;AAAChD,MAAAA,IAAI,EAAE,KAAP;AAAc+G,MAAAA,EAAE,EAAE;AAAlB,KAHA;AAINxF,IAAAA,WAAW,EAAE;AAACxB,MAAAA,OAAO,EAAE,OAAV;AAAmBC,MAAAA,IAAI,EAAE,OAAzB;AAAkC+G,MAAAA,EAAE,EAAE;AAAtC;AAJP,GADe;AAQvBC,EAAAA,YAAY,EAAE,CACZ,sBADY,EAEZ,8BAFY,EAGZ,kCAHY,EAIZ,0BAJY,EAKZ,eALY,EAMZ,8EANY,EAOZ,gEAPY,EAQZ,sDARY,EASZ,2DATY,EAUZ,yEAVY,EAWZ,GAXY,EAYZC,IAZY,CAYP,IAZO,CARS;AAsBvBC,EAAAA,cAAc,EAAE,CACd,mCADc,EAEd,yBAFc,EAGd,2BAHc,EAId,+BAJc,EAKd,8BALc,EAMd,kCANc,EAOd,0BAPc,EAQd,8BARc,EASd,eATc,EAUd,8DAVc,EAWd,gBAXc,EAYd,mEAZc,EAad,kDAbc,EAcd,uEAdc,EAed,oEAfc,EAgBd,wCAhBc,EAiBd,UAjBc,EAkBd,2HAlBc,EAmBd,GAnBc,EAoBd,GApBc,EAqBdD,IArBc,CAqBT,IArBS;AAtBO,CAAX,CAAd;AA6CA","sourcesContent":["var registerComponent = require('../core/component').registerComponent;\nvar registerShader = require('../core/shader').registerShader;\nvar THREE = require('../lib/three');\n\n/**\n * Link component. Connect experiences and traverse between them in VR\n *\n * @member {object} hiddenEls - Store the hidden elements during peek mode.\n */\nmodule.exports.Component = registerComponent('link', {\n  schema: {\n    backgroundColor: {default: 'red', type: 'color'},\n    borderColor: {default: 'white', type: 'color'},\n    highlighted: {default: false},\n    highlightedColor: {default: '#24CAFF', type: 'color'},\n    href: {default: ''},\n    image: {type: 'asset'},\n    on: {default: 'click'},\n    peekMode: {default: false},\n    title: {default: ''},\n    titleColor: {default: 'white', type: 'color'},\n    visualAspectEnabled: {default: false}\n  },\n\n  init: function () {\n    this.navigate = this.navigate.bind(this);\n    this.previousQuaternion = undefined;\n    this.quaternionClone = new THREE.Quaternion();\n    // Store hidden elements during peek mode so we can show them again later.\n    this.hiddenEls = [];\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    var el = this.el;\n    var backgroundColor;\n    var strokeColor;\n\n    if (!data.visualAspectEnabled) { return; }\n\n    this.initVisualAspect();\n\n    backgroundColor = data.highlighted ? data.highlightedColor : data.backgroundColor;\n    strokeColor = data.highlighted ? data.highlightedColor : data.borderColor;\n    el.setAttribute('material', 'backgroundColor', backgroundColor);\n    el.setAttribute('material', 'strokeColor', strokeColor);\n\n    if (data.on !== oldData.on) { this.updateEventListener(); }\n\n    if (oldData.peekMode !== undefined &&\n        data.peekMode !== oldData.peekMode) { this.updatePeekMode(); }\n\n    if (!data.image || oldData.image === data.image) { return; }\n\n    el.setAttribute('material', 'pano',\n                    typeof data.image === 'string' ? data.image : data.image.src);\n  },\n\n  /*\n   * Toggle all elements and full 360 preview of the linked page.\n   */\n  updatePeekMode: function () {\n    var el = this.el;\n    var sphereEl = this.sphereEl;\n    if (this.data.peekMode) {\n      this.hideAll();\n      el.getObject3D('mesh').visible = false;\n      sphereEl.setAttribute('visible', true);\n    } else {\n      this.showAll();\n      el.getObject3D('mesh').visible = true;\n      sphereEl.setAttribute('visible', false);\n    }\n  },\n\n  play: function () {\n    this.updateEventListener();\n  },\n\n  pause: function () {\n    this.removeEventListener();\n  },\n\n  updateEventListener: function () {\n    var el = this.el;\n    if (!el.isPlaying) { return; }\n    this.removeEventListener();\n    el.addEventListener(this.data.on, this.navigate);\n  },\n\n  removeEventListener: function () {\n    var on = this.data.on;\n    if (!on) { return; }\n    this.el.removeEventListener(on, this.navigate);\n  },\n\n  initVisualAspect: function () {\n    var el = this.el;\n    var semiSphereEl;\n    var sphereEl;\n    var textEl;\n\n    if (!this.data.visualAspectEnabled || this.visualAspectInitialized) { return; }\n\n    textEl = this.textEl = this.textEl || document.createElement('a-entity');\n    sphereEl = this.sphereEl = this.sphereEl || document.createElement('a-entity');\n    semiSphereEl = this.semiSphereEl = this.semiSphereEl || document.createElement('a-entity');\n\n    // Set portal.\n    el.setAttribute('geometry', {primitive: 'circle', radius: 1.0, segments: 64});\n    el.setAttribute('material', {shader: 'portal', pano: this.data.image, side: 'double'});\n\n    // Set text that displays the link title and URL.\n    textEl.setAttribute('text', {\n      color: this.data.titleColor,\n      align: 'center',\n      font: 'kelsonsans',\n      value: this.data.title || this.data.href,\n      width: 4\n    });\n    textEl.setAttribute('position', '0 1.5 0');\n    el.appendChild(textEl);\n\n    // Set sphere rendered when camera is close to portal to allow user to peek inside.\n    semiSphereEl.setAttribute('geometry', {\n      primitive: 'sphere',\n      radius: 1.0,\n      phiStart: 0,\n      segmentsWidth: 64,\n      segmentsHeight: 64,\n      phiLength: 180,\n      thetaStart: 0,\n      thetaLength: 360\n    });\n    semiSphereEl.setAttribute('material', {\n      shader: 'portal',\n      borderEnabled: 0.0,\n      pano: this.data.image,\n      side: 'back'\n    });\n    semiSphereEl.setAttribute('rotation', '0 180 0');\n    semiSphereEl.setAttribute('position', '0 0 0');\n    semiSphereEl.setAttribute('visible', false);\n    el.appendChild(semiSphereEl);\n\n    // Set sphere rendered when camera is close to portal to allow user to peek inside.\n    sphereEl.setAttribute('geometry', {\n      primitive: 'sphere',\n      radius: 10,\n      segmentsWidth: 64,\n      segmentsHeight: 64\n    });\n    sphereEl.setAttribute('material', {\n      shader: 'portal',\n      borderEnabled: 0.0,\n      pano: this.data.image,\n      side: 'back'\n    });\n    sphereEl.setAttribute('visible', false);\n    el.appendChild(sphereEl);\n\n    this.visualAspectInitialized = true;\n  },\n\n  navigate: function () {\n    window.location = this.data.href;\n  },\n\n  /**\n   * 1. Swap plane that represents portal with sphere with a hole when the camera is close\n   * so user can peek inside portal. Sphere is rendered on oposite side of portal\n   * from where user enters.\n   * 2. Place the url/title above or inside portal depending on distance to camera.\n   * 3. Face portal to camera when far away from user.\n   */\n  tick: (function () {\n    var cameraWorldPosition = new THREE.Vector3();\n    var elWorldPosition = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n    var scale = new THREE.Vector3();\n\n    return function () {\n      var el = this.el;\n      var object3D = el.object3D;\n      var camera = el.sceneEl.camera;\n      var cameraPortalOrientation;\n      var distance;\n      var textEl = this.textEl;\n\n      if (!this.data.visualAspectEnabled) { return; }\n\n      // Update matrices\n      object3D.updateMatrixWorld();\n      camera.parent.updateMatrixWorld();\n      camera.updateMatrixWorld();\n\n      object3D.matrix.decompose(elWorldPosition, quaternion, scale);\n      elWorldPosition.setFromMatrixPosition(object3D.matrixWorld);\n      cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n      distance = elWorldPosition.distanceTo(cameraWorldPosition);\n\n      if (distance > 20) {\n        // Store original orientation to be restored when the portal stops facing the camera.\n        if (!this.previousQuaternion) {\n          this.quaternionClone.copy(quaternion);\n          this.previousQuaternion = this.quaternionClone;\n        }\n        // If the portal is far away from the user, face portal to camera.\n        object3D.lookAt(cameraWorldPosition);\n      } else {\n        // When portal is close to the user/camera.\n        cameraPortalOrientation = this.calculateCameraPortalOrientation();\n        // If user gets very close to portal, replace with holed sphere they can peek in.\n        if (distance < 0.5) {\n          // Configure text size and sphere orientation depending side user approaches portal.\n          if (this.semiSphereEl.getAttribute('visible') === true) { return; }\n          textEl.setAttribute('text', 'width', 1.5);\n          if (cameraPortalOrientation <= 0.0) {\n            textEl.setAttribute('position', '0 0 0.75');\n            textEl.setAttribute('rotation', '0 180 0');\n            this.semiSphereEl.setAttribute('rotation', '0 0 0');\n          } else {\n            textEl.setAttribute('position', '0 0 -0.75');\n            textEl.setAttribute('rotation', '0 0 0');\n            this.semiSphereEl.setAttribute('rotation', '0 180 0');\n          }\n          el.getObject3D('mesh').visible = false;\n          this.semiSphereEl.setAttribute('visible', true);\n          this.peekCameraPortalOrientation = cameraPortalOrientation;\n        } else {\n          // Calculate wich side the camera is approaching the camera (back / front).\n          // Adjust text orientation based on camera position.\n          if (cameraPortalOrientation <= 0.0) {\n            textEl.setAttribute('rotation', '0 180 0');\n          } else {\n            textEl.setAttribute('rotation', '0 0 0');\n          }\n          textEl.setAttribute('text', 'width', 5);\n          textEl.setAttribute('position', '0 1.5 0');\n          el.getObject3D('mesh').visible = true;\n          this.semiSphereEl.setAttribute('visible', false);\n          this.peekCameraPortalOrientation = undefined;\n        }\n        if (this.previousQuaternion) {\n          object3D.quaternion.copy(this.previousQuaternion);\n          this.previousQuaternion = undefined;\n        }\n      }\n    };\n  })(),\n\n  hideAll: function () {\n    var el = this.el;\n    var hiddenEls = this.hiddenEls;\n    var self = this;\n    if (hiddenEls.length > 0) { return; }\n    el.sceneEl.object3D.traverse(function (object) {\n      if (object && object.el && object.el.hasAttribute('link-controls')) { return; }\n      if (!object.el || object === el.sceneEl.object3D || object.el === el ||\n          object.el === self.sphereEl || object.el === el.sceneEl.cameraEl ||\n          object.el.getAttribute('visible') === false || object.el === self.textEl ||\n          object.el === self.semiSphereEl) {\n        return;\n      }\n      object.el.setAttribute('visible', false);\n      hiddenEls.push(object.el);\n    });\n  },\n\n  showAll: function () {\n    this.hiddenEls.forEach(function (el) { el.setAttribute('visible', true); });\n    this.hiddenEls = [];\n  },\n\n  /**\n   * Calculate whether the camera faces the front or back face of the portal.\n   * @returns {number} > 0 if camera faces front of portal, < 0 if it faces back of portal.\n   */\n  calculateCameraPortalOrientation: (function () {\n    var mat4 = new THREE.Matrix4();\n    var cameraPosition = new THREE.Vector3();\n    var portalNormal = new THREE.Vector3(0, 0, 1);\n    var portalPosition = new THREE.Vector3(0, 0, 0);\n\n    return function () {\n      var el = this.el;\n      var camera = el.sceneEl.camera;\n\n      // Reset tmp variables.\n      cameraPosition.set(0, 0, 0);\n      portalNormal.set(0, 0, 1);\n      portalPosition.set(0, 0, 0);\n\n      // Apply portal orientation to the normal.\n      el.object3D.matrixWorld.extractRotation(mat4);\n      portalNormal.applyMatrix4(mat4);\n\n      // Calculate portal world position.\n      el.object3D.updateMatrixWorld();\n      el.object3D.localToWorld(portalPosition);\n\n      // Calculate camera world position.\n      camera.parent.parent.updateMatrixWorld();\n      camera.parent.updateMatrixWorld();\n      camera.updateMatrixWorld();\n      camera.localToWorld(cameraPosition);\n\n      // Calculate vector from portal to camera.\n      // (portal) -------> (camera)\n      cameraPosition.sub(portalPosition).normalize();\n      portalNormal.normalize();\n\n      // Side where camera approaches portal is given by sign of dot product of portal normal\n      // and portal to camera vectors.\n      return Math.sign(portalNormal.dot(cameraPosition));\n    };\n  })(),\n\n  remove: function () {\n    this.removeEventListener();\n  }\n});\n\n/* eslint-disable */\nregisterShader('portal', {\n  schema: {\n    borderEnabled: {default: 1.0, type: 'int', is: 'uniform'},\n    backgroundColor: {default: 'red', type: 'color', is: 'uniform'},\n    pano: {type: 'map', is: 'uniform'},\n    strokeColor: {default: 'white', type: 'color', is: 'uniform'}\n  },\n\n  vertexShader: [\n    'vec3 portalPosition;',\n    'varying vec3 vWorldPosition;',\n    'varying float vDistanceToCenter;',\n    'varying float vDistance;',\n    'void main() {',\n    'vDistanceToCenter = clamp(length(position - vec3(0.0, 0.0, 0.0)), 0.0, 1.0);',\n    'portalPosition = (modelMatrix * vec4(0.0, 0.0, 0.0, 1.0)).xyz;',\n    'vDistance = length(portalPosition - cameraPosition);',\n    'vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;',\n    'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);',\n    '}'\n  ].join('\\n'),\n\n  fragmentShader: [\n    '#define RECIPROCAL_PI2 0.15915494',\n    'uniform sampler2D pano;',\n    'uniform vec3 strokeColor;',\n    'uniform vec3 backgroundColor;',\n    'uniform float borderEnabled;',\n    'varying float vDistanceToCenter;',\n    'varying float vDistance;',\n    'varying vec3 vWorldPosition;',\n    'void main() {',\n    'vec3 direction = normalize(vWorldPosition - cameraPosition);',\n    'vec2 sampleUV;',\n    'float borderThickness = clamp(exp(-vDistance / 50.0), 0.6, 0.95);',\n    'sampleUV.y = saturate(direction.y * 0.5  + 0.5);',\n    'sampleUV.x = atan(direction.z, -direction.x) * -RECIPROCAL_PI2 + 0.5;',\n    'if (vDistanceToCenter > borderThickness && borderEnabled == 1.0) {',\n    'gl_FragColor = vec4(strokeColor, 1.0);',\n    '} else {',\n    'gl_FragColor = mix(texture2D(pano, sampleUV), vec4(backgroundColor, 1.0), clamp(pow((vDistance / 15.0), 2.0), 0.0, 1.0));',\n    '}',\n    '}'\n  ].join('\\n')\n});\n/* eslint-enable */\n"]},"metadata":{},"sourceType":"script"}