{"ast":null,"code":"var constants = require('../../constants/');\n\nvar extend = require('../../utils').extend;\n\nvar MOBILE_HEAD_TAGS = module.exports.MOBILE_HEAD_TAGS = [Meta({\n  name: 'viewport',\n  content: 'width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no,minimal-ui,viewport-fit=cover'\n}), // W3C-standardised meta tags.\nMeta({\n  name: 'mobile-web-app-capable',\n  content: 'yes'\n}), Meta({\n  name: 'theme-color',\n  content: 'black'\n})];\nvar MOBILE_IOS_HEAD_TAGS = [// iOS-specific meta tags for fullscreen when pinning to homescreen.\nMeta({\n  name: 'apple-mobile-web-app-capable',\n  content: 'yes'\n}), Meta({\n  name: 'apple-mobile-web-app-status-bar-style',\n  content: 'black'\n}), Link({\n  rel: 'apple-touch-icon',\n  href: 'https://aframe.io/images/aframe-logo-152.png'\n})];\n\nfunction Meta(attrs) {\n  return {\n    tagName: 'meta',\n    attributes: attrs,\n    exists: function () {\n      return document.querySelector('meta[name=\"' + attrs.name + '\"]');\n    }\n  };\n}\n\nfunction Link(attrs) {\n  return {\n    tagName: 'link',\n    attributes: attrs,\n    exists: function () {\n      return document.querySelector('link[rel=\"' + attrs.rel + '\"]');\n    }\n  };\n}\n/**\n * Injects the necessary metatags in the document for mobile support:\n * 1. Prevent the user to zoom in the document.\n * 2. Ensure that window.innerWidth and window.innerHeight have the correct\n *    values and the canvas is properly scaled.\n * 3. To allow fullscreen mode when pinning a web app on the home screen on\n *    iOS.\n * Adapted from https://www.reddit.com/r/web_design/comments/3la04p/\n *\n * @param {object} scene - Scene element\n * @returns {Array}\n */\n\n\nmodule.exports.inject = function injectHeadTags(scene) {\n  var headEl = document.head;\n  var headScriptEl = headEl.querySelector('script');\n  var tag;\n  var headTags = [];\n  MOBILE_HEAD_TAGS.forEach(createAndInjectTag);\n\n  if (scene.isIOS) {\n    MOBILE_IOS_HEAD_TAGS.forEach(createAndInjectTag);\n  }\n\n  return headTags;\n\n  function createAndInjectTag(tagObj) {\n    if (!tagObj || tagObj.exists()) {\n      return;\n    }\n\n    tag = createTag(tagObj);\n\n    if (!tag) {\n      return;\n    }\n\n    if (headScriptEl) {\n      headScriptEl.parentNode.insertBefore(tag, headScriptEl);\n    } else {\n      headEl.appendChild(tag);\n    }\n\n    headTags.push(tag);\n  }\n};\n\nfunction createTag(tagObj) {\n  if (!tagObj || !tagObj.tagName) {\n    return;\n  }\n\n  var meta = document.createElement(tagObj.tagName);\n  meta.setAttribute(constants.AFRAME_INJECTED, '');\n  return extend(meta, tagObj.attributes);\n}","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/core/scene/metaTags.js"],"names":["constants","require","extend","MOBILE_HEAD_TAGS","module","exports","Meta","name","content","MOBILE_IOS_HEAD_TAGS","Link","rel","href","attrs","tagName","attributes","exists","document","querySelector","inject","injectHeadTags","scene","headEl","head","headScriptEl","tag","headTags","forEach","createAndInjectTag","isIOS","tagObj","createTag","parentNode","insertBefore","appendChild","push","meta","createElement","setAttribute","AFRAME_INJECTED"],"mappings":"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","sourcesContent":["var constants = require('../../constants/');\nvar extend = require('../../utils').extend;\n\nvar MOBILE_HEAD_TAGS = module.exports.MOBILE_HEAD_TAGS = [\n  Meta({name: 'viewport', content: 'width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no,minimal-ui,viewport-fit=cover'}),\n\n  // W3C-standardised meta tags.\n  Meta({name: 'mobile-web-app-capable', content: 'yes'}),\n  Meta({name: 'theme-color', content: 'black'})\n];\n\nvar MOBILE_IOS_HEAD_TAGS = [\n  // iOS-specific meta tags for fullscreen when pinning to homescreen.\n  Meta({name: 'apple-mobile-web-app-capable', content: 'yes'}),\n  Meta({name: 'apple-mobile-web-app-status-bar-style', content: 'black'}),\n  Link({rel: 'apple-touch-icon', href: 'https://aframe.io/images/aframe-logo-152.png'})\n];\n\nfunction Meta (attrs) {\n  return {\n    tagName: 'meta',\n    attributes: attrs,\n    exists: function () { return document.querySelector('meta[name=\"' + attrs.name + '\"]'); }\n  };\n}\n\nfunction Link (attrs) {\n  return {\n    tagName: 'link',\n    attributes: attrs,\n    exists: function () { return document.querySelector('link[rel=\"' + attrs.rel + '\"]'); }\n  };\n}\n\n/**\n * Injects the necessary metatags in the document for mobile support:\n * 1. Prevent the user to zoom in the document.\n * 2. Ensure that window.innerWidth and window.innerHeight have the correct\n *    values and the canvas is properly scaled.\n * 3. To allow fullscreen mode when pinning a web app on the home screen on\n *    iOS.\n * Adapted from https://www.reddit.com/r/web_design/comments/3la04p/\n *\n * @param {object} scene - Scene element\n * @returns {Array}\n */\nmodule.exports.inject = function injectHeadTags (scene) {\n  var headEl = document.head;\n  var headScriptEl = headEl.querySelector('script');\n  var tag;\n  var headTags = [];\n  MOBILE_HEAD_TAGS.forEach(createAndInjectTag);\n  if (scene.isIOS) {\n    MOBILE_IOS_HEAD_TAGS.forEach(createAndInjectTag);\n  }\n  return headTags;\n\n  function createAndInjectTag (tagObj) {\n    if (!tagObj || tagObj.exists()) { return; }\n\n    tag = createTag(tagObj);\n    if (!tag) { return; }\n\n    if (headScriptEl) {\n      headScriptEl.parentNode.insertBefore(tag, headScriptEl);\n    } else {\n      headEl.appendChild(tag);\n    }\n\n    headTags.push(tag);\n  }\n};\n\nfunction createTag (tagObj) {\n  if (!tagObj || !tagObj.tagName) { return; }\n  var meta = document.createElement(tagObj.tagName);\n  meta.setAttribute(constants.AFRAME_INJECTED, '');\n  return extend(meta, tagObj.attributes);\n}\n"]},"metadata":{},"sourceType":"script"}