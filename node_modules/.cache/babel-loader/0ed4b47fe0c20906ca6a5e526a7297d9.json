{"ast":null,"code":"var registerSystem = require('../core/system').registerSystem;\n\nvar utils = require('../utils');\n/**\n * Tracked controls system.\n * Maintain list with available tracked controllers.\n */\n\n\nmodule.exports.System = registerSystem('tracked-controls-webxr', {\n  init: function () {\n    this.controllers = [];\n    this.oldControllersLength = 0;\n    this.throttledUpdateControllerList = utils.throttle(this.updateControllerList, 500, this);\n  },\n  tick: function () {\n    this.throttledUpdateControllerList();\n  },\n  updateControllerList: function () {\n    var xrSession = this.el.xrSession;\n    var self = this;\n\n    if (!xrSession) {\n      return;\n    }\n\n    this.controllers = this.el.xrSession.inputSources;\n\n    if (this.oldControllersLength === this.controllers.length) {\n      return;\n    }\n\n    this.oldControllersLength = this.controllers.length;\n    xrSession.requestReferenceSpace('local-floor').then(function (referenceSpace) {\n      self.referenceSpace = referenceSpace;\n    });\n    this.el.emit('controllersupdated', undefined, false);\n  }\n});","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/systems/tracked-controls-webxr.js"],"names":["registerSystem","require","utils","module","exports","System","init","controllers","oldControllersLength","throttledUpdateControllerList","throttle","updateControllerList","tick","xrSession","el","self","inputSources","length","requestReferenceSpace","then","referenceSpace","emit","undefined"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BD,cAA/C;;AACA,IAAIE,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;AAEA;;;;;;AAIAE,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBL,cAAc,CAAC,wBAAD,EAA2B;AAC/DM,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,oBAAL,GAA4B,CAA5B;AACA,SAAKC,6BAAL,GAAqCP,KAAK,CAACQ,QAAN,CAAe,KAAKC,oBAApB,EAA0C,GAA1C,EAA+C,IAA/C,CAArC;AACD,GAL8D;AAO/DC,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKH,6BAAL;AACD,GAT8D;AAW/DE,EAAAA,oBAAoB,EAAE,YAAY;AAChC,QAAIE,SAAS,GAAG,KAAKC,EAAL,CAAQD,SAAxB;AACA,QAAIE,IAAI,GAAG,IAAX;;AACA,QAAI,CAACF,SAAL,EAAgB;AAAE;AAAS;;AAC3B,SAAKN,WAAL,GAAmB,KAAKO,EAAL,CAAQD,SAAR,CAAkBG,YAArC;;AACA,QAAI,KAAKR,oBAAL,KAA8B,KAAKD,WAAL,CAAiBU,MAAnD,EAA2D;AAAE;AAAS;;AACtE,SAAKT,oBAAL,GAA4B,KAAKD,WAAL,CAAiBU,MAA7C;AACAJ,IAAAA,SAAS,CAACK,qBAAV,CAAgC,aAAhC,EAA+CC,IAA/C,CAAoD,UAAUC,cAAV,EAA0B;AAC5EL,MAAAA,IAAI,CAACK,cAAL,GAAsBA,cAAtB;AACD,KAFD;AAGA,SAAKN,EAAL,CAAQO,IAAR,CAAa,oBAAb,EAAmCC,SAAnC,EAA8C,KAA9C;AACD;AAtB8D,CAA3B,CAAtC","sourcesContent":["var registerSystem = require('../core/system').registerSystem;\nvar utils = require('../utils');\n\n/**\n * Tracked controls system.\n * Maintain list with available tracked controllers.\n */\nmodule.exports.System = registerSystem('tracked-controls-webxr', {\n  init: function () {\n    this.controllers = [];\n    this.oldControllersLength = 0;\n    this.throttledUpdateControllerList = utils.throttle(this.updateControllerList, 500, this);\n  },\n\n  tick: function () {\n    this.throttledUpdateControllerList();\n  },\n\n  updateControllerList: function () {\n    var xrSession = this.el.xrSession;\n    var self = this;\n    if (!xrSession) { return; }\n    this.controllers = this.el.xrSession.inputSources;\n    if (this.oldControllersLength === this.controllers.length) { return; }\n    this.oldControllersLength = this.controllers.length;\n    xrSession.requestReferenceSpace('local-floor').then(function (referenceSpace) {\n      self.referenceSpace = referenceSpace;\n    });\n    this.el.emit('controllersupdated', undefined, false);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}