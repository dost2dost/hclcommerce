{"ast":null,"code":"/**\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\nTHREE.DRACOLoader = function (manager) {\n  THREE.Loader.call(this, manager);\n  this.decoderPath = '';\n  this.decoderConfig = {};\n  this.decoderBinary = null;\n  this.decoderPending = null;\n  this.workerLimit = 4;\n  this.workerPool = [];\n  this.workerNextTaskID = 1;\n  this.workerSourceURL = '';\n  this.defaultAttributeIDs = {\n    position: 'POSITION',\n    normal: 'NORMAL',\n    color: 'COLOR',\n    uv: 'TEX_COORD'\n  };\n  this.defaultAttributeTypes = {\n    position: 'Float32Array',\n    normal: 'Float32Array',\n    color: 'Float32Array',\n    uv: 'Float32Array'\n  };\n};\n\nTHREE.DRACOLoader.prototype = Object.assign(Object.create(THREE.Loader.prototype), {\n  constructor: THREE.DRACOLoader,\n  setDecoderPath: function (path) {\n    this.decoderPath = path;\n    return this;\n  },\n  setDecoderConfig: function (config) {\n    this.decoderConfig = config;\n    return this;\n  },\n  setWorkerLimit: function (workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  },\n\n  /** @deprecated */\n  setVerbosity: function () {\n    console.warn('THREE.DRACOLoader: The .setVerbosity() method has been removed.');\n  },\n\n  /** @deprecated */\n  setDrawMode: function () {\n    console.warn('THREE.DRACOLoader: The .setDrawMode() method has been removed.');\n  },\n\n  /** @deprecated */\n  setSkipDequantization: function () {\n    console.warn('THREE.DRACOLoader: The .setSkipDequantization() method has been removed.');\n  },\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new THREE.FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n\n    if (this.crossOrigin === 'use-credentials') {\n      loader.setWithCredentials(true);\n    }\n\n    loader.load(url, buffer => {\n      var taskConfig = {\n        attributeIDs: this.defaultAttributeIDs,\n        attributeTypes: this.defaultAttributeTypes,\n        useUniqueIDs: false\n      };\n      this.decodeGeometry(buffer, taskConfig).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  },\n\n  /** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n  decodeDracoFile: function (buffer, callback, attributeIDs, attributeTypes) {\n    var taskConfig = {\n      attributeIDs: attributeIDs || this.defaultAttributeIDs,\n      attributeTypes: attributeTypes || this.defaultAttributeTypes,\n      useUniqueIDs: !!attributeIDs\n    };\n    this.decodeGeometry(buffer, taskConfig).then(callback);\n  },\n  decodeGeometry: function (buffer, taskConfig) {\n    var worker;\n    var taskID = this.workerNextTaskID++;\n    var taskCost = buffer.byteLength; // TODO: For backward-compatibility, support 'attributeTypes' objects containing\n    // references (rather than names) to typed array constructors. These must be\n    // serialized before sending them to the worker.\n\n    for (var attribute in taskConfig.attributeTypes) {\n      var type = taskConfig.attributeTypes[attribute];\n\n      if (type.BYTES_PER_ELEMENT !== undefined) {\n        taskConfig.attributeTypes[attribute] = type.name;\n      }\n    } // Obtain a worker and assign a task, and construct a geometry instance\n    // when the task completes.\n\n\n    var geometryPending = this._getWorker(taskID, taskCost).then(_worker => {\n      worker = _worker;\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = {\n          resolve,\n          reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          taskConfig,\n          buffer\n        }, [buffer]); // this.debug();\n      });\n    }).then(message => this._createGeometry(message.geometry)); // Remove task from the task list.\n\n\n    geometryPending.finally(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID); // this.debug();\n\n      }\n    });\n    return geometryPending;\n  },\n  _createGeometry: function (geometryData) {\n    var geometry = new THREE.BufferGeometry();\n\n    if (geometryData.index) {\n      geometry.setIndex(new THREE.BufferAttribute(geometryData.index.array, 1));\n    }\n\n    for (var i = 0; i < geometryData.attributes.length; i++) {\n      var attribute = geometryData.attributes[i];\n      var name = attribute.name;\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      geometry.setAttribute(name, new THREE.BufferAttribute(array, itemSize));\n    }\n\n    return geometry;\n  },\n  _loadLibrary: function (url, responseType) {\n    var loader = new THREE.FileLoader(this.manager);\n    loader.setPath(this.decoderPath);\n    loader.setResponseType(responseType);\n    return new Promise((resolve, reject) => {\n      loader.load(url, resolve, undefined, reject);\n    });\n  },\n  preload: function () {\n    this._initDecoder();\n\n    return this;\n  },\n  _initDecoder: function () {\n    if (this.decoderPending) return this.decoderPending;\n    var useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n    var librariesPending = [];\n\n    if (useJS) {\n      librariesPending.push(this._loadLibrary('draco_decoder.js', 'text'));\n    } else {\n      librariesPending.push(this._loadLibrary('draco_wasm_wrapper.js', 'text'));\n      librariesPending.push(this._loadLibrary('draco_decoder.wasm', 'arraybuffer'));\n    }\n\n    this.decoderPending = Promise.all(librariesPending).then(libraries => {\n      var jsContent = libraries[0];\n\n      if (!useJS) {\n        this.decoderConfig.wasmBinary = libraries[1];\n      }\n\n      var fn = THREE.DRACOLoader.DRACOWorker.toString();\n      var body = ['/* draco decoder */', jsContent, '', '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n      this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n    });\n    return this.decoderPending;\n  },\n  _getWorker: function (taskID, taskCost) {\n    return this._initDecoder().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        var worker = new Worker(this.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          decoderConfig: this.decoderConfig\n        });\n\n        worker.onmessage = function (e) {\n          var message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        this.workerPool.push(worker);\n      } else {\n        this.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      var worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskCosts[taskID] = taskCost;\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  },\n  _releaseTask: function (worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  },\n  debug: function () {\n    console.log('Task load: ', this.workerPool.map(worker => worker._taskLoad));\n  },\n  dispose: function () {\n    for (var i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n});\n/* WEB WORKER */\n\nTHREE.DRACOLoader.DRACOWorker = function () {\n  var decoderConfig;\n  var decoderPending;\n\n  onmessage = function (e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        decoderConfig = message.decoderConfig;\n        decoderPending = new Promise(function (resolve\n        /*, reject*/\n        ) {\n          decoderConfig.onModuleLoaded = function (draco) {\n            // Module is Promise-like. Wrap before resolving to avoid loop.\n            resolve({\n              draco: draco\n            });\n          };\n\n          DracoDecoderModule(decoderConfig);\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        var taskConfig = message.taskConfig;\n        decoderPending.then(module => {\n          var draco = module.draco;\n          var decoder = new draco.Decoder();\n          var decoderBuffer = new draco.DecoderBuffer();\n          decoderBuffer.Init(new Int8Array(buffer), buffer.byteLength);\n\n          try {\n            var geometry = decodeGeometry(draco, decoder, decoderBuffer, taskConfig);\n            var buffers = geometry.attributes.map(attr => attr.array.buffer);\n            if (geometry.index) buffers.push(geometry.index.array.buffer);\n            self.postMessage({\n              type: 'decode',\n              id: message.id,\n              geometry\n            }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({\n              type: 'error',\n              id: message.id,\n              error: error.message\n            });\n          } finally {\n            draco.destroy(decoderBuffer);\n            draco.destroy(decoder);\n          }\n        });\n        break;\n    }\n  };\n\n  function decodeGeometry(draco, decoder, decoderBuffer, taskConfig) {\n    var attributeIDs = taskConfig.attributeIDs;\n    var attributeTypes = taskConfig.attributeTypes;\n    var dracoGeometry;\n    var decodingStatus;\n    var geometryType = decoder.GetEncodedGeometryType(decoderBuffer);\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      dracoGeometry = new draco.Mesh();\n      decodingStatus = decoder.DecodeBufferToMesh(decoderBuffer, dracoGeometry);\n    } else if (geometryType === draco.POINT_CLOUD) {\n      dracoGeometry = new draco.PointCloud();\n      decodingStatus = decoder.DecodeBufferToPointCloud(decoderBuffer, dracoGeometry);\n    } else {\n      throw new Error('THREE.DRACOLoader: Unexpected geometry type.');\n    }\n\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n      throw new Error('THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg());\n    }\n\n    var geometry = {\n      index: null,\n      attributes: []\n    }; // Gather all vertex attributes.\n\n    for (var attributeName in attributeIDs) {\n      var attributeType = self[attributeTypes[attributeName]];\n      var attribute;\n      var attributeID; // A Draco file may be created with default vertex attributes, whose attribute IDs\n      // are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n      // a Draco file may contain a custom set of attributes, identified by known unique\n      // IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\n      if (taskConfig.useUniqueIDs) {\n        attributeID = attributeIDs[attributeName];\n        attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n      } else {\n        attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n        if (attributeID === -1) continue;\n        attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n      }\n\n      geometry.attributes.push(decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute));\n    } // Add index.\n\n\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      // Generate mesh faces.\n      var numFaces = dracoGeometry.num_faces();\n      var numIndices = numFaces * 3;\n      var index = new Uint32Array(numIndices);\n      var indexArray = new draco.DracoInt32Array();\n\n      for (var i = 0; i < numFaces; ++i) {\n        decoder.GetFaceFromMesh(dracoGeometry, i, indexArray);\n\n        for (var j = 0; j < 3; ++j) {\n          index[i * 3 + j] = indexArray.GetValue(j);\n        }\n      }\n\n      geometry.index = {\n        array: index,\n        itemSize: 1\n      };\n      draco.destroy(indexArray);\n    }\n\n    draco.destroy(dracoGeometry);\n    return geometry;\n  }\n\n  function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n    var numComponents = attribute.num_components();\n    var numPoints = dracoGeometry.num_points();\n    var numValues = numPoints * numComponents;\n    var dracoArray;\n    var array;\n\n    switch (attributeType) {\n      case Float32Array:\n        dracoArray = new draco.DracoFloat32Array();\n        decoder.GetAttributeFloatForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Float32Array(numValues);\n        break;\n\n      case Int8Array:\n        dracoArray = new draco.DracoInt8Array();\n        decoder.GetAttributeInt8ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Int8Array(numValues);\n        break;\n\n      case Int16Array:\n        dracoArray = new draco.DracoInt16Array();\n        decoder.GetAttributeInt16ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Int16Array(numValues);\n        break;\n\n      case Int32Array:\n        dracoArray = new draco.DracoInt32Array();\n        decoder.GetAttributeInt32ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Int32Array(numValues);\n        break;\n\n      case Uint8Array:\n        dracoArray = new draco.DracoUInt8Array();\n        decoder.GetAttributeUInt8ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Uint8Array(numValues);\n        break;\n\n      case Uint16Array:\n        dracoArray = new draco.DracoUInt16Array();\n        decoder.GetAttributeUInt16ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Uint16Array(numValues);\n        break;\n\n      case Uint32Array:\n        dracoArray = new draco.DracoUInt32Array();\n        decoder.GetAttributeUInt32ForAllPoints(dracoGeometry, attribute, dracoArray);\n        array = new Uint32Array(numValues);\n        break;\n\n      default:\n        throw new Error('THREE.DRACOLoader: Unexpected attribute type.');\n    }\n\n    for (var i = 0; i < numValues; i++) {\n      array[i] = dracoArray.GetValue(i);\n    }\n\n    draco.destroy(dracoArray);\n    return {\n      name: attributeName,\n      array: array,\n      itemSize: numComponents\n    };\n  }\n};\n/** Deprecated static methods */\n\n/** @deprecated */\n\n\nTHREE.DRACOLoader.setDecoderPath = function () {\n  console.warn('THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nTHREE.DRACOLoader.setDecoderConfig = function () {\n  console.warn('THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nTHREE.DRACOLoader.releaseDecoderModule = function () {\n  console.warn('THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.');\n};\n/** @deprecated */\n\n\nTHREE.DRACOLoader.getDecoderModule = function () {\n  console.warn('THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.');\n};","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/super-three/examples/js/loaders/DRACOLoader.js"],"names":["THREE","DRACOLoader","manager","Loader","call","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","position","normal","color","uv","defaultAttributeTypes","prototype","Object","assign","create","constructor","setDecoderPath","path","setDecoderConfig","config","setWorkerLimit","setVerbosity","console","warn","setDrawMode","setSkipDequantization","load","url","onLoad","onProgress","onError","loader","FileLoader","setPath","setResponseType","crossOrigin","setWithCredentials","buffer","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","then","catch","decodeDracoFile","callback","worker","taskID","taskCost","byteLength","attribute","type","BYTES_PER_ELEMENT","undefined","name","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","id","message","_createGeometry","geometry","finally","_releaseTask","geometryData","BufferGeometry","index","setIndex","BufferAttribute","array","i","attributes","length","itemSize","setAttribute","_loadLibrary","responseType","preload","_initDecoder","useJS","WebAssembly","librariesPending","push","all","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","_taskLoad","onmessage","e","data","error","sort","a","b","debug","log","map","dispose","terminate","onModuleLoaded","draco","DracoDecoderModule","module","decoder","Decoder","decoderBuffer","DecoderBuffer","Init","Int8Array","buffers","attr","self","destroy","dracoGeometry","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","Error","ok","ptr","error_msg","attributeName","attributeType","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","decodeAttribute","numFaces","num_faces","numIndices","Uint32Array","indexArray","DracoInt32Array","GetFaceFromMesh","j","GetValue","numComponents","num_components","numPoints","num_points","numValues","dracoArray","Float32Array","DracoFloat32Array","GetAttributeFloatForAllPoints","DracoInt8Array","GetAttributeInt8ForAllPoints","Int16Array","DracoInt16Array","GetAttributeInt16ForAllPoints","Int32Array","GetAttributeInt32ForAllPoints","Uint8Array","DracoUInt8Array","GetAttributeUInt8ForAllPoints","Uint16Array","DracoUInt16Array","GetAttributeUInt16ForAllPoints","DracoUInt32Array","GetAttributeUInt32ForAllPoints","releaseDecoderModule","getDecoderModule"],"mappings":"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","sourcesContent":["/**\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\r\n\r\nTHREE.DRACOLoader = function ( manager ) {\r\n\r\n\tTHREE.Loader.call( this, manager );\r\n\r\n\tthis.decoderPath = '';\r\n\tthis.decoderConfig = {};\r\n\tthis.decoderBinary = null;\r\n\tthis.decoderPending = null;\r\n\r\n\tthis.workerLimit = 4;\r\n\tthis.workerPool = [];\r\n\tthis.workerNextTaskID = 1;\r\n\tthis.workerSourceURL = '';\r\n\r\n\tthis.defaultAttributeIDs = {\r\n\t\tposition: 'POSITION',\r\n\t\tnormal: 'NORMAL',\r\n\t\tcolor: 'COLOR',\r\n\t\tuv: 'TEX_COORD'\r\n\t};\r\n\tthis.defaultAttributeTypes = {\r\n\t\tposition: 'Float32Array',\r\n\t\tnormal: 'Float32Array',\r\n\t\tcolor: 'Float32Array',\r\n\t\tuv: 'Float32Array'\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DRACOLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\r\n\r\n\tconstructor: THREE.DRACOLoader,\r\n\r\n\tsetDecoderPath: function ( path ) {\r\n\r\n\t\tthis.decoderPath = path;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetDecoderConfig: function ( config ) {\r\n\r\n\t\tthis.decoderConfig = config;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetWorkerLimit: function ( workerLimit ) {\r\n\r\n\t\tthis.workerLimit = workerLimit;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/** @deprecated */\r\n\tsetVerbosity: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setVerbosity() method has been removed.' );\r\n\r\n\t},\r\n\r\n\t/** @deprecated */\r\n\tsetDrawMode: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setDrawMode() method has been removed.' );\r\n\r\n\t},\r\n\r\n\t/** @deprecated */\r\n\tsetSkipDequantization: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DRACOLoader: The .setSkipDequantization() method has been removed.' );\r\n\r\n\t},\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar loader = new THREE.FileLoader( this.manager );\r\n\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( this.crossOrigin === 'use-credentials' ) {\r\n\r\n\t\t\tloader.setWithCredentials( true );\r\n\r\n\t\t}\r\n\r\n\t\tloader.load( url, ( buffer ) => {\r\n\r\n\t\t\tvar taskConfig = {\r\n\t\t\t\tattributeIDs: this.defaultAttributeIDs,\r\n\t\t\t\tattributeTypes: this.defaultAttributeTypes,\r\n\t\t\t\tuseUniqueIDs: false\r\n\t\t\t};\r\n\r\n\t\t\tthis.decodeGeometry( buffer, taskConfig )\r\n\t\t\t\t.then( onLoad )\r\n\t\t\t\t.catch( onError );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\t/** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\r\n\tdecodeDracoFile: function ( buffer, callback, attributeIDs, attributeTypes ) {\r\n\r\n\t\tvar taskConfig = {\r\n\t\t\tattributeIDs: attributeIDs || this.defaultAttributeIDs,\r\n\t\t\tattributeTypes: attributeTypes || this.defaultAttributeTypes,\r\n\t\t\tuseUniqueIDs: !! attributeIDs\r\n\t\t};\r\n\r\n\t\tthis.decodeGeometry( buffer, taskConfig ).then( callback );\r\n\r\n\t},\r\n\r\n\tdecodeGeometry: function ( buffer, taskConfig ) {\r\n\r\n\t\tvar worker;\r\n\t\tvar taskID = this.workerNextTaskID ++;\r\n\t\tvar taskCost = buffer.byteLength;\r\n\r\n\t\t// TODO: For backward-compatibility, support 'attributeTypes' objects containing\r\n\t\t// references (rather than names) to typed array constructors. These must be\r\n\t\t// serialized before sending them to the worker.\r\n\t\tfor ( var attribute in taskConfig.attributeTypes ) {\r\n\r\n\t\t\tvar type = taskConfig.attributeTypes[ attribute ];\r\n\r\n\t\t\tif ( type.BYTES_PER_ELEMENT !== undefined ) {\r\n\r\n\t\t\t\ttaskConfig.attributeTypes[ attribute ] = type.name;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Obtain a worker and assign a task, and construct a geometry instance\r\n\t\t// when the task completes.\r\n\t\tvar geometryPending = this._getWorker( taskID, taskCost )\r\n\t\t\t.then( ( _worker ) => {\r\n\r\n\t\t\t\tworker = _worker;\r\n\r\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\r\n\r\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, taskConfig, buffer }, [ buffer ] );\r\n\r\n\t\t\t\t\t// this.debug();\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} )\r\n\t\t\t.then( ( message ) => this._createGeometry( message.geometry ) );\r\n\r\n\t\t// Remove task from the task list.\r\n\t\tgeometryPending\r\n\t\t\t.finally( () => {\r\n\r\n\t\t\t\tif ( worker && taskID ) {\r\n\r\n\t\t\t\t\tthis._releaseTask( worker, taskID );\r\n\r\n\t\t\t\t\t// this.debug();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\treturn geometryPending;\r\n\r\n\t},\r\n\r\n\t_createGeometry: function ( geometryData ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tif ( geometryData.index ) {\r\n\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( geometryData.index.array, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < geometryData.attributes.length; i ++ ) {\r\n\r\n\t\t\tvar attribute = geometryData.attributes[ i ];\r\n\t\t\tvar name = attribute.name;\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar itemSize = attribute.itemSize;\r\n\r\n\t\t\tgeometry.setAttribute( name, new THREE.BufferAttribute( array, itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\t_loadLibrary: function ( url, responseType ) {\r\n\r\n\t\tvar loader = new THREE.FileLoader( this.manager );\r\n\t\tloader.setPath( this.decoderPath );\r\n\t\tloader.setResponseType( responseType );\r\n\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tloader.load( url, resolve, undefined, reject );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tpreload: function () {\r\n\r\n\t\tthis._initDecoder();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t_initDecoder: function () {\r\n\r\n\t\tif ( this.decoderPending ) return this.decoderPending;\r\n\r\n\t\tvar useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\r\n\t\tvar librariesPending = [];\r\n\r\n\t\tif ( useJS ) {\r\n\r\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.js', 'text' ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_wasm_wrapper.js', 'text' ) );\r\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.wasm', 'arraybuffer' ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.decoderPending = Promise.all( librariesPending )\r\n\t\t\t.then( ( libraries ) => {\r\n\r\n\t\t\t\tvar jsContent = libraries[ 0 ];\r\n\r\n\t\t\t\tif ( ! useJS ) {\r\n\r\n\t\t\t\t\tthis.decoderConfig.wasmBinary = libraries[ 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar fn = THREE.DRACOLoader.DRACOWorker.toString();\r\n\r\n\t\t\t\tvar body = [\r\n\t\t\t\t\t'/* draco decoder */',\r\n\t\t\t\t\tjsContent,\r\n\t\t\t\t\t'',\r\n\t\t\t\t\t'/* worker */',\r\n\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\treturn this.decoderPending;\r\n\r\n\t},\r\n\r\n\t_getWorker: function ( taskID, taskCost ) {\r\n\r\n\t\treturn this._initDecoder().then( () => {\r\n\r\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\r\n\r\n\t\t\t\tvar worker = new Worker( this.workerSourceURL );\r\n\r\n\t\t\t\tworker._callbacks = {};\r\n\t\t\t\tworker._taskCosts = {};\r\n\t\t\t\tworker._taskLoad = 0;\r\n\r\n\t\t\t\tworker.postMessage( { type: 'init', decoderConfig: this.decoderConfig } );\r\n\r\n\t\t\t\tworker.onmessage = function ( e ) {\r\n\r\n\t\t\t\t\tvar message = e.data;\r\n\r\n\t\t\t\t\tswitch ( message.type ) {\r\n\r\n\t\t\t\t\t\tcase 'decode':\r\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'error':\r\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.workerPool.push( worker );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\r\n\r\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar worker = this.workerPool[ this.workerPool.length - 1 ];\r\n\t\t\tworker._taskCosts[ taskID ] = taskCost;\r\n\t\t\tworker._taskLoad += taskCost;\r\n\t\t\treturn worker;\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\t_releaseTask: function ( worker, taskID ) {\r\n\r\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\r\n\t\tdelete worker._callbacks[ taskID ];\r\n\t\tdelete worker._taskCosts[ taskID ];\r\n\r\n\t},\r\n\r\n\tdebug: function () {\r\n\r\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tfor ( var i = 0; i < this.workerPool.length; ++ i ) {\r\n\r\n\t\t\tthis.workerPool[ i ].terminate();\r\n\r\n\t\t}\r\n\r\n\t\tthis.workerPool.length = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n/* WEB WORKER */\r\n\r\nTHREE.DRACOLoader.DRACOWorker = function () {\r\n\r\n\tvar decoderConfig;\r\n\tvar decoderPending;\r\n\r\n\tonmessage = function ( e ) {\r\n\r\n\t\tvar message = e.data;\r\n\r\n\t\tswitch ( message.type ) {\r\n\r\n\t\t\tcase 'init':\r\n\t\t\t\tdecoderConfig = message.decoderConfig;\r\n\t\t\t\tdecoderPending = new Promise( function ( resolve/*, reject*/ ) {\r\n\r\n\t\t\t\t\tdecoderConfig.onModuleLoaded = function ( draco ) {\r\n\r\n\t\t\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\r\n\t\t\t\t\t\tresolve( { draco: draco } );\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tDracoDecoderModule( decoderConfig );\r\n\r\n\t\t\t\t} );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'decode':\r\n\t\t\t\tvar buffer = message.buffer;\r\n\t\t\t\tvar taskConfig = message.taskConfig;\r\n\t\t\t\tdecoderPending.then( ( module ) => {\r\n\r\n\t\t\t\t\tvar draco = module.draco;\r\n\t\t\t\t\tvar decoder = new draco.Decoder();\r\n\t\t\t\t\tvar decoderBuffer = new draco.DecoderBuffer();\r\n\t\t\t\t\tdecoderBuffer.Init( new Int8Array( buffer ), buffer.byteLength );\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\tvar geometry = decodeGeometry( draco, decoder, decoderBuffer, taskConfig );\r\n\r\n\t\t\t\t\t\tvar buffers = geometry.attributes.map( ( attr ) => attr.array.buffer );\r\n\r\n\t\t\t\t\t\tif ( geometry.index ) buffers.push( geometry.index.array.buffer );\r\n\r\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, geometry }, buffers );\r\n\r\n\t\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t\tconsole.error( error );\r\n\r\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\r\n\r\n\t\t\t\t\t} finally {\r\n\r\n\t\t\t\t\t\tdraco.destroy( decoderBuffer );\r\n\t\t\t\t\t\tdraco.destroy( decoder );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction decodeGeometry( draco, decoder, decoderBuffer, taskConfig ) {\r\n\r\n\t\tvar attributeIDs = taskConfig.attributeIDs;\r\n\t\tvar attributeTypes = taskConfig.attributeTypes;\r\n\r\n\t\tvar dracoGeometry;\r\n\t\tvar decodingStatus;\r\n\r\n\t\tvar geometryType = decoder.GetEncodedGeometryType( decoderBuffer );\r\n\r\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\r\n\r\n\t\t\tdracoGeometry = new draco.Mesh();\r\n\t\t\tdecodingStatus = decoder.DecodeBufferToMesh( decoderBuffer, dracoGeometry );\r\n\r\n\t\t} else if ( geometryType === draco.POINT_CLOUD ) {\r\n\r\n\t\t\tdracoGeometry = new draco.PointCloud();\r\n\t\t\tdecodingStatus = decoder.DecodeBufferToPointCloud( decoderBuffer, dracoGeometry );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected geometry type.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = { index: null, attributes: [] };\r\n\r\n\t\t// Gather all vertex attributes.\r\n\t\tfor ( var attributeName in attributeIDs ) {\r\n\r\n\t\t\tvar attributeType = self[ attributeTypes[ attributeName ] ];\r\n\r\n\t\t\tvar attribute;\r\n\t\t\tvar attributeID;\r\n\r\n\t\t\t// A Draco file may be created with default vertex attributes, whose attribute IDs\r\n\t\t\t// are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\r\n\t\t\t// a Draco file may contain a custom set of attributes, identified by known unique\r\n\t\t\t// IDs. glTF files always do the latter, and `.drc` files typically do the former.\r\n\t\t\tif ( taskConfig.useUniqueIDs ) {\r\n\r\n\t\t\t\tattributeID = attributeIDs[ attributeName ];\r\n\t\t\t\tattribute = decoder.GetAttributeByUniqueId( dracoGeometry, attributeID );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tattributeID = decoder.GetAttributeId( dracoGeometry, draco[ attributeIDs[ attributeName ] ] );\r\n\r\n\t\t\t\tif ( attributeID === - 1 ) continue;\r\n\r\n\t\t\t\tattribute = decoder.GetAttribute( dracoGeometry, attributeID );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.attributes.push( decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) );\r\n\r\n\t\t}\r\n\r\n\t\t// Add index.\r\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\r\n\r\n\t\t\t// Generate mesh faces.\r\n\t\t\tvar numFaces = dracoGeometry.num_faces();\r\n\t\t\tvar numIndices = numFaces * 3;\r\n\t\t\tvar index = new Uint32Array( numIndices );\r\n\t\t\tvar indexArray = new draco.DracoInt32Array();\r\n\r\n\t\t\tfor ( var i = 0; i < numFaces; ++ i ) {\r\n\r\n\t\t\t\tdecoder.GetFaceFromMesh( dracoGeometry, i, indexArray );\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; ++ j ) {\r\n\r\n\t\t\t\t\tindex[ i * 3 + j ] = indexArray.GetValue( j );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.index = { array: index, itemSize: 1 };\r\n\r\n\t\t\tdraco.destroy( indexArray );\r\n\r\n\t\t}\r\n\r\n\t\tdraco.destroy( dracoGeometry );\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) {\r\n\r\n\t\tvar numComponents = attribute.num_components();\r\n\t\tvar numPoints = dracoGeometry.num_points();\r\n\t\tvar numValues = numPoints * numComponents;\r\n\t\tvar dracoArray;\r\n\r\n\t\tvar array;\r\n\r\n\t\tswitch ( attributeType ) {\r\n\r\n\t\t\tcase Float32Array:\r\n\t\t\t\tdracoArray = new draco.DracoFloat32Array();\r\n\t\t\t\tdecoder.GetAttributeFloatForAllPoints( dracoGeometry, attribute, dracoArray );\r\n\t\t\t\tarray = new Float32Array( numValues );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Int8Array:\r\n\t\t\t\tdracoArray = new draco.DracoInt8Array();\r\n\t\t\t\tdecoder.GetAttributeInt8ForAllPoints( dracoGeometry, attribute, dracoArray );\r\n\t\t\t\tarray = new Int8Array( numValues );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Int16Array:\r\n\t\t\t\tdracoArray = new draco.DracoInt16Array();\r\n\t\t\t\tdecoder.GetAttributeInt16ForAllPoints( dracoGeometry, attribute, dracoArray );\r\n\t\t\t\tarray = new Int16Array( numValues );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Int32Array:\r\n\t\t\t\tdracoArray = new draco.DracoInt32Array();\r\n\t\t\t\tdecoder.GetAttributeInt32ForAllPoints( dracoGeometry, attribute, dracoArray );\r\n\t\t\t\tarray = new Int32Array( numValues );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Uint8Array:\r\n\t\t\t\tdracoArray = new draco.DracoUInt8Array();\r\n\t\t\t\tdecoder.GetAttributeUInt8ForAllPoints( dracoGeometry, attribute, dracoArray );\r\n\t\t\t\tarray = new Uint8Array( numValues );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Uint16Array:\r\n\t\t\t\tdracoArray = new draco.DracoUInt16Array();\r\n\t\t\t\tdecoder.GetAttributeUInt16ForAllPoints( dracoGeometry, attribute, dracoArray );\r\n\t\t\t\tarray = new Uint16Array( numValues );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase Uint32Array:\r\n\t\t\t\tdracoArray = new draco.DracoUInt32Array();\r\n\t\t\t\tdecoder.GetAttributeUInt32ForAllPoints( dracoGeometry, attribute, dracoArray );\r\n\t\t\t\tarray = new Uint32Array( numValues );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected attribute type.' );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < numValues; i ++ ) {\r\n\r\n\t\t\tarray[ i ] = dracoArray.GetValue( i );\r\n\r\n\t\t}\r\n\r\n\t\tdraco.destroy( dracoArray );\r\n\r\n\t\treturn {\r\n\t\t\tname: attributeName,\r\n\t\t\tarray: array,\r\n\t\t\titemSize: numComponents\r\n\t\t};\r\n\r\n\t}\r\n\r\n};\r\n\r\n/** Deprecated static methods */\r\n\r\n/** @deprecated */\r\nTHREE.DRACOLoader.setDecoderPath = function () {\r\n\r\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.' );\r\n\r\n};\r\n\r\n/** @deprecated */\r\nTHREE.DRACOLoader.setDecoderConfig = function () {\r\n\r\n\tconsole.warn( 'THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.' );\r\n\r\n};\r\n\r\n/** @deprecated */\r\nTHREE.DRACOLoader.releaseDecoderModule = function () {\r\n\r\n\tconsole.warn( 'THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.' );\r\n\r\n};\r\n\r\n/** @deprecated */\r\nTHREE.DRACOLoader.getDecoderModule = function () {\r\n\r\n\tconsole.warn( 'THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.' );\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"script"}