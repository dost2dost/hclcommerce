{"ast":null,"code":"/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PBRMetallicRoughness } from './pbr-metallic-roughness.js';\nimport { ThreeDOMElement } from './three-dom-element.js';\nconst $pbrMetallicRoughness = Symbol('pbrMetallicRoughness');\n/**\n * Material facade implementation for Three.js materials\n */\n\nexport class Material extends ThreeDOMElement {\n  constructor(graft, material) {\n    super(graft, material);\n    this[$pbrMetallicRoughness] = new PBRMetallicRoughness(graft, material);\n  }\n\n  get pbrMetallicRoughness() {\n    return this[$pbrMetallicRoughness];\n  }\n\n  toJSON() {\n    const serialized = super.toJSON();\n    serialized.pbrMetallicRoughness = this.pbrMetallicRoughness.toJSON();\n    return serialized;\n  }\n\n}","map":{"version":3,"sources":["../../../src/facade/three-js/material.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAqBA,SAAQ,oBAAR,QAAmC,6BAAnC;AACA,SAAQ,eAAR,QAA8B,wBAA9B;AAGA,MAAM,qBAAqB,GAAG,MAAM,CAAC,sBAAD,CAApC;AAEA;;;;AAGA,OAAM,MAAO,QAAP,SAAwB,eAAxB,CAAuC;AAG3C,EAAA,WAAA,CAAY,KAAZ,EAA+B,QAA/B,EAAsD;AACpD,UAAM,KAAN,EAAa,QAAb;AAEA,SAAK,qBAAL,IAA8B,IAAI,oBAAJ,CAAyB,KAAzB,EAAgC,QAAhC,CAA9B;AACD;;AAED,MAAI,oBAAJ,GAAwB;AACtB,WAAO,KAAK,qBAAL,CAAP;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,UAAM,UAAU,GAAgC,MAAM,MAAN,EAAhD;AACA,IAAA,UAAU,CAAC,oBAAX,GAAkC,KAAK,oBAAL,CAA0B,MAA1B,EAAlC;AACA,WAAO,UAAP;AACD;;AAjB0C","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Material as ThreeMaterial} from 'three';\n\nimport {SerializedMaterial} from '../../protocol.js';\nimport {Material as MaterialInterface} from '../api.js';\n\nimport {ModelGraft} from './model-graft.js';\nimport {PBRMetallicRoughness} from './pbr-metallic-roughness.js';\nimport {ThreeDOMElement} from './three-dom-element.js';\n\n\nconst $pbrMetallicRoughness = Symbol('pbrMetallicRoughness');\n\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Material extends ThreeDOMElement implements MaterialInterface {\n  private[$pbrMetallicRoughness]: PBRMetallicRoughness;\n\n  constructor(graft: ModelGraft, material: ThreeMaterial) {\n    super(graft, material);\n\n    this[$pbrMetallicRoughness] = new PBRMetallicRoughness(graft, material);\n  }\n\n  get pbrMetallicRoughness() {\n    return this[$pbrMetallicRoughness];\n  }\n\n  toJSON(): SerializedMaterial {\n    const serialized: Partial<SerializedMaterial> = super.toJSON();\n    serialized.pbrMetallicRoughness = this.pbrMetallicRoughness.toJSON();\n    return serialized as SerializedMaterial;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}