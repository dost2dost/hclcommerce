{"ast":null,"code":"/* global AFRAME */\nvar AFRAME_INJECTED = require('../../constants').AFRAME_INJECTED;\n\nvar pkg = require('../../../package');\n\nvar registerComponent = require('../../core/component').registerComponent;\n\nvar utils = require('../../utils/');\n/**\n * 0.4.2 to 0.4.x\n * Will need to update this when A-Frame goes to 1.x.x.\n */\n\n\nfunction getFuzzyPatchVersion(version) {\n  var split = version.split('.');\n  split[2] = 'x';\n  return split.join('.');\n}\n\nvar INSPECTOR_DEV_URL = 'https://aframe.io/aframe-inspector/dist/aframe-inspector.js';\nvar INSPECTOR_RELEASE_URL = 'https://unpkg.com/aframe-inspector@' + getFuzzyPatchVersion(pkg.version) + '/dist/aframe-inspector.min.js';\nvar INSPECTOR_URL = process.env.INSPECTOR_VERSION === 'dev' ? INSPECTOR_DEV_URL : INSPECTOR_RELEASE_URL;\nvar LOADING_MESSAGE = 'Loading Inspector';\nvar LOADING_ERROR_MESSAGE = 'Error loading Inspector';\nmodule.exports.Component = registerComponent('inspector', {\n  schema: {\n    url: {\n      default: INSPECTOR_URL\n    }\n  },\n  init: function () {\n    this.firstPlay = true;\n    this.onKeydown = this.onKeydown.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n    this.initOverlay();\n    window.addEventListener('keydown', this.onKeydown);\n    window.addEventListener('message', this.onMessage);\n  },\n  play: function () {\n    var urlParam;\n\n    if (!this.firstPlay) {\n      return;\n    }\n\n    urlParam = utils.getUrlParameter('inspector');\n\n    if (urlParam !== 'false' && !!urlParam) {\n      this.openInspector();\n      this.firstPlay = false;\n    }\n  },\n  initOverlay: function () {\n    var dotsHTML = '<span class=\"dots\"><span>.</span><span>.</span><span>.</span></span>';\n    this.loadingMessageEl = document.createElement('div');\n    this.loadingMessageEl.classList.add('a-inspector-loader');\n    this.loadingMessageEl.innerHTML = LOADING_MESSAGE + dotsHTML;\n  },\n  remove: function () {\n    this.removeEventListeners();\n  },\n\n  /**\n   * <ctrl> + <alt> + i keyboard shortcut.\n   */\n  onKeydown: function (evt) {\n    var shortcutPressed = evt.keyCode === 73 && evt.ctrlKey && evt.altKey;\n\n    if (!shortcutPressed) {\n      return;\n    }\n\n    this.openInspector();\n  },\n  showLoader: function () {\n    document.body.appendChild(this.loadingMessageEl);\n  },\n  hideLoader: function () {\n    document.body.removeChild(this.loadingMessageEl);\n  },\n\n  /**\n   * postMessage. aframe.io uses this to create a button on examples to open Inspector.\n   */\n  onMessage: function (evt) {\n    if (evt.data === 'INJECT_AFRAME_INSPECTOR') {\n      this.openInspector();\n    }\n  },\n  openInspector: function (focusEl) {\n    var self = this;\n    var script; // Already injected. Open.\n\n    if (AFRAME.INSPECTOR || AFRAME.inspectorInjected) {\n      AFRAME.INSPECTOR.open(focusEl);\n      return;\n    }\n\n    this.showLoader(); // Inject.\n\n    script = document.createElement('script');\n    script.src = this.data.url;\n    script.setAttribute('data-name', 'aframe-inspector');\n    script.setAttribute(AFRAME_INJECTED, '');\n\n    script.onload = function () {\n      AFRAME.INSPECTOR.open(focusEl);\n      self.hideLoader();\n      self.removeEventListeners();\n    };\n\n    script.onerror = function () {\n      self.loadingMessageEl.innerHTML = LOADING_ERROR_MESSAGE;\n    };\n\n    document.head.appendChild(script);\n    AFRAME.inspectorInjected = true;\n  },\n  removeEventListeners: function () {\n    window.removeEventListener('keydown', this.onKeydown);\n    window.removeEventListener('message', this.onMessage);\n  }\n});","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/components/scene/inspector.js"],"names":["AFRAME_INJECTED","require","pkg","registerComponent","utils","getFuzzyPatchVersion","version","split","join","INSPECTOR_DEV_URL","INSPECTOR_RELEASE_URL","INSPECTOR_URL","process","env","INSPECTOR_VERSION","LOADING_MESSAGE","LOADING_ERROR_MESSAGE","module","exports","Component","schema","url","default","init","firstPlay","onKeydown","bind","onMessage","initOverlay","window","addEventListener","play","urlParam","getUrlParameter","openInspector","dotsHTML","loadingMessageEl","document","createElement","classList","add","innerHTML","remove","removeEventListeners","evt","shortcutPressed","keyCode","ctrlKey","altKey","showLoader","body","appendChild","hideLoader","removeChild","data","focusEl","self","script","AFRAME","INSPECTOR","inspectorInjected","open","src","setAttribute","onload","onerror","head","removeEventListener"],"mappings":"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","sourcesContent":["/* global AFRAME */\nvar AFRAME_INJECTED = require('../../constants').AFRAME_INJECTED;\nvar pkg = require('../../../package');\nvar registerComponent = require('../../core/component').registerComponent;\nvar utils = require('../../utils/');\n\n/**\n * 0.4.2 to 0.4.x\n * Will need to update this when A-Frame goes to 1.x.x.\n */\nfunction getFuzzyPatchVersion (version) {\n  var split = version.split('.');\n  split[2] = 'x';\n  return split.join('.');\n}\n\nvar INSPECTOR_DEV_URL = 'https://aframe.io/aframe-inspector/dist/aframe-inspector.js';\nvar INSPECTOR_RELEASE_URL = 'https://unpkg.com/aframe-inspector@' + getFuzzyPatchVersion(pkg.version) + '/dist/aframe-inspector.min.js';\nvar INSPECTOR_URL = process.env.INSPECTOR_VERSION === 'dev' ? INSPECTOR_DEV_URL : INSPECTOR_RELEASE_URL;\nvar LOADING_MESSAGE = 'Loading Inspector';\nvar LOADING_ERROR_MESSAGE = 'Error loading Inspector';\n\nmodule.exports.Component = registerComponent('inspector', {\n  schema: {\n    url: {default: INSPECTOR_URL}\n  },\n\n  init: function () {\n    this.firstPlay = true;\n    this.onKeydown = this.onKeydown.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n    this.initOverlay();\n    window.addEventListener('keydown', this.onKeydown);\n    window.addEventListener('message', this.onMessage);\n  },\n\n  play: function () {\n    var urlParam;\n    if (!this.firstPlay) { return; }\n    urlParam = utils.getUrlParameter('inspector');\n    if (urlParam !== 'false' && !!urlParam) {\n      this.openInspector();\n      this.firstPlay = false;\n    }\n  },\n\n  initOverlay: function () {\n    var dotsHTML = '<span class=\"dots\"><span>.</span><span>.</span><span>.</span></span>';\n    this.loadingMessageEl = document.createElement('div');\n    this.loadingMessageEl.classList.add('a-inspector-loader');\n    this.loadingMessageEl.innerHTML = LOADING_MESSAGE + dotsHTML;\n  },\n\n  remove: function () {\n    this.removeEventListeners();\n  },\n\n  /**\n   * <ctrl> + <alt> + i keyboard shortcut.\n   */\n  onKeydown: function (evt) {\n    var shortcutPressed = evt.keyCode === 73 && evt.ctrlKey && evt.altKey;\n    if (!shortcutPressed) { return; }\n    this.openInspector();\n  },\n\n  showLoader: function () {\n    document.body.appendChild(this.loadingMessageEl);\n  },\n\n  hideLoader: function () {\n    document.body.removeChild(this.loadingMessageEl);\n  },\n\n  /**\n   * postMessage. aframe.io uses this to create a button on examples to open Inspector.\n   */\n  onMessage: function (evt) {\n    if (evt.data === 'INJECT_AFRAME_INSPECTOR') { this.openInspector(); }\n  },\n\n  openInspector: function (focusEl) {\n    var self = this;\n    var script;\n\n    // Already injected. Open.\n    if (AFRAME.INSPECTOR || AFRAME.inspectorInjected) {\n      AFRAME.INSPECTOR.open(focusEl);\n      return;\n    }\n\n    this.showLoader();\n\n    // Inject.\n    script = document.createElement('script');\n    script.src = this.data.url;\n    script.setAttribute('data-name', 'aframe-inspector');\n    script.setAttribute(AFRAME_INJECTED, '');\n    script.onload = function () {\n      AFRAME.INSPECTOR.open(focusEl);\n      self.hideLoader();\n      self.removeEventListeners();\n    };\n    script.onerror = function () {\n      self.loadingMessageEl.innerHTML = LOADING_ERROR_MESSAGE;\n    };\n    document.head.appendChild(script);\n    AFRAME.inspectorInjected = true;\n  },\n\n  removeEventListeners: function () {\n    window.removeEventListener('keydown', this.onKeydown);\n    window.removeEventListener('message', this.onMessage);\n  }\n});\n"]},"metadata":{},"sourceType":"script"}