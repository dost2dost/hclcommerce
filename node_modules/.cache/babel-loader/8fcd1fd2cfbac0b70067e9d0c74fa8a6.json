{"ast":null,"code":"var registerComponent = require('../core/component').registerComponent;\n/**\n * Tracked controls.\n * Abstract controls that decide if the WebVR or WebXR version is going to be applied.\n *\n * @property {number} controller - Index of controller in array returned by Gamepad API.\n *  Only used if hand property is not set.\n * @property {string} id - Selected controller among those returned by Gamepad API.\n * @property {number} hand - If multiple controllers found with id, choose the one with the\n *  given value for hand. If set, we ignore 'controller' property\n */\n\n\nmodule.exports.Component = registerComponent('tracked-controls', {\n  schema: {\n    autoHide: {\n      default: true\n    },\n    controller: {\n      default: -1\n    },\n    id: {\n      type: 'string',\n      default: ''\n    },\n    hand: {\n      type: 'string',\n      default: ''\n    },\n    idPrefix: {\n      type: 'string',\n      default: ''\n    },\n    orientationOffset: {\n      type: 'vec3'\n    },\n    // Arm model parameters when not 6DoF.\n    armModel: {\n      default: true\n    },\n    headElement: {\n      type: 'selector'\n    },\n    iterateControllerProfiles: {\n      default: false\n    }\n  },\n  update: function () {\n    var data = this.data;\n    var el = this.el;\n\n    if (el.sceneEl.hasWebXR) {\n      el.setAttribute('tracked-controls-webxr', {\n        id: data.id,\n        hand: data.hand,\n        index: data.controller,\n        iterateControllerProfiles: data.iterateControllerProfiles\n      });\n    } else {\n      el.setAttribute('tracked-controls-webvr', data);\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/components/tracked-controls.js"],"names":["registerComponent","require","module","exports","Component","schema","autoHide","default","controller","id","type","hand","idPrefix","orientationOffset","armModel","headElement","iterateControllerProfiles","update","data","el","sceneEl","hasWebXR","setAttribute","index"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,mBAAD,CAAP,CAA6BD,iBAArD;AAEA;;;;;;;;;;;;AAUAE,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2BJ,iBAAiB,CAAC,kBAAD,EAAqB;AAC/DK,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KADJ;AAENC,IAAAA,UAAU,EAAE;AAACD,MAAAA,OAAO,EAAE,CAAC;AAAX,KAFN;AAGNE,IAAAA,EAAE,EAAE;AAACC,MAAAA,IAAI,EAAE,QAAP;AAAiBH,MAAAA,OAAO,EAAE;AAA1B,KAHE;AAINI,IAAAA,IAAI,EAAE;AAACD,MAAAA,IAAI,EAAE,QAAP;AAAiBH,MAAAA,OAAO,EAAE;AAA1B,KAJA;AAKNK,IAAAA,QAAQ,EAAE;AAACF,MAAAA,IAAI,EAAE,QAAP;AAAiBH,MAAAA,OAAO,EAAE;AAA1B,KALJ;AAMNM,IAAAA,iBAAiB,EAAE;AAACH,MAAAA,IAAI,EAAE;AAAP,KANb;AAON;AACAI,IAAAA,QAAQ,EAAE;AAACP,MAAAA,OAAO,EAAE;AAAV,KARJ;AASNQ,IAAAA,WAAW,EAAE;AAACL,MAAAA,IAAI,EAAE;AAAP,KATP;AAUNM,IAAAA,yBAAyB,EAAE;AAACT,MAAAA,OAAO,EAAE;AAAV;AAVrB,GADuD;AAc/DU,EAAAA,MAAM,EAAE,YAAY;AAClB,QAAIC,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIC,EAAE,GAAG,KAAKA,EAAd;;AACA,QAAIA,EAAE,CAACC,OAAH,CAAWC,QAAf,EAAyB;AACvBF,MAAAA,EAAE,CAACG,YAAH,CAAgB,wBAAhB,EAA0C;AACxCb,QAAAA,EAAE,EAAES,IAAI,CAACT,EAD+B;AAExCE,QAAAA,IAAI,EAAEO,IAAI,CAACP,IAF6B;AAGxCY,QAAAA,KAAK,EAAEL,IAAI,CAACV,UAH4B;AAIxCQ,QAAAA,yBAAyB,EAAEE,IAAI,CAACF;AAJQ,OAA1C;AAMD,KAPD,MAOO;AACLG,MAAAA,EAAE,CAACG,YAAH,CAAgB,wBAAhB,EAA0CJ,IAA1C;AACD;AACF;AA3B8D,CAArB,CAA5C","sourcesContent":["var registerComponent = require('../core/component').registerComponent;\n\n/**\n * Tracked controls.\n * Abstract controls that decide if the WebVR or WebXR version is going to be applied.\n *\n * @property {number} controller - Index of controller in array returned by Gamepad API.\n *  Only used if hand property is not set.\n * @property {string} id - Selected controller among those returned by Gamepad API.\n * @property {number} hand - If multiple controllers found with id, choose the one with the\n *  given value for hand. If set, we ignore 'controller' property\n */\nmodule.exports.Component = registerComponent('tracked-controls', {\n  schema: {\n    autoHide: {default: true},\n    controller: {default: -1},\n    id: {type: 'string', default: ''},\n    hand: {type: 'string', default: ''},\n    idPrefix: {type: 'string', default: ''},\n    orientationOffset: {type: 'vec3'},\n    // Arm model parameters when not 6DoF.\n    armModel: {default: true},\n    headElement: {type: 'selector'},\n    iterateControllerProfiles: {default: false}\n  },\n\n  update: function () {\n    var data = this.data;\n    var el = this.el;\n    if (el.sceneEl.hasWebXR) {\n      el.setAttribute('tracked-controls-webxr', {\n        id: data.id,\n        hand: data.hand,\n        index: data.controller,\n        iterateControllerProfiles: data.iterateControllerProfiles\n      });\n    } else {\n      el.setAttribute('tracked-controls-webvr', data);\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"script"}