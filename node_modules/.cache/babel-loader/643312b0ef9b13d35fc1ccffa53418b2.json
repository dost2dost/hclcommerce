{"ast":null,"code":"// performance.now() polyfill from https://gist.github.com/paulirish/5438650\n'use strict';\n\n(function () {\n  if ('performance' in window == false) {\n    window.performance = {};\n  }\n\n  var performance = window.performance;\n\n  if ('now' in performance == false) {\n    var nowOffset = Date.now();\n\n    if (performance.timing && performance.timing.navigationStart) {\n      nowOffset = performance.timing.navigationStart;\n    }\n\n    performance.now = function now() {\n      return Date.now() - nowOffset;\n    };\n  }\n\n  if (!performance.mark) {\n    performance.mark = function () {};\n  }\n\n  if (!performance.measure) {\n    performance.measure = function () {};\n  }\n})();\n\nwindow.rStats = function rStats(settings) {\n  function iterateKeys(array, callback) {\n    var keys = Object.keys(array);\n\n    for (var j = 0, l = keys.length; j < l; j++) {\n      callback(keys[j]);\n    }\n  }\n\n  function importCSS(url) {\n    var element = document.createElement('link');\n    element.href = url;\n    element.rel = 'stylesheet';\n    element.type = 'text/css';\n    document.getElementsByTagName('head')[0].appendChild(element);\n  }\n\n  var _settings = settings || {};\n\n  var _colours = _settings.colours || ['#850700', '#c74900', '#fcb300', '#284280', '#4c7c0c'];\n\n  var _cssFont = 'https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300';\n\n  var _cssRStats = (_settings.CSSPath ? _settings.CSSPath : '') + 'rStats.css';\n\n  var _css = _settings.css || [_cssFont, _cssRStats];\n\n  _css.forEach(function (uri) {\n    importCSS(uri);\n  });\n\n  if (!_settings.values) _settings.values = {};\n\n  var _base,\n      _div,\n      _elHeight = 10,\n      _elWidth = 200;\n\n  var _perfCounters = {};\n\n  function Graph(_dom, _id, _defArg) {\n    var _def = _defArg || {};\n\n    var _canvas = document.createElement('canvas'),\n        _ctx = _canvas.getContext('2d'),\n        _max = 0,\n        _current = 0;\n\n    var c = _def.color ? _def.color : '#666666';\n\n    var _dotCanvas = document.createElement('canvas'),\n        _dotCtx = _dotCanvas.getContext('2d');\n\n    _dotCanvas.width = 1;\n    _dotCanvas.height = 2 * _elHeight;\n    _dotCtx.fillStyle = '#444444';\n\n    _dotCtx.fillRect(0, 0, 1, 2 * _elHeight);\n\n    _dotCtx.fillStyle = c;\n\n    _dotCtx.fillRect(0, _elHeight, 1, _elHeight);\n\n    _dotCtx.fillStyle = '#ffffff';\n    _dotCtx.globalAlpha = 0.5;\n\n    _dotCtx.fillRect(0, _elHeight, 1, 1);\n\n    _dotCtx.globalAlpha = 1;\n\n    var _alarmCanvas = document.createElement('canvas'),\n        _alarmCtx = _alarmCanvas.getContext('2d');\n\n    _alarmCanvas.width = 1;\n    _alarmCanvas.height = 2 * _elHeight;\n    _alarmCtx.fillStyle = '#444444';\n\n    _alarmCtx.fillRect(0, 0, 1, 2 * _elHeight);\n\n    _alarmCtx.fillStyle = '#b70000';\n\n    _alarmCtx.fillRect(0, _elHeight, 1, _elHeight);\n\n    _alarmCtx.globalAlpha = 0.5;\n    _alarmCtx.fillStyle = '#ffffff';\n\n    _alarmCtx.fillRect(0, _elHeight, 1, 1);\n\n    _alarmCtx.globalAlpha = 1;\n\n    function _init() {\n      _canvas.width = _elWidth;\n      _canvas.height = _elHeight;\n      _canvas.style.width = _canvas.width + 'px';\n      _canvas.style.height = _canvas.height + 'px';\n      _canvas.className = 'rs-canvas';\n\n      _dom.appendChild(_canvas);\n\n      _ctx.fillStyle = '#444444';\n\n      _ctx.fillRect(0, 0, _canvas.width, _canvas.height);\n    }\n\n    function _draw(v, alarm) {\n      _current += (v - _current) * 0.1;\n      _max *= 0.99;\n      if (_current > _max) _max = _current;\n\n      _ctx.drawImage(_canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height);\n\n      if (alarm) {\n        _ctx.drawImage(_alarmCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight);\n      } else {\n        _ctx.drawImage(_dotCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight);\n      }\n    }\n\n    _init();\n\n    return {\n      draw: _draw\n    };\n  }\n\n  function StackGraph(_dom, _num) {\n    var _canvas = document.createElement('canvas'),\n        _ctx = _canvas.getContext('2d');\n\n    function _init() {\n      _canvas.width = _elWidth;\n      _canvas.height = _elHeight * _num;\n      _canvas.style.width = _canvas.width + 'px';\n      _canvas.style.height = _canvas.height + 'px';\n      _canvas.className = 'rs-canvas';\n\n      _dom.appendChild(_canvas);\n\n      _ctx.fillStyle = '#444444';\n\n      _ctx.fillRect(0, 0, _canvas.width, _canvas.height);\n    }\n\n    function _draw(v) {\n      _ctx.drawImage(_canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height);\n\n      var th = 0;\n      iterateKeys(v, function (j) {\n        var h = v[j] * _canvas.height;\n        _ctx.fillStyle = _colours[j];\n\n        _ctx.fillRect(_canvas.width - 1, th, 1, h);\n\n        th += h;\n      });\n    }\n\n    _init();\n\n    return {\n      draw: _draw\n    };\n  }\n\n  function PerfCounter(id, group) {\n    var _id = id,\n        _time,\n        _value = 0,\n        _total = 0,\n        _averageValue = 0,\n        _accumValue = 0,\n        _accumStart = performance.now(),\n        _accumSamples = 0,\n        _dom = document.createElement('div'),\n        _spanId = document.createElement('span'),\n        _spanValue = document.createElement('div'),\n        _spanValueText = document.createTextNode(''),\n        _def = _settings ? _settings.values[_id.toLowerCase()] : null,\n        _graph = new Graph(_dom, _id, _def),\n        _started = false;\n\n    _spanId.className = 'rs-counter-id';\n    _spanId.textContent = _def && _def.caption ? _def.caption : _id;\n    _spanValue.className = 'rs-counter-value';\n\n    _spanValue.appendChild(_spanValueText);\n\n    _dom.appendChild(_spanId);\n\n    _dom.appendChild(_spanValue);\n\n    if (group) group.div.appendChild(_dom);else _div.appendChild(_dom);\n    _time = performance.now();\n\n    function _average(v) {\n      if (_def && _def.average) {\n        _accumValue += v;\n        _accumSamples++;\n        var t = performance.now();\n\n        if (t - _accumStart >= (_def.avgMs || 1000)) {\n          _averageValue = _accumValue / _accumSamples;\n          _accumValue = 0;\n          _accumStart = t;\n          _accumSamples = 0;\n        }\n      }\n    }\n\n    function _start() {\n      _time = performance.now();\n      if (_settings.userTimingAPI) performance.mark(_id + '-start');\n      _started = true;\n    }\n\n    function _end() {\n      _value = performance.now() - _time;\n\n      if (_settings.userTimingAPI) {\n        performance.mark(_id + '-end');\n\n        if (_started) {\n          performance.measure(_id, _id + '-start', _id + '-end');\n        }\n      }\n\n      _average(_value);\n    }\n\n    function _tick() {\n      _end();\n\n      _start();\n    }\n\n    function _draw() {\n      var v = _def && _def.average ? _averageValue : _value;\n      _spanValueText.nodeValue = Math.round(v * 100) / 100;\n      var a = _def && (_def.below && _value < _def.below || _def.over && _value > _def.over);\n\n      _graph.draw(_value, a);\n\n      _dom.className = a ? 'rs-counter-base alarm' : 'rs-counter-base';\n    }\n\n    function _frame() {\n      var t = performance.now();\n      var e = t - _time;\n      _total++;\n\n      if (e > 1000) {\n        if (_def && _def.interpolate === false) {\n          _value = _total;\n        } else {\n          _value = _total * 1000 / e;\n        }\n\n        _total = 0;\n        _time = t;\n\n        _average(_value);\n      }\n    }\n\n    function _set(v) {\n      _value = v;\n\n      _average(_value);\n    }\n\n    return {\n      set: _set,\n      start: _start,\n      tick: _tick,\n      end: _end,\n      frame: _frame,\n      value: function () {\n        return _value;\n      },\n      draw: _draw\n    };\n  }\n\n  function sample() {\n    var _value = 0;\n\n    function _set(v) {\n      _value = v;\n    }\n\n    return {\n      set: _set,\n      value: function () {\n        return _value;\n      }\n    };\n  }\n\n  function _perf(idArg) {\n    var id = idArg.toLowerCase();\n    if (id === undefined) id = 'default';\n    if (_perfCounters[id]) return _perfCounters[id];\n    var group = null;\n\n    if (_settings && _settings.groups) {\n      iterateKeys(_settings.groups, function (j) {\n        var g = _settings.groups[parseInt(j, 10)];\n\n        if (!group && g.values.indexOf(id.toLowerCase()) !== -1) {\n          group = g;\n        }\n      });\n    }\n\n    var p = new PerfCounter(id, group);\n    _perfCounters[id] = p;\n    return p;\n  }\n\n  function _init() {\n    if (_settings.plugins) {\n      if (!_settings.values) _settings.values = {};\n      if (!_settings.groups) _settings.groups = [];\n      if (!_settings.fractions) _settings.fractions = [];\n\n      for (var j = 0; j < _settings.plugins.length; j++) {\n        _settings.plugins[j].attach(_perf);\n\n        iterateKeys(_settings.plugins[j].values, function (k) {\n          _settings.values[k] = _settings.plugins[j].values[k];\n        });\n        _settings.groups = _settings.groups.concat(_settings.plugins[j].groups);\n        _settings.fractions = _settings.fractions.concat(_settings.plugins[j].fractions);\n      }\n    } else {\n      _settings.plugins = {};\n    }\n\n    _base = document.createElement('div');\n    _base.className = 'rs-base';\n    _div = document.createElement('div');\n    _div.className = 'rs-container';\n    _div.style.height = 'auto';\n\n    _base.appendChild(_div);\n\n    document.body.appendChild(_base);\n    if (!_settings) return;\n\n    if (_settings.groups) {\n      iterateKeys(_settings.groups, function (j) {\n        var g = _settings.groups[parseInt(j, 10)];\n\n        var div = document.createElement('div');\n        div.className = 'rs-group';\n        g.div = div;\n        var h1 = document.createElement('h1');\n        h1.textContent = g.caption;\n        h1.addEventListener('click', function (e) {\n          this.classList.toggle('hidden');\n          e.preventDefault();\n        }.bind(div));\n\n        _div.appendChild(h1);\n\n        _div.appendChild(div);\n      });\n    }\n\n    if (_settings.fractions) {\n      iterateKeys(_settings.fractions, function (j) {\n        var f = _settings.fractions[parseInt(j, 10)];\n\n        var div = document.createElement('div');\n        div.className = 'rs-fraction';\n        var legend = document.createElement('div');\n        legend.className = 'rs-legend';\n        var h = 0;\n        iterateKeys(_settings.fractions[j].steps, function (k) {\n          var p = document.createElement('p');\n          p.textContent = _settings.fractions[j].steps[k];\n          p.style.color = _colours[h];\n          legend.appendChild(p);\n          h++;\n        });\n        div.appendChild(legend);\n        div.style.height = h * _elHeight + 'px';\n        f.div = div;\n        var graph = new StackGraph(div, h);\n        f.graph = graph;\n\n        _div.appendChild(div);\n      });\n    }\n  }\n\n  function _update() {\n    iterateKeys(_settings.plugins, function (j) {\n      _settings.plugins[j].update();\n    });\n    iterateKeys(_perfCounters, function (j) {\n      _perfCounters[j].draw();\n    });\n\n    if (_settings && _settings.fractions) {\n      iterateKeys(_settings.fractions, function (j) {\n        var f = _settings.fractions[parseInt(j, 10)];\n\n        var v = [];\n\n        var base = _perfCounters[f.base.toLowerCase()];\n\n        if (base) {\n          base = base.value();\n          iterateKeys(_settings.fractions[j].steps, function (k) {\n            var s = _settings.fractions[j].steps[parseInt(k, 10)].toLowerCase();\n\n            var val = _perfCounters[s];\n\n            if (val) {\n              v.push(val.value() / base);\n            }\n          });\n        }\n\n        f.graph.draw(v);\n      });\n    }\n    /*if( _height != _div.clientHeight ) {\n        _height = _div.clientHeight;\n        _base.style.height = _height + 2 * _elHeight + 'px';\n    console.log( _base.clientHeight );\n    }*/\n\n  }\n\n  _init();\n\n  return function (id) {\n    if (id) return _perf(id);\n    return {\n      element: _base,\n      update: _update\n    };\n  };\n};\n\nif (typeof module === 'object') {\n  module.exports = window.rStats;\n}","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/vendor/rStats.js"],"names":["window","performance","nowOffset","Date","now","timing","navigationStart","mark","measure","rStats","settings","iterateKeys","array","callback","keys","Object","j","l","length","importCSS","url","element","document","createElement","href","rel","type","getElementsByTagName","appendChild","_settings","_colours","colours","_cssFont","_cssRStats","CSSPath","_css","css","forEach","uri","values","_base","_div","_elHeight","_elWidth","_perfCounters","Graph","_dom","_id","_defArg","_def","_canvas","_ctx","getContext","_max","_current","c","color","_dotCanvas","_dotCtx","width","height","fillStyle","fillRect","globalAlpha","_alarmCanvas","_alarmCtx","_init","style","className","_draw","v","alarm","drawImage","draw","StackGraph","_num","th","h","PerfCounter","id","group","_time","_value","_total","_averageValue","_accumValue","_accumStart","_accumSamples","_spanId","_spanValue","_spanValueText","createTextNode","toLowerCase","_graph","_started","textContent","caption","div","_average","average","t","avgMs","_start","userTimingAPI","_end","_tick","nodeValue","Math","round","a","below","over","_frame","e","interpolate","_set","set","start","tick","end","frame","value","sample","_perf","idArg","undefined","groups","g","parseInt","indexOf","p","plugins","fractions","attach","k","concat","body","h1","addEventListener","classList","toggle","preventDefault","bind","f","legend","steps","graph","_update","update","base","s","val","push","module","exports"],"mappings":"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","sourcesContent":["// performance.now() polyfill from https://gist.github.com/paulirish/5438650\n'use strict';\n\n( function () {\n\n    if ( 'performance' in window == false ) {\n        window.performance = {};\n    }\n\n    var performance = window.performance;\n\n    if ( 'now' in performance == false ) {\n\n        var nowOffset = Date.now();\n\n        if ( performance.timing && performance.timing.navigationStart ) {\n            nowOffset = performance.timing.navigationStart;\n        }\n\n        performance.now = function now () {\n            return Date.now() - nowOffset;\n        };\n\n    }\n\n    if( !performance.mark ) {\n        performance.mark = function(){}\n    }\n\n    if( !performance.measure ) {\n        performance.measure = function(){}\n    }\n\n} )();\n\nwindow.rStats = function rStats ( settings ) {\n\n    function iterateKeys ( array, callback ) {\n        var keys = Object.keys( array );\n        for ( var j = 0, l = keys.length; j < l; j++ ) {\n            callback( keys[ j ] );\n        }\n    }\n\n    function importCSS ( url ) {\n\n        var element = document.createElement( 'link' );\n        element.href = url;\n        element.rel = 'stylesheet';\n        element.type = 'text/css';\n        document.getElementsByTagName( 'head' )[ 0 ].appendChild( element );\n\n    }\n\n    var _settings = settings || {};\n    var _colours = _settings.colours || [ '#850700', '#c74900', '#fcb300', '#284280', '#4c7c0c' ];\n\n    var _cssFont = 'https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300';\n    var _cssRStats = ( _settings.CSSPath ? _settings.CSSPath : '' ) + 'rStats.css';\n\n    var _css = _settings.css || [ _cssFont, _cssRStats ];\n    _css.forEach(function (uri) {\n        importCSS( uri );\n    });\n\n    if ( !_settings.values ) _settings.values = {};\n\n    var _base, _div, _elHeight = 10, _elWidth = 200;\n    var _perfCounters = {};\n\n\n    function Graph ( _dom, _id, _defArg ) {\n\n        var _def = _defArg || {};\n        var _canvas = document.createElement( 'canvas' ),\n            _ctx = _canvas.getContext( '2d' ),\n            _max = 0,\n            _current = 0;\n\n        var c = _def.color ? _def.color : '#666666';\n\n        var _dotCanvas = document.createElement( 'canvas' ),\n            _dotCtx = _dotCanvas.getContext( '2d' );\n        _dotCanvas.width = 1;\n        _dotCanvas.height = 2 * _elHeight;\n        _dotCtx.fillStyle = '#444444';\n        _dotCtx.fillRect( 0, 0, 1, 2 * _elHeight );\n        _dotCtx.fillStyle = c;\n        _dotCtx.fillRect( 0, _elHeight, 1, _elHeight );\n        _dotCtx.fillStyle = '#ffffff';\n        _dotCtx.globalAlpha = 0.5;\n        _dotCtx.fillRect( 0, _elHeight, 1, 1 );\n        _dotCtx.globalAlpha = 1;\n\n        var _alarmCanvas = document.createElement( 'canvas' ),\n            _alarmCtx = _alarmCanvas.getContext( '2d' );\n        _alarmCanvas.width = 1;\n        _alarmCanvas.height = 2 * _elHeight;\n        _alarmCtx.fillStyle = '#444444';\n        _alarmCtx.fillRect( 0, 0, 1, 2 * _elHeight );\n        _alarmCtx.fillStyle = '#b70000';\n        _alarmCtx.fillRect( 0, _elHeight, 1, _elHeight );\n        _alarmCtx.globalAlpha = 0.5;\n        _alarmCtx.fillStyle = '#ffffff';\n        _alarmCtx.fillRect( 0, _elHeight, 1, 1 );\n        _alarmCtx.globalAlpha = 1;\n\n        function _init () {\n\n            _canvas.width = _elWidth;\n            _canvas.height = _elHeight;\n            _canvas.style.width = _canvas.width + 'px';\n            _canvas.style.height = _canvas.height + 'px';\n            _canvas.className = 'rs-canvas';\n            _dom.appendChild( _canvas );\n\n            _ctx.fillStyle = '#444444';\n            _ctx.fillRect( 0, 0, _canvas.width, _canvas.height );\n\n        }\n\n        function _draw ( v, alarm ) {\n            _current += ( v - _current ) * 0.1;\n            _max *= 0.99;\n            if ( _current > _max ) _max = _current;\n            _ctx.drawImage( _canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height );\n            if ( alarm ) {\n                _ctx.drawImage( _alarmCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight );\n            } else {\n                _ctx.drawImage( _dotCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight );\n            }\n        }\n\n        _init();\n\n        return {\n            draw: _draw\n        };\n\n    }\n\n    function StackGraph ( _dom, _num ) {\n\n        var _canvas = document.createElement( 'canvas' ),\n            _ctx = _canvas.getContext( '2d' );\n\n        function _init () {\n\n            _canvas.width = _elWidth;\n            _canvas.height = _elHeight * _num;\n            _canvas.style.width = _canvas.width + 'px';\n            _canvas.style.height = _canvas.height + 'px';\n            _canvas.className = 'rs-canvas';\n            _dom.appendChild( _canvas );\n\n            _ctx.fillStyle = '#444444';\n            _ctx.fillRect( 0, 0, _canvas.width, _canvas.height );\n\n        }\n\n        function _draw ( v ) {\n            _ctx.drawImage( _canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height );\n            var th = 0;\n            iterateKeys( v, function ( j ) {\n                var h = v[ j ] * _canvas.height;\n                _ctx.fillStyle = _colours[ j ];\n                _ctx.fillRect( _canvas.width - 1, th, 1, h );\n                th += h;\n            } );\n        }\n\n        _init();\n\n        return {\n            draw: _draw\n        };\n\n    }\n\n    function PerfCounter ( id, group ) {\n\n        var _id = id,\n            _time,\n            _value = 0,\n            _total = 0,\n            _averageValue = 0,\n            _accumValue = 0,\n            _accumStart = performance.now(),\n            _accumSamples = 0,\n            _dom = document.createElement( 'div' ),\n            _spanId = document.createElement( 'span' ),\n            _spanValue = document.createElement( 'div' ),\n            _spanValueText = document.createTextNode( '' ),\n            _def = _settings ? _settings.values[ _id.toLowerCase() ] : null,\n            _graph = new Graph( _dom, _id, _def ),\n            _started = false;\n\n        _spanId.className = 'rs-counter-id';\n        _spanId.textContent = ( _def && _def.caption ) ? _def.caption : _id;\n\n        _spanValue.className = 'rs-counter-value';\n        _spanValue.appendChild( _spanValueText );\n\n        _dom.appendChild( _spanId );\n        _dom.appendChild( _spanValue );\n        if ( group ) group.div.appendChild( _dom );\n        else _div.appendChild( _dom );\n\n        _time = performance.now();\n\n        function _average ( v ) {\n            if ( _def && _def.average ) {\n                _accumValue += v;\n                _accumSamples++;\n                var t = performance.now();\n                if ( t - _accumStart >= ( _def.avgMs || 1000 ) ) {\n                    _averageValue = _accumValue / _accumSamples;\n                    _accumValue = 0;\n                    _accumStart = t;\n                    _accumSamples = 0;\n                }\n            }\n        }\n\n        function _start () {\n            _time = performance.now();\n            if( _settings.userTimingAPI ) performance.mark( _id + '-start' );\n            _started = true;\n        }\n\n        function _end () {\n            _value = performance.now() - _time;\n            if( _settings.userTimingAPI ) {\n                performance.mark( _id + '-end' );\n                if( _started ) {\n                    performance.measure( _id, _id + '-start', _id + '-end' );\n                }\n            }\n            _average( _value );\n        }\n\n        function _tick () {\n            _end();\n            _start();\n        }\n\n        function _draw () {\n            var v = ( _def && _def.average ) ? _averageValue : _value;\n            _spanValueText.nodeValue = Math.round( v * 100 ) / 100;\n            var a = ( _def && ( ( _def.below && _value < _def.below ) || ( _def.over && _value > _def.over ) ) );\n            _graph.draw( _value, a );\n            _dom.className = a ? 'rs-counter-base alarm' : 'rs-counter-base';\n\n        }\n\n        function _frame () {\n            var t = performance.now();\n            var e = t - _time;\n            _total++;\n            if ( e > 1000 ) {\n                if ( _def && _def.interpolate === false ) {\n                    _value = _total;\n                } else {\n                    _value = _total * 1000 / e;\n                }\n                _total = 0;\n                _time = t;\n                _average( _value );\n            }\n        }\n\n        function _set ( v ) {\n            _value = v;\n            _average( _value );\n        }\n\n        return {\n            set: _set,\n            start: _start,\n            tick: _tick,\n            end: _end,\n            frame: _frame,\n            value: function () {\n                return _value;\n            },\n            draw: _draw\n        };\n\n    }\n\n    function sample () {\n\n        var _value = 0;\n\n        function _set ( v ) {\n            _value = v;\n        }\n\n        return {\n            set: _set,\n            value: function () {\n                return _value;\n            }\n        };\n\n    }\n\n    function _perf ( idArg ) {\n\n        var id = idArg.toLowerCase();\n        if ( id === undefined ) id = 'default';\n        if ( _perfCounters[ id ] ) return _perfCounters[ id ];\n\n        var group = null;\n        if ( _settings && _settings.groups ) {\n            iterateKeys( _settings.groups, function ( j ) {\n                var g = _settings.groups[ parseInt( j, 10 ) ];\n                if ( !group && g.values.indexOf( id.toLowerCase() ) !== -1 ) {\n                    group = g;\n                }\n            } );\n        }\n\n        var p = new PerfCounter( id, group );\n        _perfCounters[ id ] = p;\n        return p;\n\n    }\n\n    function _init () {\n\n        if ( _settings.plugins ) {\n            if ( !_settings.values ) _settings.values = {};\n            if ( !_settings.groups ) _settings.groups = [];\n            if ( !_settings.fractions ) _settings.fractions = [];\n            for ( var j = 0; j < _settings.plugins.length; j++ ) {\n                _settings.plugins[ j ].attach( _perf );\n                iterateKeys( _settings.plugins[ j ].values, function ( k ) {\n                    _settings.values[ k ] = _settings.plugins[ j ].values[ k ];\n                } );\n                _settings.groups = _settings.groups.concat( _settings.plugins[ j ].groups );\n                _settings.fractions = _settings.fractions.concat( _settings.plugins[ j ].fractions );\n            }\n        } else {\n            _settings.plugins = {};\n        }\n\n        _base = document.createElement( 'div' );\n        _base.className = 'rs-base';\n        _div = document.createElement( 'div' );\n        _div.className = 'rs-container';\n        _div.style.height = 'auto';\n        _base.appendChild( _div );\n        document.body.appendChild( _base );\n\n        if ( !_settings ) return;\n\n        if ( _settings.groups ) {\n            iterateKeys( _settings.groups, function ( j ) {\n                var g = _settings.groups[ parseInt( j, 10 ) ];\n                var div = document.createElement( 'div' );\n                div.className = 'rs-group';\n                g.div = div;\n                var h1 = document.createElement( 'h1' );\n                h1.textContent = g.caption;\n                h1.addEventListener( 'click', function ( e ) {\n                    this.classList.toggle( 'hidden' );\n                    e.preventDefault();\n                }.bind( div ) );\n                _div.appendChild( h1 );\n                _div.appendChild( div );\n            } );\n        }\n\n        if ( _settings.fractions ) {\n            iterateKeys( _settings.fractions, function ( j ) {\n                var f = _settings.fractions[ parseInt( j, 10 ) ];\n                var div = document.createElement( 'div' );\n                div.className = 'rs-fraction';\n                var legend = document.createElement( 'div' );\n                legend.className = 'rs-legend';\n\n                var h = 0;\n                iterateKeys( _settings.fractions[ j ].steps, function ( k ) {\n                    var p = document.createElement( 'p' );\n                    p.textContent = _settings.fractions[ j ].steps[ k ];\n                    p.style.color = _colours[ h ];\n                    legend.appendChild( p );\n                    h++;\n                } );\n                div.appendChild( legend );\n                div.style.height = h * _elHeight + 'px';\n                f.div = div;\n                var graph = new StackGraph( div, h );\n                f.graph = graph;\n                _div.appendChild( div );\n            } );\n        }\n\n    }\n\n    function _update () {\n\n        iterateKeys( _settings.plugins, function ( j ) {\n            _settings.plugins[ j ].update();\n        } );\n\n        iterateKeys( _perfCounters, function ( j ) {\n            _perfCounters[ j ].draw();\n        } );\n\n        if ( _settings && _settings.fractions ) {\n            iterateKeys( _settings.fractions, function ( j ) {\n                var f = _settings.fractions[ parseInt( j, 10 ) ];\n                var v = [];\n                var base = _perfCounters[ f.base.toLowerCase() ];\n                if ( base ) {\n                    base = base.value();\n                    iterateKeys( _settings.fractions[ j ].steps, function ( k ) {\n                        var s = _settings.fractions[ j ].steps[ parseInt( k, 10 ) ].toLowerCase();\n                        var val = _perfCounters[ s ];\n                        if ( val ) {\n                            v.push( val.value() / base );\n                        }\n                    } );\n                }\n                f.graph.draw( v );\n            } );\n        }\n\n        /*if( _height != _div.clientHeight ) {\n            _height = _div.clientHeight;\n            _base.style.height = _height + 2 * _elHeight + 'px';\n        console.log( _base.clientHeight );\n        }*/\n\n    }\n\n    _init();\n\n    return function ( id ) {\n        if ( id ) return _perf( id );\n        return {\n            element: _base,\n            update: _update\n        };\n    };\n\n}\n\nif (typeof module === 'object') {\n  module.exports = window.rStats;\n}\n"]},"metadata":{},"sourceType":"script"}