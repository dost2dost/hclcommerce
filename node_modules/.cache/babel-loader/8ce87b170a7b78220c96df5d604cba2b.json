{"ast":null,"code":"var registerComponent = require('../../core/component').registerComponent;\n\nvar shouldCaptureKeyEvent = require('../../utils/').shouldCaptureKeyEvent;\n\nmodule.exports.Component = registerComponent('keyboard-shortcuts', {\n  schema: {\n    enterVR: {\n      default: true\n    },\n    exitVR: {\n      default: true\n    }\n  },\n  init: function () {\n    this.onKeyup = this.onKeyup.bind(this);\n  },\n  update: function (oldData) {\n    var data = this.data;\n    this.enterVREnabled = data.enterVR;\n  },\n  play: function () {\n    window.addEventListener('keyup', this.onKeyup, false);\n  },\n  pause: function () {\n    window.removeEventListener('keyup', this.onKeyup);\n  },\n  onKeyup: function (evt) {\n    var scene = this.el;\n\n    if (!shouldCaptureKeyEvent(evt)) {\n      return;\n    }\n\n    if (this.enterVREnabled && evt.keyCode === 70) {\n      // f.\n      scene.enterVR();\n    }\n\n    if (this.enterVREnabled && evt.keyCode === 27) {\n      // escape.\n      scene.exitVR();\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/components/scene/keyboard-shortcuts.js"],"names":["registerComponent","require","shouldCaptureKeyEvent","module","exports","Component","schema","enterVR","default","exitVR","init","onKeyup","bind","update","oldData","data","enterVREnabled","play","window","addEventListener","pause","removeEventListener","evt","scene","el","keyCode"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,sBAAD,CAAP,CAAgCD,iBAAxD;;AACA,IAAIE,qBAAqB,GAAGD,OAAO,CAAC,cAAD,CAAP,CAAwBC,qBAApD;;AAEAC,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2BL,iBAAiB,CAAC,oBAAD,EAAuB;AACjEM,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KADH;AAENC,IAAAA,MAAM,EAAE;AAACD,MAAAA,OAAO,EAAE;AAAV;AAFF,GADyD;AAMjEE,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD,GARgE;AAUjEC,EAAAA,MAAM,EAAE,UAAUC,OAAV,EAAmB;AACzB,QAAIC,IAAI,GAAG,KAAKA,IAAhB;AACA,SAAKC,cAAL,GAAsBD,IAAI,CAACR,OAA3B;AACD,GAbgE;AAejEU,EAAAA,IAAI,EAAE,YAAY;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKR,OAAtC,EAA+C,KAA/C;AACD,GAjBgE;AAmBjES,EAAAA,KAAK,EAAE,YAAY;AACjBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoC,KAAKV,OAAzC;AACD,GArBgE;AAuBjEA,EAAAA,OAAO,EAAE,UAAUW,GAAV,EAAe;AACtB,QAAIC,KAAK,GAAG,KAAKC,EAAjB;;AACA,QAAI,CAACtB,qBAAqB,CAACoB,GAAD,CAA1B,EAAiC;AAAE;AAAS;;AAC5C,QAAI,KAAKN,cAAL,IAAuBM,GAAG,CAACG,OAAJ,KAAgB,EAA3C,EAA+C;AAAG;AAChDF,MAAAA,KAAK,CAAChB,OAAN;AACD;;AACD,QAAI,KAAKS,cAAL,IAAuBM,GAAG,CAACG,OAAJ,KAAgB,EAA3C,EAA+C;AAAG;AAChDF,MAAAA,KAAK,CAACd,MAAN;AACD;AACF;AAhCgE,CAAvB,CAA5C","sourcesContent":["var registerComponent = require('../../core/component').registerComponent;\nvar shouldCaptureKeyEvent = require('../../utils/').shouldCaptureKeyEvent;\n\nmodule.exports.Component = registerComponent('keyboard-shortcuts', {\n  schema: {\n    enterVR: {default: true},\n    exitVR: {default: true}\n  },\n\n  init: function () {\n    this.onKeyup = this.onKeyup.bind(this);\n  },\n\n  update: function (oldData) {\n    var data = this.data;\n    this.enterVREnabled = data.enterVR;\n  },\n\n  play: function () {\n    window.addEventListener('keyup', this.onKeyup, false);\n  },\n\n  pause: function () {\n    window.removeEventListener('keyup', this.onKeyup);\n  },\n\n  onKeyup: function (evt) {\n    var scene = this.el;\n    if (!shouldCaptureKeyEvent(evt)) { return; }\n    if (this.enterVREnabled && evt.keyCode === 70) {  // f.\n      scene.enterVR();\n    }\n    if (this.enterVREnabled && evt.keyCode === 27) {  // escape.\n      scene.exitVR();\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"script"}