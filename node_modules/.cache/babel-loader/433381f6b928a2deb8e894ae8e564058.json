{"ast":null,"code":"/* global THREE */\nvar debug = require('./debug');\n\nvar extend = require('object-assign');\n\nvar warn = debug('utils:coordinates:warn'); // Order of coordinates parsed by coordinates.parse.\n\nvar COORDINATE_KEYS = ['x', 'y', 'z', 'w']; // Coordinate string regex. Handles negative, positive, and decimals.\n\nvar regex = /^\\s*((-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s+){2,3}(-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s*$/;\nmodule.exports.regex = regex;\nvar OBJECT = 'object';\nvar whitespaceRegex = /\\s+/g;\n/**\n * Parses coordinates from an \"x y z\" string.\n * Example: \"3 10 -5\" to {x: 3, y: 10, z: -5}.\n *\n * @param {string} val - An \"x y z\" string.\n * @param {string} defaults - fallback value.\n * @returns {object} An object with keys [x, y, z].\n */\n\nfunction parse(value, defaultVec) {\n  var coordinate;\n  var defaultVal;\n  var key;\n  var i;\n  var vec;\n  var x;\n  var y;\n  var z;\n  var w;\n\n  if (value && value instanceof Object) {\n    x = value.x === undefined ? defaultVec && defaultVec.x : value.x;\n    y = value.y === undefined ? defaultVec && defaultVec.y : value.y;\n    z = value.z === undefined ? defaultVec && defaultVec.z : value.z;\n    w = value.w === undefined ? defaultVec && defaultVec.w : value.w;\n\n    if (x !== undefined && x !== null) {\n      value.x = parseIfString(x);\n    }\n\n    if (y !== undefined && y !== null) {\n      value.y = parseIfString(y);\n    }\n\n    if (z !== undefined && z !== null) {\n      value.z = parseIfString(z);\n    }\n\n    if (w !== undefined && w !== null) {\n      value.w = parseIfString(w);\n    }\n\n    return value;\n  }\n\n  if (value === null || value === undefined) {\n    return typeof defaultVec === OBJECT ? extend({}, defaultVec) : defaultVec;\n  }\n\n  coordinate = value.trim().split(whitespaceRegex);\n  vec = {};\n\n  for (i = 0; i < COORDINATE_KEYS.length; i++) {\n    key = COORDINATE_KEYS[i];\n\n    if (coordinate[i]) {\n      vec[key] = parseFloat(coordinate[i], 10);\n    } else {\n      defaultVal = defaultVec && defaultVec[key];\n\n      if (defaultVal === undefined) {\n        continue;\n      }\n\n      vec[key] = parseIfString(defaultVal);\n    }\n  }\n\n  return vec;\n}\n\nmodule.exports.parse = parse;\n/**\n * Stringify coordinates from an object with keys [x y z].\n * Example: {x: 3, y: 10, z: -5} to \"3 10 -5\".\n *\n * @param {object|string} data - An object with keys [x y z].\n * @returns {string} An \"x y z\" string.\n */\n\nfunction stringify(data) {\n  var str;\n\n  if (typeof data !== OBJECT) {\n    return data;\n  }\n\n  str = data.x + ' ' + data.y;\n\n  if (data.z != null) {\n    str += ' ' + data.z;\n  }\n\n  if (data.w != null) {\n    str += ' ' + data.w;\n  }\n\n  return str;\n}\n\nmodule.exports.stringify = stringify;\n/**\n * @returns {bool}\n */\n\nfunction isCoordinates(value) {\n  return regex.test(value);\n}\n\nmodule.exports.isCoordinates = isCoordinates;\n\nmodule.exports.isCoordinate = function (value) {\n  warn('`AFRAME.utils.isCoordinate` has been renamed to `AFRAME.utils.isCoordinates`');\n  return isCoordinates(value);\n};\n\nfunction parseIfString(val) {\n  if (val !== null && val !== undefined && val.constructor === String) {\n    return parseFloat(val, 10);\n  }\n\n  return val;\n}\n/**\n * Convert {x, y, z} object to three.js Vector3.\n */\n\n\nmodule.exports.toVector3 = function (vec3) {\n  return new THREE.Vector3(vec3.x, vec3.y, vec3.z);\n};","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/utils/coordinates.js"],"names":["debug","require","extend","warn","COORDINATE_KEYS","regex","module","exports","OBJECT","whitespaceRegex","parse","value","defaultVec","coordinate","defaultVal","key","i","vec","x","y","z","w","Object","undefined","parseIfString","trim","split","length","parseFloat","stringify","data","str","isCoordinates","test","isCoordinate","val","constructor","String","toVector3","vec3","THREE","Vector3"],"mappings":"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","sourcesContent":["/* global THREE */\nvar debug = require('./debug');\nvar extend = require('object-assign');\n\nvar warn = debug('utils:coordinates:warn');\n\n// Order of coordinates parsed by coordinates.parse.\nvar COORDINATE_KEYS = ['x', 'y', 'z', 'w'];\n\n// Coordinate string regex. Handles negative, positive, and decimals.\nvar regex = /^\\s*((-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s+){2,3}(-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s*$/;\nmodule.exports.regex = regex;\n\nvar OBJECT = 'object';\nvar whitespaceRegex = /\\s+/g;\n\n/**\n * Parses coordinates from an \"x y z\" string.\n * Example: \"3 10 -5\" to {x: 3, y: 10, z: -5}.\n *\n * @param {string} val - An \"x y z\" string.\n * @param {string} defaults - fallback value.\n * @returns {object} An object with keys [x, y, z].\n */\nfunction parse (value, defaultVec) {\n  var coordinate;\n  var defaultVal;\n  var key;\n  var i;\n  var vec;\n  var x;\n  var y;\n  var z;\n  var w;\n\n  if (value && value instanceof Object) {\n    x = value.x === undefined ? defaultVec && defaultVec.x : value.x;\n    y = value.y === undefined ? defaultVec && defaultVec.y : value.y;\n    z = value.z === undefined ? defaultVec && defaultVec.z : value.z;\n    w = value.w === undefined ? defaultVec && defaultVec.w : value.w;\n    if (x !== undefined && x !== null) { value.x = parseIfString(x); }\n    if (y !== undefined && y !== null) { value.y = parseIfString(y); }\n    if (z !== undefined && z !== null) { value.z = parseIfString(z); }\n    if (w !== undefined && w !== null) { value.w = parseIfString(w); }\n    return value;\n  }\n\n  if (value === null || value === undefined) {\n    return typeof defaultVec === OBJECT ? extend({}, defaultVec) : defaultVec;\n  }\n\n  coordinate = value.trim().split(whitespaceRegex);\n  vec = {};\n  for (i = 0; i < COORDINATE_KEYS.length; i++) {\n    key = COORDINATE_KEYS[i];\n    if (coordinate[i]) {\n      vec[key] = parseFloat(coordinate[i], 10);\n    } else {\n      defaultVal = defaultVec && defaultVec[key];\n      if (defaultVal === undefined) { continue; }\n      vec[key] = parseIfString(defaultVal);\n    }\n  }\n  return vec;\n}\nmodule.exports.parse = parse;\n\n/**\n * Stringify coordinates from an object with keys [x y z].\n * Example: {x: 3, y: 10, z: -5} to \"3 10 -5\".\n *\n * @param {object|string} data - An object with keys [x y z].\n * @returns {string} An \"x y z\" string.\n */\nfunction stringify (data) {\n  var str;\n  if (typeof data !== OBJECT) { return data; }\n  str = data.x + ' ' + data.y;\n  if (data.z != null) { str += ' ' + data.z; }\n  if (data.w != null) { str += ' ' + data.w; }\n  return str;\n}\nmodule.exports.stringify = stringify;\n\n/**\n * @returns {bool}\n */\nfunction isCoordinates (value) {\n  return regex.test(value);\n}\nmodule.exports.isCoordinates = isCoordinates;\n\nmodule.exports.isCoordinate = function (value) {\n  warn('`AFRAME.utils.isCoordinate` has been renamed to `AFRAME.utils.isCoordinates`');\n  return isCoordinates(value);\n};\n\nfunction parseIfString (val) {\n  if (val !== null && val !== undefined && val.constructor === String) {\n    return parseFloat(val, 10);\n  }\n  return val;\n}\n\n/**\n * Convert {x, y, z} object to three.js Vector3.\n */\nmodule.exports.toVector3 = function (vec3) {\n  return new THREE.Vector3(vec3.x, vec3.y, vec3.z);\n};\n"]},"metadata":{},"sourceType":"script"}