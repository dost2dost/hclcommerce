{"ast":null,"code":"var constants = require('../constants/');\n\nvar registerSystem = require('../core/system').registerSystem;\n\nvar DEFAULT_CAMERA_ATTR = 'data-aframe-default-camera';\n/**\n * Camera system. Manages which camera is active among multiple cameras in scene.\n *\n * @member {object} activeCameraEl - Active camera entity.\n */\n\nmodule.exports.System = registerSystem('camera', {\n  init: function () {\n    this.activeCameraEl = null;\n    this.render = this.render.bind(this);\n    this.unwrapRender = this.unwrapRender.bind(this);\n    this.wrapRender = this.wrapRender.bind(this);\n    this.initialCameraFound = false;\n    this.numUserCameras = 0;\n    this.numUserCamerasChecked = 0;\n    this.setupInitialCamera();\n  },\n\n  /**\n   * Setup initial camera, either searching for camera or\n   * creating a default camera if user has not added one during the initial scene traversal.\n   * We want sceneEl.camera to be ready, set, and initialized before the rest of the scene\n   * loads.\n   *\n   * Default camera offset height is at average eye level (~1.6m).\n   */\n  setupInitialCamera: function () {\n    var cameraEls;\n    var i;\n    var sceneEl = this.sceneEl;\n    var self = this; // Camera already defined or the one defined it is an spectator one.\n\n    if (sceneEl.camera && !sceneEl.camera.el.getAttribute('camera').spectator) {\n      sceneEl.emit('cameraready', {\n        cameraEl: sceneEl.camera.el\n      });\n      return;\n    } // Search for initial user-defined camera.\n\n\n    cameraEls = sceneEl.querySelectorAll('a-camera, [camera]'); // No user cameras, create default one.\n\n    if (!cameraEls.length) {\n      this.createDefaultCamera();\n      return;\n    }\n\n    this.numUserCameras = cameraEls.length;\n\n    for (i = 0; i < cameraEls.length; i++) {\n      cameraEls[i].addEventListener('object3dset', function (evt) {\n        if (evt.detail.type !== 'camera') {\n          return;\n        }\n\n        self.checkUserCamera(this);\n      }); // Load camera and wait for camera to initialize.\n\n      if (cameraEls[i].isNode) {\n        cameraEls[i].load();\n      } else {\n        cameraEls[i].addEventListener('nodeready', function () {\n          this.load();\n        });\n      }\n    }\n  },\n\n  /**\n   * Check if a user-defined camera entity is appropriate to be initial camera.\n   * (active + non-spectator).\n   *\n   * Keep track of the number of cameras we checked and whether we found one.\n   */\n  checkUserCamera: function (cameraEl) {\n    var cameraData;\n    var sceneEl = this.el.sceneEl;\n    this.numUserCamerasChecked++; // Already found one.\n\n    if (this.initialCameraFound) {\n      return;\n    } // Check if camera is appropriate for being the initial camera.\n\n\n    cameraData = cameraEl.getAttribute('camera');\n\n    if (!cameraData.active || cameraData.spectator) {\n      // No user cameras eligible, create default camera.\n      if (this.numUserCamerasChecked === this.numUserCameras) {\n        this.createDefaultCamera();\n      }\n\n      return;\n    }\n\n    this.initialCameraFound = true;\n    sceneEl.camera = cameraEl.getObject3D('camera');\n    sceneEl.emit('cameraready', {\n      cameraEl: cameraEl\n    });\n  },\n  createDefaultCamera: function () {\n    var defaultCameraEl;\n    var sceneEl = this.sceneEl; // Set up default camera.\n\n    defaultCameraEl = document.createElement('a-entity');\n    defaultCameraEl.setAttribute('camera', {\n      active: true\n    });\n    defaultCameraEl.setAttribute('position', {\n      x: 0,\n      y: constants.DEFAULT_CAMERA_HEIGHT,\n      z: 0\n    });\n    defaultCameraEl.setAttribute('wasd-controls', '');\n    defaultCameraEl.setAttribute('look-controls', '');\n    defaultCameraEl.setAttribute(constants.AFRAME_INJECTED, '');\n    defaultCameraEl.addEventListener('object3dset', function (evt) {\n      if (evt.detail.type !== 'camera') {\n        return;\n      }\n\n      sceneEl.camera = evt.detail.object;\n      sceneEl.emit('cameraready', {\n        cameraEl: defaultCameraEl\n      });\n    });\n    sceneEl.appendChild(defaultCameraEl);\n  },\n\n  /**\n   * Set a different active camera.\n   * When we choose a (sort of) random scene camera as the replacement, set its `active` to\n   * true. The camera component will call `setActiveCamera` and handle passing the torch to\n   * the new camera.\n   */\n  disableActiveCamera: function () {\n    var cameraEls;\n    var newActiveCameraEl;\n    cameraEls = this.sceneEl.querySelectorAll('[camera]');\n    newActiveCameraEl = cameraEls[cameraEls.length - 1];\n    newActiveCameraEl.setAttribute('camera', 'active', true);\n  },\n\n  /**\n   * Set active camera to be used by renderer.\n   * Removes the default camera (if present).\n   * Disables all other cameras in the scene.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */\n  setActiveCamera: function (newCameraEl) {\n    var cameraEl;\n    var cameraEls;\n    var i;\n    var newCamera;\n    var previousCamera = this.activeCameraEl;\n    var sceneEl = this.sceneEl; // Same camera.\n\n    newCamera = newCameraEl.getObject3D('camera');\n\n    if (!newCamera || newCameraEl === this.activeCameraEl) {\n      return;\n    } // Grab the default camera.\n\n\n    var defaultCameraWrapper = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']');\n    var defaultCameraEl = defaultCameraWrapper && defaultCameraWrapper.querySelector('[camera]'); // Remove default camera if new camera is not the default camera.\n\n    if (newCameraEl !== defaultCameraEl) {\n      removeDefaultCamera(sceneEl);\n    } // Make new camera active.\n\n\n    this.activeCameraEl = newCameraEl;\n    this.activeCameraEl.play();\n    sceneEl.camera = newCamera; // Disable current camera\n\n    if (previousCamera) {\n      previousCamera.setAttribute('camera', 'active', false);\n    } // Disable other cameras in the scene\n\n\n    cameraEls = sceneEl.querySelectorAll('[camera]');\n\n    for (i = 0; i < cameraEls.length; i++) {\n      cameraEl = cameraEls[i];\n\n      if (!cameraEl.isEntity || newCameraEl === cameraEl) {\n        continue;\n      }\n\n      cameraEl.setAttribute('camera', 'active', false);\n      cameraEl.pause();\n    }\n\n    sceneEl.emit('camera-set-active', {\n      cameraEl: newCameraEl\n    });\n  },\n\n  /**\n   * Set spectator camera to render the scene on a 2D display.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */\n  setSpectatorCamera: function (newCameraEl) {\n    var newCamera;\n    var previousCamera = this.spectatorCameraEl;\n    var sceneEl = this.sceneEl;\n    var spectatorCameraEl; // Same camera.\n\n    newCamera = newCameraEl.getObject3D('camera');\n\n    if (!newCamera || newCameraEl === this.spectatorCameraEl) {\n      return;\n    } // Disable current camera\n\n\n    if (previousCamera) {\n      previousCamera.setAttribute('camera', 'spectator', false);\n    }\n\n    spectatorCameraEl = this.spectatorCameraEl = newCameraEl;\n    sceneEl.addEventListener('enter-vr', this.wrapRender);\n    sceneEl.addEventListener('exit-vr', this.unwrapRender);\n    spectatorCameraEl.setAttribute('camera', 'active', false);\n    spectatorCameraEl.play();\n    sceneEl.emit('camera-set-spectator', {\n      cameraEl: newCameraEl\n    });\n  },\n\n  /**\n   * Disables current spectator camera.\n   */\n  disableSpectatorCamera: function () {\n    this.spectatorCameraEl = undefined;\n  },\n\n  /**\n   * Wrap the render method of the renderer to render\n   * the spectator camera after vrDisplay.submitFrame.\n   */\n  wrapRender: function () {\n    if (!this.spectatorCameraEl) {\n      return;\n    }\n\n    this.originalRender = this.sceneEl.renderer.render;\n    this.sceneEl.renderer.render = this.render;\n  },\n  unwrapRender: function () {\n    if (!this.originalRender) {\n      return;\n    }\n\n    this.sceneEl.renderer.render = this.originalRender;\n    this.originalRender = undefined;\n  },\n  render: function (scene, camera) {\n    var isVREnabled;\n    var sceneEl = this.sceneEl;\n    var spectatorCamera;\n    isVREnabled = sceneEl.renderer.xr.enabled;\n    this.originalRender.call(sceneEl.renderer, scene, camera);\n\n    if (!this.spectatorCameraEl || sceneEl.isMobile || !isVREnabled) {\n      return;\n    }\n\n    spectatorCamera = this.spectatorCameraEl.components.camera.camera;\n    sceneEl.renderer.xr.enabled = false;\n    this.originalRender.call(sceneEl.renderer, scene, spectatorCamera);\n    sceneEl.renderer.xr.enabled = isVREnabled;\n  }\n});\n/**\n * Remove injected default camera from scene, if present.\n *\n * @param {Element} sceneEl\n */\n\nfunction removeDefaultCamera(sceneEl) {\n  var defaultCamera;\n  var camera = sceneEl.camera;\n\n  if (!camera) {\n    return;\n  } // Remove default camera if present.\n\n\n  defaultCamera = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']');\n\n  if (!defaultCamera) {\n    return;\n  }\n\n  sceneEl.removeChild(defaultCamera);\n}","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/systems/camera.js"],"names":["constants","require","registerSystem","DEFAULT_CAMERA_ATTR","module","exports","System","init","activeCameraEl","render","bind","unwrapRender","wrapRender","initialCameraFound","numUserCameras","numUserCamerasChecked","setupInitialCamera","cameraEls","i","sceneEl","self","camera","el","getAttribute","spectator","emit","cameraEl","querySelectorAll","length","createDefaultCamera","addEventListener","evt","detail","type","checkUserCamera","isNode","load","cameraData","active","getObject3D","defaultCameraEl","document","createElement","setAttribute","x","y","DEFAULT_CAMERA_HEIGHT","z","AFRAME_INJECTED","object","appendChild","disableActiveCamera","newActiveCameraEl","setActiveCamera","newCameraEl","newCamera","previousCamera","defaultCameraWrapper","querySelector","removeDefaultCamera","play","isEntity","pause","setSpectatorCamera","spectatorCameraEl","disableSpectatorCamera","undefined","originalRender","renderer","scene","isVREnabled","spectatorCamera","xr","enabled","call","isMobile","components","defaultCamera","removeChild"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BC,cAA/C;;AAEA,IAAIC,mBAAmB,GAAG,4BAA1B;AAEA;;;;;;AAKAC,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBJ,cAAc,CAAC,QAAD,EAAW;AAC/CK,EAAAA,IAAI,EAAE,YAAY;AAChB,SAAKC,cAAL,GAAsB,IAAtB;AAEA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKG,kBAAL,GAA0B,KAA1B;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,qBAAL,GAA6B,CAA7B;AACA,SAAKC,kBAAL;AACD,GAZ8C;;AAc/C;;;;;;;;AAQAA,EAAAA,kBAAkB,EAAE,YAAY;AAC9B,QAAIC,SAAJ;AACA,QAAIC,CAAJ;AACA,QAAIC,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIC,IAAI,GAAG,IAAX,CAJ8B,CAM9B;;AACA,QAAID,OAAO,CAACE,MAAR,IAAkB,CAACF,OAAO,CAACE,MAAR,CAAeC,EAAf,CAAkBC,YAAlB,CAA+B,QAA/B,EAAyCC,SAAhE,EAA2E;AACzEL,MAAAA,OAAO,CAACM,IAAR,CAAa,aAAb,EAA4B;AAACC,QAAAA,QAAQ,EAAEP,OAAO,CAACE,MAAR,CAAeC;AAA1B,OAA5B;AACA;AACD,KAV6B,CAY9B;;;AACAL,IAAAA,SAAS,GAAGE,OAAO,CAACQ,gBAAR,CAAyB,oBAAzB,CAAZ,CAb8B,CAe9B;;AACA,QAAI,CAACV,SAAS,CAACW,MAAf,EAAuB;AACrB,WAAKC,mBAAL;AACA;AACD;;AAED,SAAKf,cAAL,GAAsBG,SAAS,CAACW,MAAhC;;AACA,SAAKV,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,SAAS,CAACW,MAA1B,EAAkCV,CAAC,EAAnC,EAAuC;AACrCD,MAAAA,SAAS,CAACC,CAAD,CAAT,CAAaY,gBAAb,CAA8B,aAA9B,EAA6C,UAAUC,GAAV,EAAe;AAC1D,YAAIA,GAAG,CAACC,MAAJ,CAAWC,IAAX,KAAoB,QAAxB,EAAkC;AAAE;AAAS;;AAC7Cb,QAAAA,IAAI,CAACc,eAAL,CAAqB,IAArB;AACD,OAHD,EADqC,CAMrC;;AACA,UAAIjB,SAAS,CAACC,CAAD,CAAT,CAAaiB,MAAjB,EAAyB;AACvBlB,QAAAA,SAAS,CAACC,CAAD,CAAT,CAAakB,IAAb;AACD,OAFD,MAEO;AACLnB,QAAAA,SAAS,CAACC,CAAD,CAAT,CAAaY,gBAAb,CAA8B,WAA9B,EAA2C,YAAY;AACrD,eAAKM,IAAL;AACD,SAFD;AAGD;AACF;AACF,GA3D8C;;AA6D/C;;;;;;AAMAF,EAAAA,eAAe,EAAE,UAAUR,QAAV,EAAoB;AACnC,QAAIW,UAAJ;AACA,QAAIlB,OAAO,GAAG,KAAKG,EAAL,CAAQH,OAAtB;AACA,SAAKJ,qBAAL,GAHmC,CAKnC;;AACA,QAAI,KAAKF,kBAAT,EAA6B;AAAE;AAAS,KANL,CAQnC;;;AACAwB,IAAAA,UAAU,GAAGX,QAAQ,CAACH,YAAT,CAAsB,QAAtB,CAAb;;AACA,QAAI,CAACc,UAAU,CAACC,MAAZ,IAAsBD,UAAU,CAACb,SAArC,EAAgD;AAC9C;AACA,UAAI,KAAKT,qBAAL,KAA+B,KAAKD,cAAxC,EAAwD;AACtD,aAAKe,mBAAL;AACD;;AACD;AACD;;AAED,SAAKhB,kBAAL,GAA0B,IAA1B;AACAM,IAAAA,OAAO,CAACE,MAAR,GAAiBK,QAAQ,CAACa,WAAT,CAAqB,QAArB,CAAjB;AACApB,IAAAA,OAAO,CAACM,IAAR,CAAa,aAAb,EAA4B;AAACC,MAAAA,QAAQ,EAAEA;AAAX,KAA5B;AACD,GAxF8C;AA0F/CG,EAAAA,mBAAmB,EAAE,YAAY;AAC/B,QAAIW,eAAJ;AACA,QAAIrB,OAAO,GAAG,KAAKA,OAAnB,CAF+B,CAI/B;;AACAqB,IAAAA,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,IAAAA,eAAe,CAACG,YAAhB,CAA6B,QAA7B,EAAuC;AAACL,MAAAA,MAAM,EAAE;AAAT,KAAvC;AACAE,IAAAA,eAAe,CAACG,YAAhB,CAA6B,UAA7B,EAAyC;AACvCC,MAAAA,CAAC,EAAE,CADoC;AAEvCC,MAAAA,CAAC,EAAE7C,SAAS,CAAC8C,qBAF0B;AAGvCC,MAAAA,CAAC,EAAE;AAHoC,KAAzC;AAKAP,IAAAA,eAAe,CAACG,YAAhB,CAA6B,eAA7B,EAA8C,EAA9C;AACAH,IAAAA,eAAe,CAACG,YAAhB,CAA6B,eAA7B,EAA8C,EAA9C;AACAH,IAAAA,eAAe,CAACG,YAAhB,CAA6B3C,SAAS,CAACgD,eAAvC,EAAwD,EAAxD;AAEAR,IAAAA,eAAe,CAACV,gBAAhB,CAAiC,aAAjC,EAAgD,UAAUC,GAAV,EAAe;AAC7D,UAAIA,GAAG,CAACC,MAAJ,CAAWC,IAAX,KAAoB,QAAxB,EAAkC;AAAE;AAAS;;AAC7Cd,MAAAA,OAAO,CAACE,MAAR,GAAiBU,GAAG,CAACC,MAAJ,CAAWiB,MAA5B;AACA9B,MAAAA,OAAO,CAACM,IAAR,CAAa,aAAb,EAA4B;AAACC,QAAAA,QAAQ,EAAEc;AAAX,OAA5B;AACD,KAJD;AAMArB,IAAAA,OAAO,CAAC+B,WAAR,CAAoBV,eAApB;AACD,GAjH8C;;AAmH/C;;;;;;AAMAW,EAAAA,mBAAmB,EAAE,YAAY;AAC/B,QAAIlC,SAAJ;AACA,QAAImC,iBAAJ;AACAnC,IAAAA,SAAS,GAAG,KAAKE,OAAL,CAAaQ,gBAAb,CAA8B,UAA9B,CAAZ;AACAyB,IAAAA,iBAAiB,GAAGnC,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAA7B;AACAwB,IAAAA,iBAAiB,CAACT,YAAlB,CAA+B,QAA/B,EAAyC,QAAzC,EAAmD,IAAnD;AACD,GA/H8C;;AAiI/C;;;;;;;AAOAU,EAAAA,eAAe,EAAE,UAAUC,WAAV,EAAuB;AACtC,QAAI5B,QAAJ;AACA,QAAIT,SAAJ;AACA,QAAIC,CAAJ;AACA,QAAIqC,SAAJ;AACA,QAAIC,cAAc,GAAG,KAAKhD,cAA1B;AACA,QAAIW,OAAO,GAAG,KAAKA,OAAnB,CANsC,CAQtC;;AACAoC,IAAAA,SAAS,GAAGD,WAAW,CAACf,WAAZ,CAAwB,QAAxB,CAAZ;;AACA,QAAI,CAACgB,SAAD,IAAcD,WAAW,KAAK,KAAK9C,cAAvC,EAAuD;AAAE;AAAS,KAV5B,CAYtC;;;AACA,QAAIiD,oBAAoB,GAAGtC,OAAO,CAACuC,aAAR,CAAsB,MAAMvD,mBAAN,GAA4B,GAAlD,CAA3B;AACA,QAAIqC,eAAe,GAAGiB,oBAAoB,IACpBA,oBAAoB,CAACC,aAArB,CAAmC,UAAnC,CADtB,CAdsC,CAiBtC;;AACA,QAAIJ,WAAW,KAAKd,eAApB,EAAqC;AAAEmB,MAAAA,mBAAmB,CAACxC,OAAD,CAAnB;AAA+B,KAlBhC,CAoBtC;;;AACA,SAAKX,cAAL,GAAsB8C,WAAtB;AACA,SAAK9C,cAAL,CAAoBoD,IAApB;AACAzC,IAAAA,OAAO,CAACE,MAAR,GAAiBkC,SAAjB,CAvBsC,CAyBtC;;AACA,QAAIC,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACb,YAAf,CAA4B,QAA5B,EAAsC,QAAtC,EAAgD,KAAhD;AACD,KA5BqC,CA8BtC;;;AACA1B,IAAAA,SAAS,GAAGE,OAAO,CAACQ,gBAAR,CAAyB,UAAzB,CAAZ;;AACA,SAAKT,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,SAAS,CAACW,MAA1B,EAAkCV,CAAC,EAAnC,EAAuC;AACrCQ,MAAAA,QAAQ,GAAGT,SAAS,CAACC,CAAD,CAApB;;AACA,UAAI,CAACQ,QAAQ,CAACmC,QAAV,IAAsBP,WAAW,KAAK5B,QAA1C,EAAoD;AAAE;AAAW;;AACjEA,MAAAA,QAAQ,CAACiB,YAAT,CAAsB,QAAtB,EAAgC,QAAhC,EAA0C,KAA1C;AACAjB,MAAAA,QAAQ,CAACoC,KAAT;AACD;;AACD3C,IAAAA,OAAO,CAACM,IAAR,CAAa,mBAAb,EAAkC;AAACC,MAAAA,QAAQ,EAAE4B;AAAX,KAAlC;AACD,GA/K8C;;AAiL/C;;;;;AAKAS,EAAAA,kBAAkB,EAAE,UAAUT,WAAV,EAAuB;AACzC,QAAIC,SAAJ;AACA,QAAIC,cAAc,GAAG,KAAKQ,iBAA1B;AACA,QAAI7C,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAI6C,iBAAJ,CAJyC,CAMzC;;AACAT,IAAAA,SAAS,GAAGD,WAAW,CAACf,WAAZ,CAAwB,QAAxB,CAAZ;;AACA,QAAI,CAACgB,SAAD,IAAcD,WAAW,KAAK,KAAKU,iBAAvC,EAA0D;AAAE;AAAS,KAR5B,CAUzC;;;AACA,QAAIR,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACb,YAAf,CAA4B,QAA5B,EAAsC,WAAtC,EAAmD,KAAnD;AACD;;AAEDqB,IAAAA,iBAAiB,GAAG,KAAKA,iBAAL,GAAyBV,WAA7C;AAEAnC,IAAAA,OAAO,CAACW,gBAAR,CAAyB,UAAzB,EAAqC,KAAKlB,UAA1C;AACAO,IAAAA,OAAO,CAACW,gBAAR,CAAyB,SAAzB,EAAoC,KAAKnB,YAAzC;AAEAqD,IAAAA,iBAAiB,CAACrB,YAAlB,CAA+B,QAA/B,EAAyC,QAAzC,EAAmD,KAAnD;AACAqB,IAAAA,iBAAiB,CAACJ,IAAlB;AAEAzC,IAAAA,OAAO,CAACM,IAAR,CAAa,sBAAb,EAAqC;AAACC,MAAAA,QAAQ,EAAE4B;AAAX,KAArC;AACD,GA9M8C;;AAgN/C;;;AAGAW,EAAAA,sBAAsB,EAAE,YAAY;AAClC,SAAKD,iBAAL,GAAyBE,SAAzB;AACD,GArN8C;;AAuN/C;;;;AAIAtD,EAAAA,UAAU,EAAE,YAAY;AACtB,QAAI,CAAC,KAAKoD,iBAAV,EAA6B;AAAE;AAAS;;AACxC,SAAKG,cAAL,GAAsB,KAAKhD,OAAL,CAAaiD,QAAb,CAAsB3D,MAA5C;AACA,SAAKU,OAAL,CAAaiD,QAAb,CAAsB3D,MAAtB,GAA+B,KAAKA,MAApC;AACD,GA/N8C;AAiO/CE,EAAAA,YAAY,EAAE,YAAY;AACxB,QAAI,CAAC,KAAKwD,cAAV,EAA0B;AAAE;AAAS;;AACrC,SAAKhD,OAAL,CAAaiD,QAAb,CAAsB3D,MAAtB,GAA+B,KAAK0D,cAApC;AACA,SAAKA,cAAL,GAAsBD,SAAtB;AACD,GArO8C;AAuO/CzD,EAAAA,MAAM,EAAE,UAAU4D,KAAV,EAAiBhD,MAAjB,EAAyB;AAC/B,QAAIiD,WAAJ;AACA,QAAInD,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIoD,eAAJ;AAEAD,IAAAA,WAAW,GAAGnD,OAAO,CAACiD,QAAR,CAAiBI,EAAjB,CAAoBC,OAAlC;AACA,SAAKN,cAAL,CAAoBO,IAApB,CAAyBvD,OAAO,CAACiD,QAAjC,EAA2CC,KAA3C,EAAkDhD,MAAlD;;AACA,QAAI,CAAC,KAAK2C,iBAAN,IAA2B7C,OAAO,CAACwD,QAAnC,IAA+C,CAACL,WAApD,EAAiE;AAAE;AAAS;;AAC5EC,IAAAA,eAAe,GAAG,KAAKP,iBAAL,CAAuBY,UAAvB,CAAkCvD,MAAlC,CAAyCA,MAA3D;AACAF,IAAAA,OAAO,CAACiD,QAAR,CAAiBI,EAAjB,CAAoBC,OAApB,GAA8B,KAA9B;AACA,SAAKN,cAAL,CAAoBO,IAApB,CAAyBvD,OAAO,CAACiD,QAAjC,EAA2CC,KAA3C,EAAkDE,eAAlD;AACApD,IAAAA,OAAO,CAACiD,QAAR,CAAiBI,EAAjB,CAAoBC,OAApB,GAA8BH,WAA9B;AACD;AAnP8C,CAAX,CAAtC;AAsPA;;;;;;AAKA,SAASX,mBAAT,CAA8BxC,OAA9B,EAAuC;AACrC,MAAI0D,aAAJ;AACA,MAAIxD,MAAM,GAAGF,OAAO,CAACE,MAArB;;AACA,MAAI,CAACA,MAAL,EAAa;AAAE;AAAS,GAHa,CAKrC;;;AACAwD,EAAAA,aAAa,GAAG1D,OAAO,CAACuC,aAAR,CAAsB,MAAMvD,mBAAN,GAA4B,GAAlD,CAAhB;;AACA,MAAI,CAAC0E,aAAL,EAAoB;AAAE;AAAS;;AAC/B1D,EAAAA,OAAO,CAAC2D,WAAR,CAAoBD,aAApB;AACD","sourcesContent":["var constants = require('../constants/');\nvar registerSystem = require('../core/system').registerSystem;\n\nvar DEFAULT_CAMERA_ATTR = 'data-aframe-default-camera';\n\n/**\n * Camera system. Manages which camera is active among multiple cameras in scene.\n *\n * @member {object} activeCameraEl - Active camera entity.\n */\nmodule.exports.System = registerSystem('camera', {\n  init: function () {\n    this.activeCameraEl = null;\n\n    this.render = this.render.bind(this);\n    this.unwrapRender = this.unwrapRender.bind(this);\n    this.wrapRender = this.wrapRender.bind(this);\n\n    this.initialCameraFound = false;\n    this.numUserCameras = 0;\n    this.numUserCamerasChecked = 0;\n    this.setupInitialCamera();\n  },\n\n  /**\n   * Setup initial camera, either searching for camera or\n   * creating a default camera if user has not added one during the initial scene traversal.\n   * We want sceneEl.camera to be ready, set, and initialized before the rest of the scene\n   * loads.\n   *\n   * Default camera offset height is at average eye level (~1.6m).\n   */\n  setupInitialCamera: function () {\n    var cameraEls;\n    var i;\n    var sceneEl = this.sceneEl;\n    var self = this;\n\n    // Camera already defined or the one defined it is an spectator one.\n    if (sceneEl.camera && !sceneEl.camera.el.getAttribute('camera').spectator) {\n      sceneEl.emit('cameraready', {cameraEl: sceneEl.camera.el});\n      return;\n    }\n\n    // Search for initial user-defined camera.\n    cameraEls = sceneEl.querySelectorAll('a-camera, [camera]');\n\n    // No user cameras, create default one.\n    if (!cameraEls.length) {\n      this.createDefaultCamera();\n      return;\n    }\n\n    this.numUserCameras = cameraEls.length;\n    for (i = 0; i < cameraEls.length; i++) {\n      cameraEls[i].addEventListener('object3dset', function (evt) {\n        if (evt.detail.type !== 'camera') { return; }\n        self.checkUserCamera(this);\n      });\n\n      // Load camera and wait for camera to initialize.\n      if (cameraEls[i].isNode) {\n        cameraEls[i].load();\n      } else {\n        cameraEls[i].addEventListener('nodeready', function () {\n          this.load();\n        });\n      }\n    }\n  },\n\n  /**\n   * Check if a user-defined camera entity is appropriate to be initial camera.\n   * (active + non-spectator).\n   *\n   * Keep track of the number of cameras we checked and whether we found one.\n   */\n  checkUserCamera: function (cameraEl) {\n    var cameraData;\n    var sceneEl = this.el.sceneEl;\n    this.numUserCamerasChecked++;\n\n    // Already found one.\n    if (this.initialCameraFound) { return; }\n\n    // Check if camera is appropriate for being the initial camera.\n    cameraData = cameraEl.getAttribute('camera');\n    if (!cameraData.active || cameraData.spectator) {\n      // No user cameras eligible, create default camera.\n      if (this.numUserCamerasChecked === this.numUserCameras) {\n        this.createDefaultCamera();\n      }\n      return;\n    }\n\n    this.initialCameraFound = true;\n    sceneEl.camera = cameraEl.getObject3D('camera');\n    sceneEl.emit('cameraready', {cameraEl: cameraEl});\n  },\n\n  createDefaultCamera: function () {\n    var defaultCameraEl;\n    var sceneEl = this.sceneEl;\n\n    // Set up default camera.\n    defaultCameraEl = document.createElement('a-entity');\n    defaultCameraEl.setAttribute('camera', {active: true});\n    defaultCameraEl.setAttribute('position', {\n      x: 0,\n      y: constants.DEFAULT_CAMERA_HEIGHT,\n      z: 0\n    });\n    defaultCameraEl.setAttribute('wasd-controls', '');\n    defaultCameraEl.setAttribute('look-controls', '');\n    defaultCameraEl.setAttribute(constants.AFRAME_INJECTED, '');\n\n    defaultCameraEl.addEventListener('object3dset', function (evt) {\n      if (evt.detail.type !== 'camera') { return; }\n      sceneEl.camera = evt.detail.object;\n      sceneEl.emit('cameraready', {cameraEl: defaultCameraEl});\n    });\n\n    sceneEl.appendChild(defaultCameraEl);\n  },\n\n  /**\n   * Set a different active camera.\n   * When we choose a (sort of) random scene camera as the replacement, set its `active` to\n   * true. The camera component will call `setActiveCamera` and handle passing the torch to\n   * the new camera.\n   */\n  disableActiveCamera: function () {\n    var cameraEls;\n    var newActiveCameraEl;\n    cameraEls = this.sceneEl.querySelectorAll('[camera]');\n    newActiveCameraEl = cameraEls[cameraEls.length - 1];\n    newActiveCameraEl.setAttribute('camera', 'active', true);\n  },\n\n  /**\n   * Set active camera to be used by renderer.\n   * Removes the default camera (if present).\n   * Disables all other cameras in the scene.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */\n  setActiveCamera: function (newCameraEl) {\n    var cameraEl;\n    var cameraEls;\n    var i;\n    var newCamera;\n    var previousCamera = this.activeCameraEl;\n    var sceneEl = this.sceneEl;\n\n    // Same camera.\n    newCamera = newCameraEl.getObject3D('camera');\n    if (!newCamera || newCameraEl === this.activeCameraEl) { return; }\n\n    // Grab the default camera.\n    var defaultCameraWrapper = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']');\n    var defaultCameraEl = defaultCameraWrapper &&\n                          defaultCameraWrapper.querySelector('[camera]');\n\n    // Remove default camera if new camera is not the default camera.\n    if (newCameraEl !== defaultCameraEl) { removeDefaultCamera(sceneEl); }\n\n    // Make new camera active.\n    this.activeCameraEl = newCameraEl;\n    this.activeCameraEl.play();\n    sceneEl.camera = newCamera;\n\n    // Disable current camera\n    if (previousCamera) {\n      previousCamera.setAttribute('camera', 'active', false);\n    }\n\n    // Disable other cameras in the scene\n    cameraEls = sceneEl.querySelectorAll('[camera]');\n    for (i = 0; i < cameraEls.length; i++) {\n      cameraEl = cameraEls[i];\n      if (!cameraEl.isEntity || newCameraEl === cameraEl) { continue; }\n      cameraEl.setAttribute('camera', 'active', false);\n      cameraEl.pause();\n    }\n    sceneEl.emit('camera-set-active', {cameraEl: newCameraEl});\n  },\n\n  /**\n   * Set spectator camera to render the scene on a 2D display.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */\n  setSpectatorCamera: function (newCameraEl) {\n    var newCamera;\n    var previousCamera = this.spectatorCameraEl;\n    var sceneEl = this.sceneEl;\n    var spectatorCameraEl;\n\n    // Same camera.\n    newCamera = newCameraEl.getObject3D('camera');\n    if (!newCamera || newCameraEl === this.spectatorCameraEl) { return; }\n\n    // Disable current camera\n    if (previousCamera) {\n      previousCamera.setAttribute('camera', 'spectator', false);\n    }\n\n    spectatorCameraEl = this.spectatorCameraEl = newCameraEl;\n\n    sceneEl.addEventListener('enter-vr', this.wrapRender);\n    sceneEl.addEventListener('exit-vr', this.unwrapRender);\n\n    spectatorCameraEl.setAttribute('camera', 'active', false);\n    spectatorCameraEl.play();\n\n    sceneEl.emit('camera-set-spectator', {cameraEl: newCameraEl});\n  },\n\n  /**\n   * Disables current spectator camera.\n   */\n  disableSpectatorCamera: function () {\n    this.spectatorCameraEl = undefined;\n  },\n\n  /**\n   * Wrap the render method of the renderer to render\n   * the spectator camera after vrDisplay.submitFrame.\n   */\n  wrapRender: function () {\n    if (!this.spectatorCameraEl) { return; }\n    this.originalRender = this.sceneEl.renderer.render;\n    this.sceneEl.renderer.render = this.render;\n  },\n\n  unwrapRender: function () {\n    if (!this.originalRender) { return; }\n    this.sceneEl.renderer.render = this.originalRender;\n    this.originalRender = undefined;\n  },\n\n  render: function (scene, camera) {\n    var isVREnabled;\n    var sceneEl = this.sceneEl;\n    var spectatorCamera;\n\n    isVREnabled = sceneEl.renderer.xr.enabled;\n    this.originalRender.call(sceneEl.renderer, scene, camera);\n    if (!this.spectatorCameraEl || sceneEl.isMobile || !isVREnabled) { return; }\n    spectatorCamera = this.spectatorCameraEl.components.camera.camera;\n    sceneEl.renderer.xr.enabled = false;\n    this.originalRender.call(sceneEl.renderer, scene, spectatorCamera);\n    sceneEl.renderer.xr.enabled = isVREnabled;\n  }\n});\n\n/**\n * Remove injected default camera from scene, if present.\n *\n * @param {Element} sceneEl\n */\nfunction removeDefaultCamera (sceneEl) {\n  var defaultCamera;\n  var camera = sceneEl.camera;\n  if (!camera) { return; }\n\n  // Remove default camera if present.\n  defaultCamera = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']');\n  if (!defaultCamera) { return; }\n  sceneEl.removeChild(defaultCamera);\n}\n"]},"metadata":{},"sourceType":"script"}