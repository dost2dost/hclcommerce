{"ast":null,"code":"var _jsxFileName = \"F:\\\\_HCLCommece\\\\src\\\\component\\\\HeadMenu.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nclass HeadMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.MenuLink = (menuItem, ind) => {\n      if (ind === this.state.currMenu) {\n        this.setState({\n          showMenu: false,\n          currMenu: -1,\n          cssClass: 'closeMenu parentUL'\n        });\n      } else {\n        this.setState({\n          showMenu: true,\n          currMenu: ind,\n          cssClass: 'openMenu parentUL'\n        });\n      }\n    };\n\n    this.CloseMenu = () => {\n      this.setState({\n        showMenu: false,\n        currMenu: -1,\n        cssClass: 'closeMenu parentUL'\n      });\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: false,\n      menu: '',\n      showMenu: false,\n      currMenu: -1,\n      cssClass: 'closeMenu parentUL'\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.getAppSet.API.searchMenuUrl).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json,\n        parentItem: false,\n        childItem: false\n      });\n    }).catch(e => console.log(e));\n  }\n\n  render() {\n    let output = '';\n\n    if (this.state.showMenu) {\n      let currArr = this.state.items.catalogGroupView[this.state.currMenu];\n      console.log(currArr);\n      output = React.createElement(\"ul\", {\n        className: \"parentUL\",\n        className: this.state.cssClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"parentItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/Category/?${currArr.uniqueID}&cat=Main`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, currArr.identifier)), currArr.catalogGroupView.map((subChild, index) => React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: subChild.uniqueID.length > 2 ? `/Category/?${subChild.uniqueID}` : `/Category/?${subChild.uniqueID}&cat=Main`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, subChild.identifier), subChild.catalogGroupView ? React.createElement(\"ul\", {\n        className: \"childUL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, subChild.catalogGroupView.map((fourthChild, index) => React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/Category/?${fourthChild.uniqueID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, fourthChild.identifier)))) : null)));\n    }\n\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n    let display = {\n      display: 'none'\n    };\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"menuHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"showMenu\",\n        onClick: () => this.CloseMenu(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, output), [items].map((item, index) => React.createElement(\"div\", {\n        key: item.recordSetTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, item.catalogGroupView.map((insideItems, index) => React.createElement(\"div\", {\n        className: `cateItem menuItems${index}`,\n        key: insideItems.uniqueID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: () => this.MenuLink(insideItems.uniqueID, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, insideItems.name))))))\n      /* <div className=\"menuHolder\">\r\n           {[items].map((item, index) => (\r\n              <div key={item.recordSetTotal}>\r\n                  <a className=\"products\" href=\"#\">Products</a>\r\n                  <ul  className=\"unorderList\">\r\n                     \r\n                  {item.CatalogGroupView.map(insideItems => (\r\n                    <li key={insideItems.uniqueID}>\r\n               \r\n                  <Link  to={`/Category/?${insideItems.uniqueID}`}>{insideItems.name}</Link>\r\n                  </li>\r\n                  ))}\r\n                  </ul>\r\n              </div>\r\n          ))}\r\n      </div>*/\n      ;\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getResourceName: state.userToken.resourceName,\n    getWCToken: state.userToken.WCToken,\n    getWCTrustedToken: state.userToken.WCTrustedToken,\n    getProductsInCart: state.cart.products,\n    //getCartQuantity: state.cart.cart,\n    getSubTotal: state.cart.subTotal,\n    getOrderId: state.cart.orderId,\n    getAppSet: state.getAppSet\n  };\n};\n\nexport default connect(mapStateToProps, null)(HeadMenu);","map":{"version":3,"sources":["F:/_HCLCommece/src/component/HeadMenu.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","connect","HeadMenu","constructor","props","MenuLink","menuItem","ind","state","currMenu","setState","showMenu","cssClass","CloseMenu","items","isLoaded","menu","componentDidMount","fetch","getAppSet","API","searchMenuUrl","then","res","json","parentItem","childItem","catch","e","console","log","render","output","currArr","catalogGroupView","uniqueID","identifier","map","subChild","index","length","fourthChild","display","item","recordSetTotal","insideItems","name","mapStateToProps","getResourceName","userToken","resourceName","getWCToken","WCToken","getWCTrustedToken","WCTrustedToken","getProductsInCart","cart","products","getSubTotal","subTotal","getOrderId","orderId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HeadMenu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            items: [],\r\n            isLoaded: false,\r\n            menu: '',\r\n            showMenu: false,\r\n            currMenu: -1,\r\n            cssClass : 'closeMenu parentUL'\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        fetch(this.props.getAppSet.API.searchMenuUrl)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: json,\r\n                parentItem: false,\r\n                childItem: false\r\n                \r\n            })\r\n\r\n        }).catch(e => console.log(e));\r\n    }\r\n\r\n    MenuLink = (menuItem, ind) =>{\r\n        if(ind === this.state.currMenu){\r\n            this.setState({\r\n                showMenu: false,\r\n                currMenu: -1,\r\n                cssClass: 'closeMenu parentUL'\r\n            }) \r\n        }\r\n        else{\r\n        this.setState({\r\n            showMenu: true,\r\n            currMenu: ind,\r\n            cssClass: 'openMenu parentUL'\r\n        }) \r\n        }\r\n    }\r\n    CloseMenu = () =>{\r\n        this.setState({\r\n            showMenu: false,\r\n            currMenu: -1,\r\n            cssClass: 'closeMenu parentUL'\r\n        }) \r\n    }\r\n    render(){\r\n        let output = '' \r\n        if(this.state.showMenu){\r\n            let currArr = this.state.items.catalogGroupView[this.state.currMenu]\r\n            console.log(currArr)\r\n            output=(\r\n                <ul className=\"parentUL\" className={this.state.cssClass}>\r\n                    <li className=\"parentItem\">\r\n                        <Link to={`/Category/?${currArr.uniqueID}&cat=Main`}>{currArr.identifier}</Link>\r\n                    </li>\r\n                {currArr.catalogGroupView.map((subChild, index) => (\r\n                    <li key={index}>\r\n                        <Link to={subChild.uniqueID.length > 2 ? `/Category/?${subChild.uniqueID}` : `/Category/?${subChild.uniqueID}&cat=Main` }>{subChild.identifier}</Link>\r\n                        {subChild.catalogGroupView ? <ul className=\"childUL\">\r\n                            {subChild.catalogGroupView.map((fourthChild, index )=> (\r\n                                <li key={index}><Link to={`/Category/?${fourthChild.uniqueID}`}>{fourthChild.identifier}</Link></li>\r\n                            ))}\r\n                        </ul> : null}\r\n\r\n                    </li>\r\n                ))}      \r\n            </ul> \r\n            )\r\n        }\r\n        var {isLoaded, items}= this.state;\r\n        let display = {display: 'none'}\r\n        if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            return(\r\n                  <div className=\"menuHolder\">\r\n                        <div className=\"showMenu\" onClick={()=>this.CloseMenu()} >{output}</div>\r\n                    {[items].map((item, index) => (\r\n                        <div key={item.recordSetTotal}>\r\n                            {item.catalogGroupView.map((insideItems, index) => (\r\n                        <div className={`cateItem menuItems${index}`} key={insideItems.uniqueID}>\r\n                        {/* <Link to={`/SubCategory/?${insideItems.uniqueID}`}>{insideItems.name}</Link> */}\r\n                        <a onClick={()=>this.MenuLink(insideItems.uniqueID, index)}>{insideItems.name}</a>\r\n                        {/* <div className={insideItems.uniqueID} style={display}>\r\n                              <ul>\r\n                                {insideItems.catalogGroupView.map((subChild, index) => (\r\n                                    <li key={index}>{subChild.identifier}\r\n                                        {subChild.catalogGroupView ? <ul>\r\n                                            {subChild.catalogGroupView.map((fourthChild, index )=> (\r\n                                                <li key={index}>{fourthChild.identifier}</li>\r\n                                            ))}\r\n                                        </ul> : null}\r\n                                    </li>\r\n                                ))}      \r\n                            </ul>          \r\n                        </div> */}\r\n                        </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                    {/* <div className=\"cateItem\" >\r\n                        <Link to={`/Category/?all`}>All-Categories</Link>\r\n                    </div> */}\r\n                </div>  \r\n\r\n                /* <div className=\"menuHolder\">\r\n                     {[items].map((item, index) => (\r\n                        <div key={item.recordSetTotal}>\r\n                            <a className=\"products\" href=\"#\">Products</a>\r\n                            <ul  className=\"unorderList\">\r\n                               \r\n                            {item.CatalogGroupView.map(insideItems => (\r\n                              <li key={insideItems.uniqueID}>\r\n                         \r\n                            <Link  to={`/Category/?${insideItems.uniqueID}`}>{insideItems.name}</Link>\r\n                            </li>\r\n                            ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>*/\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        getResourceName : state.userToken.resourceName,\r\n        getWCToken : state.userToken.WCToken,\r\n        getWCTrustedToken: state.userToken.WCTrustedToken,\r\n        getProductsInCart : state.cart.products,\r\n        //getCartQuantity: state.cart.cart,\r\n        getSubTotal :state.cart.subTotal,\r\n        getOrderId : state.cart.orderId,\r\n\r\n        getAppSet: state.getAppSet\r\n    }\r\n};\r\nexport default connect(mapStateToProps, null)(HeadMenu);"]},"metadata":{},"sourceType":"module"}