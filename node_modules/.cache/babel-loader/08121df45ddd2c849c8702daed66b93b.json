{"ast":null,"code":"var _jsxFileName = \"F:\\\\_HCLCommece\\\\src\\\\component\\\\LeftMenuMainCat.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport queryString from 'querystring';\nimport { connect } from \"react-redux\";\n\nclass LeftMenuMainCat extends Component {\n  constructor(props) {\n    super(props);\n    this.lastCall = '';\n\n    this.updateCateCall = searchString => {\n      let getSign = searchString.indexOf(\"&\");\n      let cateCall = searchString.substring(1, getSign);\n      let goUrl = this.props.getAppSet.API.productByParentCate + cateCall; //console.log(goUrl)\n\n      fetch(goUrl).then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n        console.log(json);\n      }).catch(e => console.log(e));\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: false,\n      categoryCalled: ''\n    }; //console.log(props)\n  }\n\n  componentDidMount(props) {\n    this.updateCateCall(this.props.callFromSubCat.subSrch);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps != this.props) {\n      this.updateCateCall(this.props.callFromSubCat.subSrch);\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n    console.log(items.recordSetCount);\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"menuHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, [items].map((item, index) => React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, item.CatalogGroupView.map(each => React.createElement(\"div\", {\n        className: \"cateItem\",\n        key: each.uniqueID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: each.uniqueID.length > 2 ? `/Category/?${each.uniqueID}` : `/Category/?${each.uniqueID}&cat=Main`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, each.name))))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getAppSet: state.getAppSet\n  };\n};\n\nexport default connect(mapStateToProps, null)(LeftMenuMainCat);","map":{"version":3,"sources":["F:/_HCLCommece/src/component/LeftMenuMainCat.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","queryString","connect","LeftMenuMainCat","constructor","props","lastCall","updateCateCall","searchString","getSign","indexOf","cateCall","substring","goUrl","getAppSet","API","productByParentCate","fetch","then","res","json","setState","isLoaded","items","console","log","catch","e","state","categoryCalled","componentDidMount","callFromSubCat","subSrch","componentDidUpdate","prevProps","prevState","snapshot","render","recordSetCount","map","item","index","CatalogGroupView","each","uniqueID","length","name","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport queryString from 'querystring'\r\nimport { connect } from \"react-redux\";\r\n\r\nclass LeftMenuMainCat extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            items: [],\r\n            isLoaded: false,\r\n            categoryCalled: ''\r\n        };\r\n        //console.log(props)\r\n    }\r\n        componentDidMount(props){\r\n\r\n            this.updateCateCall(this.props.callFromSubCat.subSrch)\r\n            \r\n        }\r\n    lastCall = '';\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(prevProps != this.props){\r\n            this.updateCateCall(this.props.callFromSubCat.subSrch)\r\n            \r\n        }\r\n    }\r\n    updateCateCall = (searchString) => { \r\n        let getSign = searchString.indexOf(\"&\");\r\n        let cateCall = searchString.substring(1,getSign);\r\n        let goUrl = this.props.getAppSet.API.productByParentCate+cateCall\r\n        //console.log(goUrl)\r\n         fetch(goUrl)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: json,\r\n            })\r\n            console.log(json)\r\n        }).catch(e => console.log(e)); \r\n        \r\n    }\r\n    render(){\r\n        var {isLoaded, items}= this.state;\r\n        console.log(items.recordSetCount)\r\n        if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{ \r\n            return(\r\n                <div className=\"menuHolder\">\r\n                        \r\n                    {[items].map((item, index) => (\r\n                        <div key={index}>\r\n                            {item.CatalogGroupView.map(each => (\r\n                                <div className=\"cateItem\" key={each.uniqueID}>\r\n                                    <Link to={each.uniqueID.length > 2 ? `/Category/?${each.uniqueID}` : `/Category/?${each.uniqueID}&cat=Main`}>\r\n                                        {each.name} \r\n                                        {/* ({each.count}) */}\r\n                                        </Link>\r\n                                </div>\r\n                            ))}  \r\n                        </div>\r\n                    ))} \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n\r\n        getAppSet: state.getAppSet\r\n    }\r\n};\r\nexport default connect(mapStateToProps, null)(LeftMenuMainCat);"]},"metadata":{},"sourceType":"module"}