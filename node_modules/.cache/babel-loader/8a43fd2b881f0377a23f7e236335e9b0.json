{"ast":null,"code":"/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { property } from 'lit-element';\nimport { $container, $scene } from '../model-viewer-base.js';\nconst $showMlModel = Symbol('showMlModel');\nconst $hideMlModel = Symbol('hideMlModel');\nconst $isHeliosBrowser = Symbol('isHeliosBrowser');\nconst $mlModel = Symbol('mlModel'); // NOTE(cdata): In tests, this seemed to line the hologram up with the scale of\n// an inline rendering in WebGL. Probably needs some tweaking, and possibly even\n// user-configuration, before we perfect this:\n\nconst DEFAULT_HOLOGRAM_INLINE_SCALE = 0.65; // NOTE(cdata): This probably needs to scale proportionally with the dimensions\n// of the inline model, but we need more experimentation to decide how that\n// should work:\n\nconst DEFAULT_HOLOGRAM_Z_OFFSET = '150px';\n/**\n * In order to use Magic Leap support, please include prismatic.js in your\n * page. If you do not include prismatic.js, Magic Leap support will not work.\n *\n * @see https://www.npmjs.com/package/@magicleap/prismatic\n */\n\nexport const MagicLeapMixin = ModelViewerElement => {\n  var _a, _b;\n\n  class MagicLeapModelViewerElement extends ModelViewerElement {\n    constructor() {\n      super(...arguments);\n      this.magicLeap = false; // NOTE(cdata): Check at construction time because the check is cheap\n      // and it makes testing easier\n\n      this[_a] = self.mlWorld != null;\n      this[_b] = null;\n    }\n\n    updated(changedProperties) {\n      super.updated(changedProperties);\n\n      if (!this[$isHeliosBrowser]) {\n        return;\n      }\n\n      if (!(changedProperties.has('magicLeap') || changedProperties.has('src'))) {\n        return;\n      }\n\n      const scene = this[$scene];\n\n      if (this.magicLeap) {\n        const hasMlModel = !!customElements.get('ml-model');\n\n        if (!hasMlModel) {\n          console.warn('<ml-model> is not registered. Is prismatic.js loaded?');\n        }\n\n        scene.pause();\n        this[$container].setAttribute('style', 'display: none;');\n        this[$showMlModel]();\n\n        if (changedProperties.has('src') && this.src && this.src !== this[$mlModel].getAttribute('src')) {\n          this[$mlModel].setAttribute('src', this.src);\n        }\n      } else {\n        this[$hideMlModel]();\n        scene.resume();\n        this[$container].removeAttribute('style');\n      }\n    }\n\n    [(_a = $isHeliosBrowser, _b = $mlModel, $showMlModel)]() {\n      if (this[$mlModel] == null) {\n        this[$mlModel] = document.createElement('ml-model');\n        this[$mlModel].setAttribute('style', 'display: block; top: 0; left: 0; width: 100%; height: 100%'); // @see https://creator.magicleap.com/learn/guides/prismatic-getting-started\n\n        this[$mlModel].setAttribute('model-scale', `${DEFAULT_HOLOGRAM_INLINE_SCALE} ${DEFAULT_HOLOGRAM_INLINE_SCALE} ${DEFAULT_HOLOGRAM_INLINE_SCALE}`);\n        this[$mlModel].setAttribute('z-offset', DEFAULT_HOLOGRAM_Z_OFFSET);\n        this[$mlModel].setAttribute('extractable', 'true');\n        this[$mlModel].setAttribute('extracted-scale', '1');\n        this[$mlModel].setAttribute('environment-lighting', 'color-intensity: 5;');\n\n        if (this.src != null) {\n          this[$mlModel].setAttribute('src', this.src);\n        }\n      }\n\n      this.shadowRoot.appendChild(this[$mlModel]);\n    }\n\n    [$hideMlModel]() {\n      if (this[$mlModel] == null) {\n        return;\n      }\n\n      if (this[$mlModel].parentNode != null) {\n        this[$mlModel].parentNode.removeChild(this[$mlModel]);\n      }\n    }\n\n  }\n\n  __decorate([property({\n    type: Boolean,\n    attribute: 'magic-leap'\n  })], MagicLeapModelViewerElement.prototype, \"magicLeap\", void 0);\n\n  return MagicLeapModelViewerElement;\n};","map":{"version":3,"sources":["../../src/features/magic-leap.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit-element';\n\nimport ModelViewerElementBase, {$container, $scene} from '../model-viewer-base.js';\nimport {Constructor} from '../utilities.js';\n\nconst $showMlModel = Symbol('showMlModel');\nconst $hideMlModel = Symbol('hideMlModel');\nconst $isHeliosBrowser = Symbol('isHeliosBrowser');\nconst $mlModel = Symbol('mlModel');\n\n\n// NOTE(cdata): In tests, this seemed to line the hologram up with the scale of\n// an inline rendering in WebGL. Probably needs some tweaking, and possibly even\n// user-configuration, before we perfect this:\nconst DEFAULT_HOLOGRAM_INLINE_SCALE = 0.65;\n\n// NOTE(cdata): This probably needs to scale proportionally with the dimensions\n// of the inline model, but we need more experimentation to decide how that\n// should work:\nconst DEFAULT_HOLOGRAM_Z_OFFSET = '150px';\n\nexport declare interface MagicLeapInterface {\n  magicLeap: boolean;\n}\n\n/**\n * In order to use Magic Leap support, please include prismatic.js in your\n * page. If you do not include prismatic.js, Magic Leap support will not work.\n *\n * @see https://www.npmjs.com/package/@magicleap/prismatic\n */\nexport const MagicLeapMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<MagicLeapInterface>&T => {\n  class MagicLeapModelViewerElement extends ModelViewerElement {\n    @property({type: Boolean, attribute: 'magic-leap'})\n    magicLeap: boolean = false;\n\n    // NOTE(cdata): Check at construction time because the check is cheap\n    // and it makes testing easier\n    private[$isHeliosBrowser]: boolean = self.mlWorld != null;\n\n    private[$mlModel]: HTMLElement|null = null;\n\n    updated(changedProperties: Map<string, any>) {\n      super.updated(changedProperties);\n\n      if (!this[$isHeliosBrowser]) {\n        return;\n      }\n\n      if (!(changedProperties.has('magicLeap') ||\n            changedProperties.has('src'))) {\n        return;\n      }\n\n      const scene = this[$scene];\n\n      if (this.magicLeap) {\n        const hasMlModel = !!customElements.get('ml-model');\n\n        if (!hasMlModel) {\n          console.warn('<ml-model> is not registered. Is prismatic.js loaded?');\n        }\n\n        scene.pause();\n        this[$container].setAttribute('style', 'display: none;');\n        this[$showMlModel]();\n\n        if (changedProperties.has('src') && this.src &&\n            this.src !== this[$mlModel]!.getAttribute('src')) {\n          this[$mlModel]!.setAttribute('src', this.src);\n        }\n      } else {\n        this[$hideMlModel]();\n        scene.resume();\n        this[$container].removeAttribute('style');\n      }\n    }\n\n    private[$showMlModel]() {\n      if (this[$mlModel] == null) {\n        this[$mlModel] = document.createElement('ml-model');\n        this[$mlModel]!.setAttribute(\n            'style',\n            'display: block; top: 0; left: 0; width: 100%; height: 100%');\n        // @see https://creator.magicleap.com/learn/guides/prismatic-getting-started\n        this[$mlModel]!.setAttribute(\n            'model-scale',\n            `${DEFAULT_HOLOGRAM_INLINE_SCALE} ${\n                DEFAULT_HOLOGRAM_INLINE_SCALE} ${\n                DEFAULT_HOLOGRAM_INLINE_SCALE}`);\n        this[$mlModel]!.setAttribute('z-offset', DEFAULT_HOLOGRAM_Z_OFFSET);\n        this[$mlModel]!.setAttribute('extractable', 'true');\n        this[$mlModel]!.setAttribute('extracted-scale', '1');\n        this[$mlModel]!.setAttribute(\n            'environment-lighting', 'color-intensity: 5;');\n\n        if (this.src != null) {\n          this[$mlModel]!.setAttribute('src', this.src);\n        }\n      }\n\n      this.shadowRoot!.appendChild(this[$mlModel]!);\n    }\n\n    private[$hideMlModel]() {\n      if (this[$mlModel] == null) {\n        return;\n      }\n\n      if (this[$mlModel]!.parentNode != null) {\n        this[$mlModel]!.parentNode!.removeChild(this[$mlModel]!);\n      }\n    }\n  }\n\n  return MagicLeapModelViewerElement;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}