{"ast":null,"code":"var _jsxFileName = \"C:\\\\HCL_Internal\\\\src\\\\component\\\\SubCategory.js\";\nimport React, { Component } from 'react';\nimport { parse } from 'query-string';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport LeftMenu from './LeftMenu';\nimport queryString from 'querystring';\nimport './category.css';\n\nclass SubCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromServer = getCat => {\n      console.log(getCat);\n      let getUrl = `http://192.168.7.167/wcs/resources/store/11901/categoryview/byId/${getCat}`; //const { handle } = this.props.location.search; \n\n      fetch(getUrl) //+this.props.location.search.substring(1.1))\n      .then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json //categoryCalled: this.props.location.search,\n          //callSubCate : this.props.location.search.substring(1.1)\n\n        });\n      });\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: false,\n      categoryCalled: ''\n    };\n  } // componentDidUpdate(props){\n  //     fetch('http://192.168.7.167/wcs/resources/store/11901/categoryview/byId/'+this.props.location.search.substring(1.1))\n  //     .then(res => res.json())\n  //     .then(json => {\n  //         this.setState({\n  //             isLoaded: true,\n  //             items: json,\n  //             categoryCalled: this.props.location.search.substring(1.1)\n  //         })\n  //     });\n  //     console.log(props);\n  // }\n\n\n  componentWillReceiveProps(props, state) {\n    // if(this.props.location.search != this.state.categoryCalled){\n    this.getDataFromServer(this.props.callCat); //}\n  }\n\n  componentDidMount(props) {\n    console.log('compnnent did mount rn');\n    this.getDataFromServer(this.props.callCat);\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"300\",\n        height: \"200\",\n        src: \"/Images/loader.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    } else {\n      // console.log(this.props.location.search.cat+\"-----\")calledItem = {this.state.callSubCate}\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, [items].map(item => React.createElement(\"div\", {\n        key: item.recordSetTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, item.CatalogGroupView.map(insideItems => React.createElement(\"div\", {\n        className: \"product\",\n        key: insideItems.uniqueID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/Product/?${insideItems.uniqueID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: `/Images/${insideItems.uniqueID}.jpg`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, insideItems.name), React.createElement(\"div\", {\n        className: \"addToCart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/Product/?${insideItems.uniqueID}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Add to Cart\")))))));\n    }\n  }\n\n}\n\nexport default SubCategory;","map":{"version":3,"sources":["C:/HCL_Internal/src/component/SubCategory.js"],"names":["React","Component","parse","BrowserRouter","Router","Route","Link","ReactDOM","LeftMenu","queryString","SubCategory","constructor","props","getDataFromServer","getCat","console","log","getUrl","fetch","then","res","json","setState","isLoaded","items","state","categoryCalled","componentWillReceiveProps","callCat","componentDidMount","render","map","item","recordSetTotal","CatalogGroupView","insideItems","uniqueID","name"],"mappings":"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","sourcesContent":["import React, {Component}  from 'react';\r\nimport { parse } from 'query-string';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'; \r\nimport ReactDOM from 'react-dom'; \r\nimport LeftMenu from './LeftMenu';\r\nimport queryString from 'querystring'\r\nimport './category.css';\r\n\r\nclass SubCategory extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            items: [],\r\n            isLoaded: false,\r\n            categoryCalled: '' \r\n        }\r\n    \r\n    }\r\n    \r\n    // componentDidUpdate(props){\r\n    //     fetch('http://192.168.7.167/wcs/resources/store/11901/categoryview/byId/'+this.props.location.search.substring(1.1))\r\n    //     .then(res => res.json())\r\n    //     .then(json => {\r\n    //         this.setState({\r\n    //             isLoaded: true,\r\n    //             items: json,\r\n    //             categoryCalled: this.props.location.search.substring(1.1)\r\n    //         })\r\n    //     });\r\n    //     console.log(props);\r\n    // }\r\n    \r\n    componentWillReceiveProps(props, state){ \r\n        // if(this.props.location.search != this.state.categoryCalled){\r\n            \r\n            this.getDataFromServer(this.props.callCat);\r\n            \r\n         //}\r\n         \r\n    }\r\n    componentDidMount(props){\r\n        console.log('compnnent did mount rn');\r\n        this.getDataFromServer(this.props.callCat);  \r\n    } \r\n    getDataFromServer = (getCat) => {\r\n       console.log(getCat)\r\n        let getUrl = `http://192.168.7.167/wcs/resources/store/11901/categoryview/byId/${getCat}`\r\n        //const { handle } = this.props.location.search; \r\n        fetch(getUrl)//+this.props.location.search.substring(1.1))\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: json,\r\n                //categoryCalled: this.props.location.search,\r\n                //callSubCate : this.props.location.search.substring(1.1)\r\n            })\r\n        });\r\n        \r\n        \r\n    }\r\n    render(){\r\n         \r\n        var { isLoaded, items} = this.state;\r\n        if(!isLoaded){\r\n            return <div><img width=\"300\" height=\"200\" src=\"/Images/loader.gif\"/></div>\r\n        }\r\n        else{\r\n           // console.log(this.props.location.search.cat+\"-----\")calledItem = {this.state.callSubCate}\r\n            return(\r\n                <div>\r\n                    {[items].map(item => (\r\n                        <div  key={item.recordSetTotal}> \r\n                        {item.CatalogGroupView.map(insideItems => (\r\n                            <div className=\"product\" key={insideItems.uniqueID}>\r\n                                <div className=\"name\">\r\n                                <Link to={`/Product/?${insideItems.uniqueID}`}>\r\n                                    <div className=\"name\"><img src={`/Images/${insideItems.uniqueID}.jpg`} /></div>\r\n                                </Link>\r\n                                </div>\r\n                                <div className=\"person\">{insideItems.name}</div> \r\n                                <div className=\"addToCart\">\r\n                                <Link to={`/Product/?${insideItems.uniqueID}`}>\r\n                                    Add to Cart\r\n                                </Link>\r\n                                </div>\r\n\r\n                            </div>\r\n                        ))} \r\n                            \r\n                    </div>\r\n                    ))}\r\n                </div>             \r\n            )\r\n        }\r\n}\r\n}\r\n \r\nexport default SubCategory;"]},"metadata":{},"sourceType":"module"}