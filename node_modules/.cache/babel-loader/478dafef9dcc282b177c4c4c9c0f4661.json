{"ast":null,"code":"/*\n  Adapted deePool by Kyle Simpson.\n  MIT License: http://getify.mit-license.org\n*/\nvar EMPTY_SLOT = Object.freeze(Object.create(null)); // Default object factory.\n\nfunction defaultObjectFactory() {\n  return {};\n}\n/**\n * Create a new pool.\n */\n\n\nmodule.exports.createPool = function createPool(objectFactory) {\n  var objPool = [];\n  var nextFreeSlot = null; // Pool location to look for a free object to use.\n\n  objectFactory = objectFactory || defaultObjectFactory;\n\n  function use() {\n    var objToUse;\n\n    if (nextFreeSlot === null || nextFreeSlot === objPool.length) {\n      grow(objPool.length || 5);\n    }\n\n    objToUse = objPool[nextFreeSlot];\n    objPool[nextFreeSlot++] = EMPTY_SLOT;\n    clearObject(objToUse);\n    return objToUse;\n  }\n\n  function recycle(obj) {\n    if (!(obj instanceof Object)) {\n      return;\n    }\n\n    if (nextFreeSlot === null || nextFreeSlot === -1) {\n      objPool[objPool.length] = obj;\n      return;\n    }\n\n    objPool[--nextFreeSlot] = obj;\n  }\n\n  function grow(count) {\n    var currentLength;\n    var i;\n    count = count === undefined ? objPool.length : count;\n\n    if (count > 0 && nextFreeSlot == null) {\n      nextFreeSlot = 0;\n    }\n\n    if (count > 0) {\n      currentLength = objPool.length;\n      objPool.length += Number(count);\n\n      for (i = currentLength; i < objPool.length; i++) {\n        // Add new obj to pool.\n        objPool[i] = objectFactory();\n      }\n    }\n\n    return objPool.length;\n  }\n\n  function size() {\n    return objPool.length;\n  }\n\n  return {\n    grow: grow,\n    pool: objPool,\n    recycle: recycle,\n    size: size,\n    use: use\n  };\n};\n\nfunction clearObject(obj) {\n  var key;\n\n  if (!obj || obj.constructor !== Object) {\n    return;\n  }\n\n  for (key in obj) {\n    obj[key] = undefined;\n  }\n}\n\nmodule.exports.clearObject = clearObject;\n\nfunction removeUnusedKeys(obj, schema) {\n  var key;\n\n  if (!obj || obj.constructor !== Object) {\n    return;\n  }\n\n  for (key in obj) {\n    if (!(key in schema)) {\n      delete obj[key];\n    }\n  }\n}\n\nmodule.exports.removeUnusedKeys = removeUnusedKeys;","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/utils/object-pool.js"],"names":["EMPTY_SLOT","Object","freeze","create","defaultObjectFactory","module","exports","createPool","objectFactory","objPool","nextFreeSlot","use","objToUse","length","grow","clearObject","recycle","obj","count","currentLength","i","undefined","Number","size","pool","key","constructor","removeUnusedKeys","schema"],"mappings":"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","sourcesContent":["/*\n  Adapted deePool by Kyle Simpson.\n  MIT License: http://getify.mit-license.org\n*/\nvar EMPTY_SLOT = Object.freeze(Object.create(null));\n\n// Default object factory.\nfunction defaultObjectFactory () { return {}; }\n\n/**\n * Create a new pool.\n */\nmodule.exports.createPool = function createPool (objectFactory) {\n  var objPool = [];\n  var nextFreeSlot = null;  // Pool location to look for a free object to use.\n\n  objectFactory = objectFactory || defaultObjectFactory;\n\n  function use () {\n    var objToUse;\n    if (nextFreeSlot === null || nextFreeSlot === objPool.length) {\n      grow(objPool.length || 5);\n    }\n    objToUse = objPool[nextFreeSlot];\n    objPool[nextFreeSlot++] = EMPTY_SLOT;\n    clearObject(objToUse);\n    return objToUse;\n  }\n\n  function recycle (obj) {\n    if (!(obj instanceof Object)) { return; }\n    if (nextFreeSlot === null || nextFreeSlot === -1) {\n      objPool[objPool.length] = obj;\n      return;\n    }\n    objPool[--nextFreeSlot] = obj;\n  }\n\n  function grow (count) {\n    var currentLength;\n    var i;\n\n    count = count === undefined ? objPool.length : count;\n    if (count > 0 && nextFreeSlot == null) {\n      nextFreeSlot = 0;\n    }\n\n    if (count > 0) {\n      currentLength = objPool.length;\n      objPool.length += Number(count);\n      for (i = currentLength; i < objPool.length; i++) {\n        // Add new obj to pool.\n        objPool[i] = objectFactory();\n      }\n    }\n\n    return objPool.length;\n  }\n\n  function size () {\n    return objPool.length;\n  }\n\n  return {\n    grow: grow,\n    pool: objPool,\n    recycle: recycle,\n    size: size,\n    use: use\n  };\n};\n\nfunction clearObject (obj) {\n  var key;\n  if (!obj || obj.constructor !== Object) { return; }\n  for (key in obj) { obj[key] = undefined; }\n}\nmodule.exports.clearObject = clearObject;\n\nfunction removeUnusedKeys (obj, schema) {\n  var key;\n  if (!obj || obj.constructor !== Object) { return; }\n  for (key in obj) {\n    if (!(key in schema)) {\n      delete obj[key];\n    }\n  }\n}\nmodule.exports.removeUnusedKeys = removeUnusedKeys;\n"]},"metadata":{},"sourceType":"script"}