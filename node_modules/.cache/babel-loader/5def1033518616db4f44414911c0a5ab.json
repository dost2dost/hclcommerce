{"ast":null,"code":"var registerGeometry = require('../core/geometry').registerGeometry;\n\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\nregisterGeometry('cylinder', {\n  schema: {\n    height: {\n      default: 1,\n      min: 0\n    },\n    openEnded: {\n      default: false\n    },\n    radius: {\n      default: 1,\n      min: 0\n    },\n    segmentsHeight: {\n      default: 18,\n      min: 1,\n      type: 'int'\n    },\n    segmentsRadial: {\n      default: 36,\n      min: 3,\n      type: 'int'\n    },\n    thetaLength: {\n      default: 360,\n      min: 0\n    },\n    thetaStart: {\n      default: 0\n    }\n  },\n  init: function (data) {\n    this.geometry = new THREE.CylinderGeometry(data.radius, data.radius, data.height, data.segmentsRadial, data.segmentsHeight, data.openEnded, degToRad(data.thetaStart), degToRad(data.thetaLength));\n  }\n});","map":{"version":3,"sources":["C:/Users/Hannuri/Desktop/RoyalCyber/my-first-app/node_modules/aframe/src/geometries/cylinder.js"],"names":["registerGeometry","require","THREE","degToRad","Math","schema","height","default","min","openEnded","radius","segmentsHeight","type","segmentsRadial","thetaLength","thetaStart","init","data","geometry","CylinderGeometry"],"mappings":"AAAA,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,gBAAnD;;AACA,IAAIE,KAAK,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAIE,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAWD,QAA1B;AAEAH,gBAAgB,CAAC,UAAD,EAAa;AAC3BK,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AAACC,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KADF;AAENC,IAAAA,SAAS,EAAE;AAACF,MAAAA,OAAO,EAAE;AAAV,KAFL;AAGNG,IAAAA,MAAM,EAAE;AAACH,MAAAA,OAAO,EAAE,CAAV;AAAaC,MAAAA,GAAG,EAAE;AAAlB,KAHF;AAING,IAAAA,cAAc,EAAE;AAACJ,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,GAAG,EAAE,CAAnB;AAAsBI,MAAAA,IAAI,EAAE;AAA5B,KAJV;AAKNC,IAAAA,cAAc,EAAE;AAACN,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,GAAG,EAAE,CAAnB;AAAsBI,MAAAA,IAAI,EAAE;AAA5B,KALV;AAMNE,IAAAA,WAAW,EAAE;AAACP,MAAAA,OAAO,EAAE,GAAV;AAAeC,MAAAA,GAAG,EAAE;AAApB,KANP;AAONO,IAAAA,UAAU,EAAE;AAACR,MAAAA,OAAO,EAAE;AAAV;AAPN,GADmB;AAW3BS,EAAAA,IAAI,EAAE,UAAUC,IAAV,EAAgB;AACpB,SAAKC,QAAL,GAAgB,IAAIhB,KAAK,CAACiB,gBAAV,CACZF,IAAI,CAACP,MADO,EACCO,IAAI,CAACP,MADN,EACcO,IAAI,CAACX,MADnB,EAC2BW,IAAI,CAACJ,cADhC,EACgDI,IAAI,CAACN,cADrD,EAEZM,IAAI,CAACR,SAFO,EAEIN,QAAQ,CAACc,IAAI,CAACF,UAAN,CAFZ,EAE+BZ,QAAQ,CAACc,IAAI,CAACH,WAAN,CAFvC,CAAhB;AAGD;AAf0B,CAAb,CAAhB","sourcesContent":["var registerGeometry = require('../core/geometry').registerGeometry;\nvar THREE = require('../lib/three');\n\nvar degToRad = THREE.Math.degToRad;\n\nregisterGeometry('cylinder', {\n  schema: {\n    height: {default: 1, min: 0},\n    openEnded: {default: false},\n    radius: {default: 1, min: 0},\n    segmentsHeight: {default: 18, min: 1, type: 'int'},\n    segmentsRadial: {default: 36, min: 3, type: 'int'},\n    thetaLength: {default: 360, min: 0},\n    thetaStart: {default: 0}\n  },\n\n  init: function (data) {\n    this.geometry = new THREE.CylinderGeometry(\n        data.radius, data.radius, data.height, data.segmentsRadial, data.segmentsHeight,\n        data.openEnded, degToRad(data.thetaStart), degToRad(data.thetaLength));\n  }\n});\n"]},"metadata":{},"sourceType":"script"}