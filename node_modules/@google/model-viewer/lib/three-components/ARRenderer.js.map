{"version":3,"file":"ARRenderer.js","sourceRoot":"","sources":["../../src/three-components/ARRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {EventDispatcher, Matrix4, PerspectiveCamera, Ray, Vector3, WebGLRenderer} from 'three';\n\nimport {$needsRender, $onResize} from '../model-viewer-base.js';\nimport {assertIsArCandidate} from '../utilities.js';\n\nimport {Damper} from './Damper.js';\nimport {ModelScene} from './ModelScene.js';\nimport {PlacementBox} from './PlacementBox.js';\nimport {Renderer} from './Renderer.js';\nimport {assertContext} from './WebGLUtils.js';\n\n// AR shadow is not user-configurable. This is to pave the way for AR lighting\n// estimation, which will be used once available in WebXR.\nconst AR_SHADOW_INTENSITY = 0.3;\nconst ROTATION_RATE = 1.5;\n// Angle down (towards bottom of screen) from camera center ray to use for hit\n// testing against the floor. This makes placement faster and more intuitive\n// assuming the phone is in portrait mode. This seems to be a reasonable\n// assumption for the start of the session and UI will lack landscape mode to\n// encourage upright use.\nconst HIT_ANGLE_DEG = 20;\n// Slow down the dampers for initial placement.\nconst INTRO_DAMPER_RATE = 0.4;\nconst SCALE_SNAP_HIGH = 1.2;\nconst SCALE_SNAP_LOW = 1 / SCALE_SNAP_HIGH;\n\nconst $presentedScene = Symbol('presentedScene');\nconst $placementBox = Symbol('placementBox');\nconst $lastTick = Symbol('lastTick');\nconst $turntableRotation = Symbol('turntableRotation');\nconst $oldShadowIntensity = Symbol('oldShadowIntensity');\nconst $oldBackground = Symbol('oldBackground');\nconst $rafId = Symbol('rafId');\nexport const $currentSession = Symbol('currentSession');\nconst $tick = Symbol('tick');\nconst $refSpace = Symbol('refSpace');\nconst $viewerRefSpace = Symbol('viewerRefSpace');\nconst $frame = Symbol('frame');\nconst $initialized = Symbol('initialized');\nconst $initialModelToWorld = Symbol('initialModelToWorld');\nconst $placementComplete = Symbol('placementComplete');\nconst $initialHitSource = Symbol('hitTestSource');\nconst $transientHitTestSource = Symbol('transiertHitTestSource');\nconst $inputSource = Symbol('inputSource');\nconst $isTranslating = Symbol('isTranslating');\nconst $isRotating = Symbol('isRotating');\nconst $isScaling = Symbol('isScaling');\nconst $lastDragPosition = Symbol('lastDragPosition');\nconst $lastScalar = Symbol('lastScalar');\nconst $goalPosition = Symbol('goalPosition');\nconst $goalYaw = Symbol('goalYaw');\nconst $goalScale = Symbol('goalScale');\nconst $xDamper = Symbol('xDamper');\nconst $yDamper = Symbol('yDamper');\nconst $zDamper = Symbol('zDamper');\nconst $yawDamper = Symbol('yawDamper');\nconst $scaleDamper = Symbol('scaleDamper');\nconst $damperRate = Symbol('damperRate');\nconst $resolveCleanup = Symbol('resolveCleanup');\n\nexport const $onWebXRFrame = Symbol('onWebXRFrame');\nconst $postSessionCleanup = Symbol('postSessionCleanup');\nconst $updateCamera = Symbol('updateCamera');\nconst $placeInitially = Symbol('placeInitially');\nconst $getHitPoint = Symbol('getHitPoint');\nconst $selectStartHandler = Symbol('selectStartHandler');\nconst $onSelectStart = Symbol('onSelectStart');\nconst $selectEndHandler = Symbol('selectHandler');\nconst $onSelectEnd = Symbol('onSelect');\nconst $fingerSeparation = Symbol('fingerSeparation');\nconst $processInput = Symbol('processInput');\nconst $moveScene = Symbol('moveScene');\n\nconst vector3 = new Vector3();\nconst matrix4 = new Matrix4();\nconst hitPosition = new Vector3();\n\nexport class ARRenderer extends EventDispatcher {\n  public threeRenderer: WebGLRenderer;\n\n  public camera: PerspectiveCamera = new PerspectiveCamera();\n\n  private[$placementBox]: PlacementBox|null = null;\n  private[$lastTick]: number|null = null;\n  private[$turntableRotation]: number|null = null;\n  private[$oldShadowIntensity]: number|null = null;\n  private[$oldBackground]: any = null;\n  private[$rafId]: number|null = null;\n  protected[$currentSession]: XRSession|null = null;\n  private[$refSpace]: XRReferenceSpace|null = null;\n  private[$viewerRefSpace]: XRReferenceSpace|null = null;\n  private[$frame]: XRFrame|null = null;\n  private[$initialHitSource]: XRHitTestSource|null = null;\n  private[$transientHitTestSource]: XRTransientInputHitTestSource|null = null;\n  private[$inputSource]: XRInputSource|null = null;\n  private[$presentedScene]: ModelScene|null = null;\n  private[$resolveCleanup]: ((...args: any[]) => void)|null = null;\n\n  private[$initialized] = false;\n  private[$initialModelToWorld] = new Matrix4();\n  private[$placementComplete] = false;\n  private[$isTranslating] = false;\n  private[$isRotating] = false;\n  private[$isScaling] = false;\n  private[$lastDragPosition] = new Vector3();\n  private[$lastScalar] = 0;\n  private[$goalPosition] = new Vector3();\n  private[$goalYaw] = 0;\n  private[$goalScale] = 1;\n  private[$xDamper] = new Damper();\n  private[$yDamper] = new Damper();\n  private[$zDamper] = new Damper();\n  private[$yawDamper] = new Damper();\n  private[$scaleDamper] = new Damper();\n  private[$damperRate] = 1;\n\n  private[$selectStartHandler] = (event: Event) =>\n      this[$onSelectStart](event as XRInputSourceEvent);\n  private[$selectEndHandler] = (event: Event) =>\n      this[$onSelectEnd](event as XRInputSourceEvent);\n\n  constructor(private renderer: Renderer) {\n    super();\n    this.threeRenderer = renderer.threeRenderer;\n    // Turn this off, as the matrix is set directly from webXR rather than using\n    // postion, rotation, scale.\n    this.camera.matrixAutoUpdate = false;\n  }\n\n  async resolveARSession(scene: ModelScene): Promise<XRSession> {\n    assertIsArCandidate();\n\n    const session: XRSession =\n        await navigator.xr!.requestSession!('immersive-ar', {\n          requiredFeatures: ['hit-test'],\n          optionalFeatures: ['dom-overlay'],\n          domOverlay: {\n            root: document.querySelector('model-viewer')!.shadowRoot!\n                      .querySelector('div.annotation-container')\n          }\n        });\n\n    const gl = assertContext(this.renderer.context3D);\n    // `makeXRCompatible` replaced `setCompatibleXRDevice` in Chrome M73 @TODO\n    // #293, handle WebXR API changes. WARNING: this can cause a GL context\n    // loss according to the spec, though current implementations don't do so.\n    await gl.makeXRCompatible();\n\n    session.updateRenderState(\n        {baseLayer: new XRWebGLLayer(session, gl, {alpha: true})});\n\n    // The render state update takes effect on the next animation frame. Wait\n    // for it so that we get a framebuffer.\n    let waitForAnimationFrame = new Promise((resolve, _reject) => {\n      session.requestAnimationFrame(() => resolve());\n    });\n    await waitForAnimationFrame;\n\n    // Redirect rendering to the WebXR offscreen framebuffer.\n    // TODO: this method should be added to three.js's exported interface.\n    (this.threeRenderer as any)\n        .setFramebuffer(session.renderState.baseLayer!.framebuffer);\n    (scene.element)[$onResize](window.screen);\n\n    return session;\n  }\n\n  /**\n   * The currently presented scene, if any\n   */\n  get presentedScene() {\n    return this[$presentedScene];\n  }\n\n  /**\n   * Resolves to true if the renderer has detected all the necessary qualities\n   * to support presentation in AR.\n   */\n  async supportsPresentation() {\n    try {\n      assertIsArCandidate();\n      return await navigator.xr!.isSessionSupported('immersive-ar');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Present a scene in AR\n   */\n  async present(scene: ModelScene): Promise<void> {\n    if (this.isPresenting) {\n      console.warn('Cannot present while a model is already presenting');\n    }\n\n    const currentSession = await this.resolveARSession(scene);\n    currentSession.addEventListener('end', () => {\n      this[$postSessionCleanup]();\n    }, {once: true});\n\n    this[$refSpace] = await currentSession.requestReferenceSpace('local');\n    this[$viewerRefSpace] =\n        await currentSession.requestReferenceSpace('viewer');\n\n    const placementBox = new PlacementBox(scene.model);\n    this[$placementComplete] = false;\n\n    scene.setCamera(this.camera);\n    this[$initialized] = false;\n    this[$damperRate] = INTRO_DAMPER_RATE;\n\n    this[$turntableRotation] = scene.yaw;\n    scene.yaw = 0;\n    this[$goalYaw] = 0;\n    this[$goalScale] = 1;\n\n    this[$oldBackground] = scene.background;\n    scene.background = null;\n\n    this[$oldShadowIntensity] = scene.shadowIntensity;\n    scene.setShadowIntensity(0);\n\n    const radians = HIT_ANGLE_DEG * Math.PI / 180;\n    const ray = new XRRay(\n        new DOMPoint(0, 0, 0),\n        new DOMPoint(0, -Math.sin(radians), -Math.cos(radians)));\n    currentSession\n        .requestHitTestSource({space: this[$viewerRefSpace]!, offsetRay: ray})\n        .then(hitTestSource => {\n          this[$initialHitSource] = hitTestSource;\n        });\n\n    this[$currentSession] = currentSession;\n    this[$presentedScene] = scene;\n    this[$placementBox] = placementBox;\n    this[$lastTick] = performance.now();\n\n    // Start the event loop.\n    this[$tick]();\n  }\n\n  /**\n   * If currently presenting a scene in AR, stops presentation and exits AR.\n   */\n  async stopPresenting() {\n    if (!this.isPresenting) {\n      return;\n    }\n\n    const cleanupPromise = new Promise((resolve) => {\n      this[$resolveCleanup] = resolve;\n    });\n\n    try {\n      const session = this[$currentSession]!;\n      session.removeEventListener('selectstart', this[$selectStartHandler]);\n      session.removeEventListener('selectend', this[$selectEndHandler]);\n\n      this[$currentSession] = null;\n      session.cancelAnimationFrame(this[$rafId]!);\n\n      await session.end();\n      await cleanupPromise;\n    } catch (error) {\n      console.warn('Error while trying to end AR session');\n      console.warn(error);\n\n      this[$postSessionCleanup]();\n    }\n  }\n\n  [$postSessionCleanup]() {\n    // The offscreen WebXR framebuffer is now invalid, switch\n    // back to the default framebuffer for canvas output.\n    // TODO: this method should be added to three.js's exported interface.\n    (this.threeRenderer as any).setFramebuffer(null);\n\n    const scene = this[$presentedScene];\n    if (scene != null) {\n      const {model, element} = scene;\n      scene.setCamera(scene.camera);\n      model.remove(this[$placementBox]!);\n\n      scene.position.set(0, 0, 0);\n      scene.scale.set(1, 1, 1);\n      model.setShadowScaleAndOffset(1, 0);\n      scene.yaw = this[$turntableRotation]!;\n      scene.setShadowIntensity(this[$oldShadowIntensity]!);\n      scene.background = this[$oldBackground];\n      model.orientHotspots(0);\n      element.requestUpdate('cameraTarget');\n      element[$needsRender]();\n\n      this.renderer.expandTo(scene.width, scene.height);\n    }\n\n    if (this[$placementBox] != null) {\n      this[$placementBox]!.dispose();\n      this[$placementBox] = null;\n    }\n\n    this[$refSpace] = null;\n    this[$presentedScene] = null;\n\n    if (this[$resolveCleanup] != null) {\n      this[$resolveCleanup]!();\n    }\n  }\n\n  /**\n   * True if a scene is currently in the process of being presented in AR\n   */\n  get isPresenting(): boolean {\n    return this[$presentedScene] != null;\n  }\n\n  [$updateCamera](view: XRView) {\n    const {camera} = this;\n    const {matrix: cameraMatrix} = camera;\n\n    cameraMatrix.fromArray(view.transform.matrix);\n    camera.updateMatrixWorld(true);\n    // position is not updated when matrix is updated.\n    camera.position.setFromMatrixPosition(cameraMatrix);\n\n    if (this[$initialHitSource] != null) {\n      // Target locked to screen center\n      const {position, model} = this[$presentedScene]!;\n      const radius = model.idealCameraDistance;\n      camera.getWorldDirection(position);\n      position.multiplyScalar(radius);\n      position.add(camera.position);\n    }\n\n    if (!this[$initialized]) {\n      camera.projectionMatrix.fromArray(view.projectionMatrix);\n      // Have to set the inverse manually when setting matrix directly. This is\n      // needed for raycasting.\n      camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);\n      // Orient model toward camera on first frame.\n      const {x, z} = camera.position;\n      const scene = this[$presentedScene]!;\n      scene.pointTowards(x, z);\n      scene.model.updateMatrixWorld(true);\n      this[$goalYaw] = scene.yaw;\n      this[$initialModelToWorld].copy(scene.model.matrixWorld);\n      this[$initialized] = true;\n    }\n\n    this[$presentedScene]!.model.orientHotspots(\n        Math.atan2(cameraMatrix.elements[1], cameraMatrix.elements[5]));\n  }\n\n  [$placeInitially](frame: XRFrame) {\n    const hitSource = this[$initialHitSource];\n    if (hitSource == null) {\n      return;\n    }\n\n    const hitTestResults = frame.getHitTestResults(hitSource);\n    if (hitTestResults.length == 0) {\n      return;\n    }\n\n    const hit = hitTestResults[0];\n    const hitMatrix = this[$getHitPoint](hit);\n    if (hitMatrix == null) {\n      return;\n    }\n\n    this.placeModel(hitMatrix);\n\n    hitSource.cancel();\n    this[$initialHitSource] = null;\n\n    const {session} = frame;\n    session.addEventListener('selectstart', this[$selectStartHandler]);\n    session.addEventListener('selectend', this[$selectEndHandler]);\n    session\n        .requestHitTestSourceForTransientInput({profile: 'generic-touchscreen'})\n        .then(hitTestSource => {\n          this[$transientHitTestSource] = hitTestSource;\n        });\n  }\n\n  [$getHitPoint](hitResult: XRHitTestResult): Vector3|null {\n    const pose = hitResult.getPose(this[$refSpace]!);\n    if (pose == null) {\n      return null;\n    }\n\n    const hitMatrix = matrix4.fromArray(pose.transform.matrix);\n    // Check that the y-coordinate of the normal is large enough that the normal\n    // is pointing up.\n    return hitMatrix.elements[5] > 0.75 ?\n        hitPosition.setFromMatrixPosition(hitMatrix) :\n        null;\n  }\n\n  /**\n   * This sets the initial model placement based on the input hit point. The\n   * bottom of the model will be placed on the floor (the shadow will rest on\n   * the input's y-coordinate). The XZ placement is found by first putting the\n   * scene's target at the hit point, drawing a ray from the camera to the\n   * target, and finding the XZ-intersection of this ray with the model's\n   * bounding box. The scene is then translated on the XZ plane to position this\n   * intersection point at the input hit point. If the ray does not intersect,\n   * the target is left at the hit point.\n   *\n   * This ensures the model is placed according to the chosen target, is not\n   * reoriented, and does not intersect the camera even when the model\n   * is large (unless the target is chosen outside of the model's bounding box).\n   */\n  placeModel(hit: Vector3) {\n    const scene = this[$presentedScene]!;\n    const {model} = scene;\n    const {min, max} = model.boundingBox;\n\n    this[$placementBox]!.show = true;\n\n    const goal = this[$goalPosition];\n    goal.copy(hit);\n    const floor = hit.y;\n\n    const origin = this.camera.position.clone();\n    const direction = hit.clone().sub(origin).normalize();\n    // Pull camera back enough to be outside of large models.\n    origin.sub(direction.multiplyScalar(model.idealCameraDistance));\n    const ray = new Ray(origin, direction.normalize());\n\n    const modelToWorld = this[$initialModelToWorld];\n    const modelPosition =\n        new Vector3().setFromMatrixPosition(modelToWorld).add(hit);\n    modelToWorld.setPosition(modelPosition);\n    const world2Model = new Matrix4().getInverse(modelToWorld);\n    ray.applyMatrix4(world2Model);\n\n    // Make the box tall so that we don't intersect the top face.\n    max.y += 10;\n    ray.intersectBox(model.boundingBox, modelPosition);\n    max.y -= 10;\n\n    if (modelPosition != null) {\n      modelPosition.applyMatrix4(modelToWorld);\n      goal.add(hit).sub(modelPosition);\n    }\n\n    // Move the scene's target to the model's floor height.\n    const target = scene.getTarget();\n    scene.setTarget(target.x, min.y, target.z);\n    // Ignore the y-coordinate and set on the floor instead.\n    goal.y = floor;\n\n    this.dispatchEvent({type: 'modelmove'});\n  }\n\n  [$onSelectStart](event: XRInputSourceEvent) {\n    const hitSource = this[$transientHitTestSource];\n    if (hitSource == null) {\n      return;\n    }\n    const fingers = this[$frame]!.getHitTestResultsForTransientInput(hitSource);\n    const scene = this[$presentedScene]!;\n    const box = this[$placementBox]!;\n\n    if (fingers.length === 1) {\n      this[$inputSource] = event.inputSource;\n      const {axes} = event.inputSource.gamepad;\n\n      const hitPosition = box.getHit(this[$presentedScene]!, axes[0], axes[1]);\n      box.show = true;\n\n      if (hitPosition != null) {\n        this[$isTranslating] = true;\n        this[$lastDragPosition].copy(hitPosition);\n      } else {\n        this[$isRotating] = true;\n        this[$lastScalar] = axes[0];\n      }\n    } else if (fingers.length === 2 && scene.canScale) {\n      box.show = true;\n      this[$isScaling] = true;\n      this[$lastScalar] = this[$fingerSeparation](fingers) / scene.scale.x;\n    }\n  }\n\n  [$onSelectEnd](_event: XRInputSourceEvent) {\n    this[$isTranslating] = false;\n    this[$isRotating] = false;\n    this[$isScaling] = false;\n    this[$inputSource] = null;\n    this[$goalPosition].y +=\n        this[$placementBox]!.offsetHeight * this[$presentedScene]!.scale.x;\n    this[$placementBox]!.show = false\n  }\n\n  [$fingerSeparation](fingers: XRTransientInputHitTestResult[]): number {\n    const fingerOne = fingers[0].inputSource.gamepad.axes;\n    const fingerTwo = fingers[1].inputSource.gamepad.axes;\n    const deltaX = fingerTwo[0] - fingerOne[0];\n    const deltaY = fingerTwo[1] - fingerOne[1];\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  }\n\n  [$processInput](frame: XRFrame) {\n    const hitSource = this[$transientHitTestSource];\n    if (hitSource == null) {\n      return;\n    }\n    if (!this[$isTranslating] && !this[$isScaling] && !this[$isRotating]) {\n      return;\n    }\n    const fingers = frame.getHitTestResultsForTransientInput(hitSource);\n    const scene = this[$presentedScene]!;\n    const scale = scene.scale.x;\n\n    // Rotating, translating and scaling are mutually exclusive operations; only\n    // one can happen at a time, but we can switch during a gesture.\n    if (this[$isScaling]) {\n      if (fingers.length < 2) {\n        // If we lose the second finger, stop scaling (in fact, stop processing\n        // input altogether until a new gesture starts).\n        this[$isScaling] = false;\n      } else {\n        const separation = this[$fingerSeparation](fingers);\n        const scale = separation / this[$lastScalar];\n        this[$goalScale] =\n            (scale < SCALE_SNAP_HIGH && scale > SCALE_SNAP_LOW) ? 1 : scale;\n      }\n      return;\n    } else if (fingers.length === 2 && scene.canScale) {\n      // If we were rotating or translating and we get a second finger, switch\n      // to scaling instead.\n      this[$isTranslating] = false;\n      this[$isRotating] = false;\n      this[$isScaling] = true;\n      this[$lastScalar] = this[$fingerSeparation](fingers) / scale;\n      return;\n    }\n\n    if (this[$isRotating]) {\n      const thisDragX = this[$inputSource]!.gamepad.axes[0];\n      this[$goalYaw] += (thisDragX - this[$lastScalar]) * ROTATION_RATE;\n      this[$lastScalar] = thisDragX;\n    } else if (this[$isTranslating]) {\n      fingers.forEach(finger => {\n        if (finger.inputSource !== this[$inputSource] ||\n            finger.results.length < 1) {\n          return;\n        }\n\n        const hit = this[$getHitPoint](finger.results[0]);\n        if (hit == null) {\n          return;\n        }\n\n        this[$goalPosition].sub(this[$lastDragPosition]);\n\n        const offset = hit.y - this[$lastDragPosition].y;\n        // When a lower floor is found, keep the model at the same height, but\n        // drop the placement box to the floor. The model falls on select end.\n        if (offset < 0) {\n          this[$placementBox]!.offsetHeight = offset / scale;\n          this[$presentedScene]!.model.setShadowScaleAndOffset(scale, offset);\n          // Interpolate hit ray up to drag plane\n          const cameraPosition = vector3.copy(this.camera.position);\n          const alpha = -offset / (cameraPosition.y - hit.y);\n          cameraPosition.multiplyScalar(alpha);\n          hit.multiplyScalar(1 - alpha).add(cameraPosition);\n        }\n\n        this[$goalPosition].add(hit);\n        this[$lastDragPosition].copy(hit);\n      });\n    }\n  }\n\n  [$moveScene](delta: number) {\n    const scene = this[$presentedScene]!;\n    const {model, position, yaw} = scene;\n    const radius = model.idealCameraDistance;\n    const goal = this[$goalPosition];\n    const oldScale = scene.scale.x;\n    const box = this[$placementBox]!;\n\n    if (this[$initialHitSource] == null &&\n        (!goal.equals(position) || this[$goalScale] !== oldScale)) {\n      let {x, y, z} = position;\n      delta *= this[$damperRate];\n      x = this[$xDamper].update(x, goal.x, delta, radius);\n      y = this[$yDamper].update(y, goal.y, delta, radius);\n      z = this[$zDamper].update(z, goal.z, delta, radius);\n      position.set(x, y, z);\n\n      const newScale =\n          this[$scaleDamper].update(oldScale, this[$goalScale], delta, 1);\n      scene.scale.set(newScale, newScale, newScale);\n\n      if (!this[$isTranslating]) {\n        const offset = goal.y - y;\n        if (this[$placementComplete]) {\n          box.offsetHeight = offset / newScale;\n          model.setShadowScaleAndOffset(newScale, offset);\n        } else if (offset === 0) {\n          this[$placementComplete] = true;\n          box.show = false;\n          scene.setShadowIntensity(AR_SHADOW_INTENSITY);\n          this[$damperRate] = 1;\n        }\n      }\n    }\n    box.updateOpacity(delta);\n    scene.updateTarget(delta);\n    // This updates the model's position, which the shadow is based on.\n    scene.updateMatrixWorld(true);\n    // yaw must be updated last, since this also updates the shadow position.\n    scene.yaw = this[$yawDamper].update(yaw, this[$goalYaw], delta, Math.PI);\n  }\n\n  [$tick]() {\n    this[$rafId] = this[$currentSession]!.requestAnimationFrame(\n        (time, frame) => this[$onWebXRFrame](time, frame));\n  }\n\n  [$onWebXRFrame](time: number, frame: XRFrame) {\n    this[$frame] = frame;\n    const pose = frame.getViewerPose(this[$refSpace]!);\n\n    // TODO: Notify external observers of tick\n    this[$tick]();\n\n    const scene = this[$presentedScene];\n    if (pose == null || scene == null) {\n      return;\n    }\n\n    this[$updateCamera](pose.views[0]);\n\n    this[$placeInitially](frame);\n\n    this[$processInput](frame);\n\n    const delta = time - this[$lastTick]!;\n    this[$moveScene](delta);\n    this.renderer.preRender(scene, time, delta);\n    this[$lastTick] = time;\n\n    // NOTE: Clearing depth caused issues on Samsung devices\n    // @see https://github.com/googlecodelabs/ar-with-webxr/issues/8\n    // this.threeRenderer.clearDepth();\n    this.threeRenderer.render(scene, this.camera);\n  }\n}\n"]}