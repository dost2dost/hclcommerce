{"version":3,"sources":["webpack://Webcam/webpack/universalModuleDefinition","webpack://Webcam/webpack/bootstrap","webpack://Webcam/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://Webcam/./src/react-webcam.tsx"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hasGetUserMedia","navigator","mediaDevices","getUserMedia","undefined","constraints","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","resolve","reject","Error","props","canvas","ctx","state","hasUserMedia","componentDidMount","Webcam","mountedInstances","push","userMediaRequested","requestUserMedia","onUserMediaError","componentDidUpdate","nextProps","audioConstraintsChanged","JSON","stringify","audioConstraints","videoConstraintsChanged","videoConstraints","minScreenshotWidthChanged","minScreenshotWidth","minScreenshotHeightChanged","minScreenshotHeight","componentWillUnmount","index","indexOf","splice","length","stream","getVideoTracks","getAudioTracks","map","track","stop","src","window","URL","revokeObjectURL","getScreenshot","getCanvas","toDataURL","screenshotFormat","screenshotQuality","video","videoHeight","canvasWidth","videoWidth","canvasHeight","forceScreenshotSourceSize","aspectRatio","clientWidth","document","createElement","width","height","getContext","mirrored","translate","scale","imageSmoothingEnabled","imageSmoothing","drawImage","sourceSelected","audio","then","forEach","instance","handleUserMedia","catch","e","id","optional","sourceId","constraint","deviceId","Array","isArray","ideal","MediaStreamTrack","getSources","sources","audioSource","videoSource","source","kind","audioSourceId","videoSourceId","err","setState","srcObject","error","createObjectURL","onUserMedia","render","style","videoStyle","transform","autoPlay","muted","playsInline","ref","rest","defaultProps"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,UACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,SAAUJ,GACQ,iBAAZC,QACdA,QAAgB,OAAID,EAAQG,QAAQ,UAEpCJ,EAAa,OAAIC,EAAQD,EAAY,OARvC,CASGO,KAAM,SAASC,GAClB,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHX,QAAS,IAUV,OANAY,EAAQH,GAAUI,KAAKZ,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOU,GAAI,EAGJV,EAAOD,QA0Df,OArDAQ,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAAShB,EAASiB,EAAMC,GAC3CV,EAAoBW,EAAEnB,EAASiB,IAClCG,OAAOC,eAAerB,EAASiB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASxB,GACX,oBAAXyB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAerB,EAASyB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAerB,EAAS,aAAc,CAAE2B,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAASlC,GAChC,IAAIiB,EAASjB,GAAUA,EAAO6B,WAC7B,WAAwB,OAAO7B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,gBClFrDxC,EAAOD,QAAUM,G,g4BCqCjB,SAASoC,IACP,SAAUC,UAAUC,eAAgBD,UAAUC,aAAaC,mBAjC5BC,IAA3BH,UAAUC,eACXD,UAAkBC,aAAe,SAMQE,IAAxCH,UAAUC,aAAaC,eACzBF,UAAUC,aAAaC,aAAe,SAASE,GAE7C,IAAMF,EACJF,UAAUE,cACVF,UAAUK,oBACVL,UAAUM,iBACVN,UAAUO,eAIZ,OAAKL,EAOE,IAAIM,QAAQ,SAASC,EAASC,GACnCR,EAAahC,KAAK8B,UAAWI,EAAaK,EAASC,KAP5CF,QAAQE,OACb,IAAIC,MAAM,sDAoCpB,kBAwBE,WAAYC,GAAZ,MACE,YAAMA,IAAM,K,OATd,EAAAC,OAAmC,KAEnC,EAAAC,IAAuC,KAQrC,EAAKC,MAAQ,CACXC,cAAc,G,EA6RpB,OAxToC,OA+BlC,YAAAC,kBAAA,WACQ,IAAEF,EAAF,KAAEA,MAAOH,EAAT,KAASA,MAEVb,KAMLmB,EAAOC,iBAAiBC,KAAK1D,MAExBqD,EAAMC,cAAiBE,EAAOG,oBACjC3D,KAAK4D,oBARLV,EAAMW,iBAAiB,+BAY3B,YAAAC,mBAAA,SAAmBC,GACT,IAAAb,EAAA,KAAAA,MAER,GAAKb,IAAL,CAMA,IAAM2B,EACJC,KAAKC,UAAUH,EAAUI,oBACzBF,KAAKC,UAAUhB,EAAMiB,kBACjBC,EACJH,KAAKC,UAAUH,EAAUM,oBACzBJ,KAAKC,UAAUhB,EAAMmB,kBACjBC,EACJP,EAAUQ,qBAAuBrB,EAAMqB,mBACnCC,EACJT,EAAUU,sBAAwBvB,EAAMuB,qBAExCL,GACAE,GACAE,KAEAxE,KAAKmD,OAAS,KACdnD,KAAKoD,IAAM,OAETY,GAA2BI,IAC7BpE,KAAK4D,wBAxBLV,EAAMW,iBAAiB,+BA4B3B,YAAAa,qBAAA,WACU,IAAArB,EAAA,KAAAA,MACFsB,EAAQnB,EAAOC,iBAAiBmB,QAAQ5E,MAC9CwD,EAAOC,iBAAiBoB,OAAOF,EAAO,GAEtCnB,EAAOG,oBAAqB,EACW,IAAnCH,EAAOC,iBAAiBqB,QAAgBzB,EAAMC,eAC5CtD,KAAK+E,OAAOC,gBAAkBhF,KAAK+E,OAAOE,gBAC5CjF,KAAK+E,OAAOC,iBAAiBE,IAAI,SAAAC,GAAS,OAAAA,EAAMC,SAChDpF,KAAK+E,OAAOE,iBAAiBC,IAAI,SAAAC,GAAS,OAAAA,EAAMC,UAE9CpF,KAAK+E,OAAwCK,OAG7C/B,EAAMgC,KACRC,OAAOC,IAAIC,gBAAgBnC,EAAMgC,OAKvC,YAAAI,cAAA,WACQ,IAAEpC,EAAF,KAAEA,MAAOH,EAAT,KAASA,MAEf,IAAKG,EAAMC,aAAc,OAAO,KAEhC,IAAMH,EAASnD,KAAK0F,YACpB,OACEvC,GACAA,EAAOwC,UAAUzC,EAAM0C,iBAAkB1C,EAAM2C,oBAInD,YAAAH,UAAA,WACQ,IAAErC,EAAF,KAAEA,MAAOH,EAAT,KAASA,MAEf,IAAKlD,KAAK8F,MACR,OAAO,KAGT,IAAKzC,EAAMC,eAAiBtD,KAAK8F,MAAMC,YAAa,OAAO,KAE3D,IAAK/F,KAAKoD,IAAK,CACb,IAAI4C,EAAchG,KAAK8F,MAAMG,WACzBC,EAAelG,KAAK8F,MAAMC,YAC9B,IAAK/F,KAAKkD,MAAMiD,0BAA2B,CACzC,IAAMC,EAAcJ,EAAcE,EAGlCA,GADAF,EAAc9C,EAAMqB,oBAAsBvE,KAAK8F,MAAMO,aACxBD,EAG3BlD,EAAMuB,qBACNyB,EAAehD,EAAMuB,sBAGrBuB,GADAE,EAAehD,EAAMuB,qBACQ2B,GAIjCpG,KAAKmD,OAASmD,SAASC,cAAc,UACrCvG,KAAKmD,OAAOqD,MAAQR,EACpBhG,KAAKmD,OAAOsD,OAASP,EACrBlG,KAAKoD,IAAMpD,KAAKmD,OAAOuD,WAAW,MAG9B,IAAEtD,EAAF,KAAEA,IAAKD,EAAP,KAAOA,OAmBb,OAjBIC,GAAOD,IAELD,EAAMyD,WACRvD,EAAIwD,UAAUzD,EAAOqD,MAAO,GAC5BpD,EAAIyD,OAAO,EAAG,IAGhBzD,EAAI0D,sBAAwB5D,EAAM6D,eAClC3D,EAAI4D,UAAUhH,KAAK8F,MAAO,EAAG,EAAG3C,EAAOqD,MAAOrD,EAAOsD,QAGjDvD,EAAMyD,WACRvD,EAAIyD,OAAO,EAAG,GACdzD,EAAIwD,WAAWzD,EAAOqD,MAAO,KAI1BrD,GAGT,YAAAS,iBAAA,WACU,IAAAV,EAAA,KAAAA,MAEF+D,EAAiB,SAAC9C,EAAkBE,GACxC,IAAM3B,EAAsC,CAC1CoD,WAAmC,IAArBzB,GAAmCA,GAG/CnB,EAAMgE,QACRxE,EAAYwE,WACkB,IAArB/C,GAAmCA,GAG9C7B,UAAUC,aACPC,aAAaE,GACbyE,KAAK,SAAApC,GACJvB,EAAOC,iBAAiB2D,QAAQ,SAAAC,GAC9B,OAAAA,EAASC,gBAAgB,KAAMvC,OAGlCwC,MAAM,SAAAC,GACLhE,EAAOC,iBAAiB2D,QAAQ,SAAAC,GAC9B,OAAAA,EAASC,gBAAgBE,QAKjC,GAAI,iBAAkBlF,UACpB2E,EAAe/D,EAAMiB,iBAAkBjB,EAAMmB,sBACxC,CACL,IAAM,EAAiB,SAAAoD,GAAM,OAAGC,SAAU,CAAC,CAAEC,SAAUF,MAEjD,EAAuB,SAAAG,GACnB,IAAAC,EAAA,EAAAA,SAER,MAAwB,iBAAbA,EACFA,EAGLC,MAAMC,QAAQF,IAAaA,EAAS/C,OAAS,EACxC+C,EAAS,GAGM,iBAAbA,GAAyBA,EAASG,MACpCH,EAASG,MAGX,MAITC,iBAAiBC,WAAW,SAAAC,GAC1B,IAAIC,EAAc,KACdC,EAAc,KAElBF,EAAQf,QAAQ,SAAAkB,GACM,UAAhBA,EAAOC,KACTH,EAAcE,EAAOb,GACI,UAAhBa,EAAOC,OAChBF,EAAcC,EAAOb,MAIzB,IAAMe,EAAgB,EAAqBtF,EAAMiB,kBAC7CqE,IACFJ,EAAcI,GAGhB,IAAMC,EAAgB,EAAqBvF,EAAMmB,kBAC7CoE,IACFJ,EAAcI,GAGhBxB,EACE,EAAemB,GACf,EAAeC,MAKrB7E,EAAOG,oBAAqB,GAG9B,YAAA2D,gBAAA,SAAgBoB,EAAK3D,GACX,IAAA7B,EAAA,KAAAA,MAER,GAAIwF,IAAQ3D,EAIV,OAHA/E,KAAK2I,SAAS,CAAErF,cAAc,SAC9BJ,EAAMW,iBAAiB6E,GAKzB1I,KAAK+E,OAASA,EAEd,IACM/E,KAAK8F,QACP9F,KAAK8F,MAAM8C,UAAY7D,GAEzB/E,KAAK2I,SAAS,CAAErF,cAAc,IAC9B,MAAOuF,GACP7I,KAAK2I,SAAS,CACZrF,cAAc,EACd+B,IAAKC,OAAOC,IAAIuD,gBAAgB/D,KAIpC7B,EAAM6F,eAGR,YAAAC,OAAA,sBACU3F,EAAF,KAAEA,MAAOH,EAAT,KAASA,MAGbgE,EAAA,EAAAA,MAWAP,GAVA,EAAAR,0BACA,EAAA4C,YACA,EAAAlF,iBACA,EAAA+B,iBACA,EAAAC,kBACA,EAAAtB,mBACA,EAAAE,oBACA,EAAAN,iBACA,EAAAE,iBACA,EAAA0C,eACA,EAAAJ,UACA,IAAAsC,aAAA,IAAQ,EAAR,KACA,0OAGIC,EAAavC,EAAW,EAAD,KAAMsC,GAAK,CAAEE,WAAcF,EAAME,WAAa,IAAE,gBAAkBF,EAE/F,OACE,2BACEG,UAAQ,EACR/D,IAAKhC,EAAMgC,IACXgE,MAAOnC,EACPoC,aAAW,EACXC,IAAK,SAAAA,GACH,EAAKzD,MAAQyD,GAEfN,MAAOC,GACHM,KAnTH,EAAAC,aAAe,CACpBvC,OAAO,EACPf,2BAA2B,EAC3BY,gBAAgB,EAChBJ,UAAU,EACVoC,YAAa,aACblF,iBAAkB,aAClB+B,iBAAkB,aAClBC,kBAAmB,KAGd,EAAApC,iBAA6B,GAE7B,EAAAE,oBAAqB,EA0S9B,EAxTA,CAAoC,aAAf,e","file":"react-webcam.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Webcam\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Webcam\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import * as React from \"react\";\n\n// polyfill based on https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n(function polyfillGetUserMedia() {\n  // Older browsers might not implement mediaDevices at all, so we set an empty object first\n  if (navigator.mediaDevices === undefined) {\n    (navigator as any).mediaDevices = {};\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n  if (navigator.mediaDevices.getUserMedia === undefined) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      // First get ahold of the legacy getUserMedia, if present\n      const getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n\n      // Some browsers just don't implement it - return a rejected promise with an error\n      // to keep a consistent interface\n      if (!getUserMedia) {\n        return Promise.reject(\n          new Error(\"getUserMedia is not implemented in this browser\")\n        );\n      }\n\n      // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n      return new Promise(function(resolve, reject) {\n        getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n    };\n  }\n})();\n\nfunction hasGetUserMedia() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n}\n\ninterface WebcamProps {\n  audio: boolean;\n  audioConstraints?: MediaStreamConstraints[\"audio\"];\n  forceScreenshotSourceSize?: boolean;\n  imageSmoothing: boolean;\n  mirrored?: boolean;\n  minScreenshotHeight?: number;\n  minScreenshotWidth?: number;\n  onUserMedia: () => void;\n  onUserMediaError: (error: string) => void;\n  screenshotFormat: \"image/webp\" | \"image/png\" | \"image/jpeg\";\n  screenshotQuality: number;\n  videoConstraints?: MediaStreamConstraints[\"video\"];\n}\n\ninterface WebcamState {\n  hasUserMedia: boolean;\n  src?: string;\n}\n\nexport default class Webcam extends React.Component<WebcamProps & React.HTMLAttributes<HTMLVideoElement>, WebcamState> {\n  static defaultProps = {\n    audio: true,\n    forceScreenshotSourceSize: false,\n    imageSmoothing: true,\n    mirrored: false,\n    onUserMedia: () => { },\n    onUserMediaError: () => { },\n    screenshotFormat: \"image/webp\",\n    screenshotQuality: 0.92,\n  };\n\n  static mountedInstances: Webcam[] = [];\n\n  static userMediaRequested = false;\n\n  canvas: HTMLCanvasElement | null = null;\n\n  ctx: CanvasRenderingContext2D | null = null;\n\n  stream: MediaStream;\n\n  video: HTMLVideoElement | null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasUserMedia: false\n    };\n  }\n\n  componentDidMount() {\n    const { state, props } = this;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    Webcam.mountedInstances.push(this);\n\n    if (!state.hasUserMedia && !Webcam.userMediaRequested) {\n      this.requestUserMedia();\n    }\n  }\n\n  componentDidUpdate(nextProps) {\n    const { props } = this;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    const audioConstraintsChanged =\n      JSON.stringify(nextProps.audioConstraints) !==\n      JSON.stringify(props.audioConstraints);\n    const videoConstraintsChanged =\n      JSON.stringify(nextProps.videoConstraints) !==\n      JSON.stringify(props.videoConstraints);\n    const minScreenshotWidthChanged =\n      nextProps.minScreenshotWidth !== props.minScreenshotWidth;\n    const minScreenshotHeightChanged =\n      nextProps.minScreenshotHeight !== props.minScreenshotHeight;\n    if (\n      videoConstraintsChanged ||\n      minScreenshotWidthChanged ||\n      minScreenshotHeightChanged\n    ) {\n      this.canvas = null;\n      this.ctx = null;\n    }\n    if (audioConstraintsChanged || videoConstraintsChanged) {\n      this.requestUserMedia();\n    }\n  }\n\n  componentWillUnmount() {\n    const { state } = this;\n    const index = Webcam.mountedInstances.indexOf(this);\n    Webcam.mountedInstances.splice(index, 1);\n\n    Webcam.userMediaRequested = false;\n    if (Webcam.mountedInstances.length === 0 && state.hasUserMedia) {\n      if (this.stream.getVideoTracks && this.stream.getAudioTracks) {\n        this.stream.getVideoTracks().map(track => track.stop());\n        this.stream.getAudioTracks().map(track => track.stop());\n      } else {\n        ((this.stream as unknown) as MediaStreamTrack).stop();\n      }\n\n      if (state.src) {\n        window.URL.revokeObjectURL(state.src);\n      }\n    }\n  }\n\n  getScreenshot() {\n    const { state, props } = this;\n\n    if (!state.hasUserMedia) return null;\n\n    const canvas = this.getCanvas();\n    return (\n      canvas &&\n      canvas.toDataURL(props.screenshotFormat, props.screenshotQuality)\n    );\n  }\n\n  getCanvas() {\n    const { state, props } = this;\n\n    if (!this.video) {\n      return null;\n    }\n\n    if (!state.hasUserMedia || !this.video.videoHeight) return null;\n\n    if (!this.ctx) {\n      let canvasWidth = this.video.videoWidth;\n      let canvasHeight = this.video.videoHeight;\n      if (!this.props.forceScreenshotSourceSize) {\n        const aspectRatio = canvasWidth / canvasHeight;\n\n        canvasWidth = props.minScreenshotWidth || this.video.clientWidth;\n        canvasHeight = canvasWidth / aspectRatio;\n\n        if (\n          props.minScreenshotHeight &&\n          canvasHeight < props.minScreenshotHeight\n        ) {\n          canvasHeight = props.minScreenshotHeight;\n          canvasWidth = canvasHeight * aspectRatio;\n        }\n      }\n\n      this.canvas = document.createElement(\"canvas\");\n      this.canvas.width = canvasWidth;\n      this.canvas.height = canvasHeight;\n      this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    const { ctx, canvas } = this;\n\n    if (ctx && canvas) {\n      // mirror the screenshot\n      if (props.mirrored) {\n        ctx.translate(canvas.width, 0);\n        ctx.scale(-1, 1);\n      }\n\n      ctx.imageSmoothingEnabled = props.imageSmoothing;\n      ctx.drawImage(this.video, 0, 0, canvas.width, canvas.height);\n\n      // invert mirroring\n      if (props.mirrored) {\n        ctx.scale(-1, 1);\n        ctx.translate(-canvas.width, 0);\n      }\n    }\n\n    return canvas;\n  }\n\n  requestUserMedia() {\n    const { props } = this;\n\n    const sourceSelected = (audioConstraints, videoConstraints) => {\n      const constraints: MediaStreamConstraints = {\n        video: typeof videoConstraints !== \"undefined\" ? videoConstraints : true\n      };\n\n      if (props.audio) {\n        constraints.audio =\n          typeof audioConstraints !== \"undefined\" ? audioConstraints : true;\n      }\n\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(stream => {\n          Webcam.mountedInstances.forEach(instance =>\n            instance.handleUserMedia(null, stream)\n          );\n        })\n        .catch(e => {\n          Webcam.mountedInstances.forEach(instance =>\n            instance.handleUserMedia(e)\n          );\n        });\n    };\n\n    if (\"mediaDevices\" in navigator) {\n      sourceSelected(props.audioConstraints, props.videoConstraints);\n    } else {\n      const optionalSource = id => ({ optional: [{ sourceId: id }] });\n\n      const constraintToSourceId = constraint => {\n        const { deviceId } = constraint;\n\n        if (typeof deviceId === \"string\") {\n          return deviceId;\n        }\n\n        if (Array.isArray(deviceId) && deviceId.length > 0) {\n          return deviceId[0];\n        }\n\n        if (typeof deviceId === \"object\" && deviceId.ideal) {\n          return deviceId.ideal;\n        }\n\n        return null;\n      };\n\n      // @ts-ignore: deprecated api\n      MediaStreamTrack.getSources(sources => {\n        let audioSource = null;\n        let videoSource = null;\n\n        sources.forEach(source => {\n          if (source.kind === \"audio\") {\n            audioSource = source.id;\n          } else if (source.kind === \"video\") {\n            videoSource = source.id;\n          }\n        });\n\n        const audioSourceId = constraintToSourceId(props.audioConstraints);\n        if (audioSourceId) {\n          audioSource = audioSourceId;\n        }\n\n        const videoSourceId = constraintToSourceId(props.videoConstraints);\n        if (videoSourceId) {\n          videoSource = videoSourceId;\n        }\n\n        sourceSelected(\n          optionalSource(audioSource),\n          optionalSource(videoSource)\n        );\n      });\n    }\n\n    Webcam.userMediaRequested = true;\n  }\n\n  handleUserMedia(err, stream?: MediaStream) {\n    const { props } = this;\n\n    if (err || !stream) {\n      this.setState({ hasUserMedia: false });\n      props.onUserMediaError(err);\n\n      return;\n    }\n\n    this.stream = stream;\n\n    try {\n      if (this.video) {\n        this.video.srcObject = stream;\n      }\n      this.setState({ hasUserMedia: true });\n    } catch (error) {\n      this.setState({\n        hasUserMedia: true,\n        src: window.URL.createObjectURL(stream)\n      });\n    }\n\n    props.onUserMedia();\n  }\n\n  render() {\n    const { state, props } = this;\n\n    const {\n      audio,\n      forceScreenshotSourceSize,\n      onUserMedia,\n      onUserMediaError,\n      screenshotFormat,\n      screenshotQuality,\n      minScreenshotWidth,\n      minScreenshotHeight,\n      audioConstraints,\n      videoConstraints,\n      imageSmoothing,\n      mirrored,\n      style = {},\n      ...rest\n    } = props;\n\n    const videoStyle = mirrored ? { ...style, transform: `${style.transform || \"\"} scaleX(-1)` } : style;\n\n    return (\n      <video\n        autoPlay\n        src={state.src}\n        muted={audio}\n        playsInline\n        ref={ref => {\n          this.video = ref;\n        }}\n        style={videoStyle}\n        {...rest}\n      />\n    );\n  }\n}\n"],"sourceRoot":""}